// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _multiply_accumulate_HH_
#define _multiply_accumulate_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "neural_network_adbkb.h"
#include "neural_network_mucud.h"

namespace ap_rtl {

struct multiply_accumulate : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<512> > cr_m_cr_V_i;
    sc_out< sc_lv<512> > cr_m_cr_V_o;
    sc_out< sc_logic > cr_m_cr_V_o_ap_vld;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    multiply_accumulate(sc_module_name name);
    SC_HAS_PROCESS(multiply_accumulate);

    ~multiply_accumulate();

    sc_trace_file* mVcdFile;

    neural_network_adbkb<1,2,512,512,512>* neural_network_adbkb_U1;
    neural_network_mucud<1,3,11,11,22>* neural_network_mucud_U2;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > i_fu_151_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<11> > p_Result_s_fu_165_p4;
    sc_signal< sc_lv<1> > exitcond_i_fu_145_p2;
    sc_signal< sc_lv<3> > i_1_fu_189_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<5> > p_Result_1_fu_213_p4;
    sc_signal< sc_lv<1> > exitcond_i2_fu_183_p2;
    sc_signal< sc_lv<4> > i_2_fu_233_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<11> > p_Result_2_fu_247_p4;
    sc_signal< sc_lv<1> > exitcond_i1_fu_227_p2;
    sc_signal< sc_lv<3> > i_3_fu_271_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<5> > p_Result_3_fu_295_p4;
    sc_signal< sc_lv<1> > exitcond_i3_fu_265_p2;
    sc_signal< sc_lv<6> > exact_e_V_fu_327_p2;
    sc_signal< sc_lv<6> > exact_e_V_reg_474;
    sc_signal< sc_lv<22> > grp_fu_406_p2;
    sc_signal< sc_lv<22> > r_V_3_reg_479;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<7> > r_V_4_fu_336_p2;
    sc_signal< sc_lv<7> > r_V_4_reg_485;
    sc_signal< sc_lv<7> > tmp_6_fu_342_p2;
    sc_signal< sc_lv<7> > tmp_6_reg_491;
    sc_signal< sc_lv<22> > r_V_fu_379_p3;
    sc_signal< sc_lv<22> > r_V_reg_496;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<11> > m1_V_reg_50;
    sc_signal< sc_lv<4> > i_assign_reg_62;
    sc_signal< sc_lv<5> > e1_V_reg_73;
    sc_signal< sc_lv<3> > i_assign_2_reg_85;
    sc_signal< sc_lv<11> > m2_V_reg_96;
    sc_signal< sc_lv<4> > i_assign_3_reg_108;
    sc_signal< sc_lv<5> > p_Val2_4_reg_119;
    sc_signal< sc_lv<3> > i_assign_5_reg_130;
    sc_signal< sc_lv<512> > grp_fu_394_p2;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<32> > i_assign_cast5_fu_141_p1;
    sc_signal< sc_lv<1> > p_Repl2_s_fu_157_p3;
    sc_signal< sc_lv<4> > i_assign_2_cast_fu_179_p1;
    sc_signal< sc_lv<4> > i_assign_1_fu_195_p2;
    sc_signal< sc_lv<32> > i_assign_1_cast_fu_201_p1;
    sc_signal< sc_lv<32> > i_assign_2_cast4_fu_175_p1;
    sc_signal< sc_lv<1> > p_Repl2_1_fu_205_p3;
    sc_signal< sc_lv<32> > i_assign_3_cast3_fu_223_p1;
    sc_signal< sc_lv<1> > p_Repl2_2_fu_239_p3;
    sc_signal< sc_lv<4> > i_assign_5_cast_fu_261_p1;
    sc_signal< sc_lv<4> > i_assign_4_fu_277_p2;
    sc_signal< sc_lv<32> > i_assign_4_cast_fu_283_p1;
    sc_signal< sc_lv<32> > i_assign_5_cast2_fu_257_p1;
    sc_signal< sc_lv<1> > p_Repl2_3_fu_287_p3;
    sc_signal< sc_lv<6> > rhs_V_1_fu_317_p1;
    sc_signal< sc_lv<6> > tmp1_fu_321_p2;
    sc_signal< sc_lv<6> > lhs_V_1_fu_313_p1;
    sc_signal< sc_lv<7> > lhs_V_cast_fu_333_p1;
    sc_signal< sc_lv<22> > tmp_6_cast_fu_358_p1;
    sc_signal< sc_lv<32> > tmp_5_fu_355_p1;
    sc_signal< sc_lv<32> > tmp_2_cast_fu_366_p1;
    sc_signal< sc_lv<32> > tmp_3_fu_369_p2;
    sc_signal< sc_lv<1> > tmp_fu_348_p3;
    sc_signal< sc_lv<22> > tmp_7_fu_361_p2;
    sc_signal< sc_lv<22> > tmp_1_fu_375_p1;
    sc_signal< sc_lv<512> > grp_fu_394_p1;
    sc_signal< sc_lv<11> > grp_fu_406_p0;
    sc_signal< sc_lv<11> > grp_fu_406_p1;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    sc_signal< sc_lv<22> > grp_fu_406_p00;
    sc_signal< sc_lv<22> > grp_fu_406_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<11> ap_const_lv11_400;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<16> ap_const_lv16_2;
    static const sc_lv<6> ap_const_lv6_31;
    static const sc_lv<7> ap_const_lv7_71;
    static const sc_lv<7> ap_const_lv7_F;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_cr_m_cr_V_o();
    void thread_cr_m_cr_V_o_ap_vld();
    void thread_exact_e_V_fu_327_p2();
    void thread_exitcond_i1_fu_227_p2();
    void thread_exitcond_i2_fu_183_p2();
    void thread_exitcond_i3_fu_265_p2();
    void thread_exitcond_i_fu_145_p2();
    void thread_grp_fu_394_p1();
    void thread_grp_fu_406_p0();
    void thread_grp_fu_406_p00();
    void thread_grp_fu_406_p1();
    void thread_grp_fu_406_p10();
    void thread_i_1_fu_189_p2();
    void thread_i_2_fu_233_p2();
    void thread_i_3_fu_271_p2();
    void thread_i_assign_1_cast_fu_201_p1();
    void thread_i_assign_1_fu_195_p2();
    void thread_i_assign_2_cast4_fu_175_p1();
    void thread_i_assign_2_cast_fu_179_p1();
    void thread_i_assign_3_cast3_fu_223_p1();
    void thread_i_assign_4_cast_fu_283_p1();
    void thread_i_assign_4_fu_277_p2();
    void thread_i_assign_5_cast2_fu_257_p1();
    void thread_i_assign_5_cast_fu_261_p1();
    void thread_i_assign_cast5_fu_141_p1();
    void thread_i_fu_151_p2();
    void thread_lhs_V_1_fu_313_p1();
    void thread_lhs_V_cast_fu_333_p1();
    void thread_p_Repl2_1_fu_205_p3();
    void thread_p_Repl2_2_fu_239_p3();
    void thread_p_Repl2_3_fu_287_p3();
    void thread_p_Repl2_s_fu_157_p3();
    void thread_p_Result_1_fu_213_p4();
    void thread_p_Result_2_fu_247_p4();
    void thread_p_Result_3_fu_295_p4();
    void thread_p_Result_s_fu_165_p4();
    void thread_r_V_4_fu_336_p2();
    void thread_r_V_fu_379_p3();
    void thread_rhs_V_1_fu_317_p1();
    void thread_tmp1_fu_321_p2();
    void thread_tmp_1_fu_375_p1();
    void thread_tmp_2_cast_fu_366_p1();
    void thread_tmp_3_fu_369_p2();
    void thread_tmp_5_fu_355_p1();
    void thread_tmp_6_cast_fu_358_p1();
    void thread_tmp_6_fu_342_p2();
    void thread_tmp_7_fu_361_p2();
    void thread_tmp_fu_348_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
