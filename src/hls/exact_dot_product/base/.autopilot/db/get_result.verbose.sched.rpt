

================================================================
== Vivado HLS Report for 'get_result'
================================================================
* Date:           Mon Apr  9 09:45:19 2018

* Version:        2017.4 (Build 2086221 on Fri Dec 15 21:13:33 MST 2017)
* Project:        exact_dot_product
* Solution:       base
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   5.00|      4.06|        0.62|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    3|   26|    3|   26|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------------+-----+-----+----------+-----------+-----------+------+----------+
        |                |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |    Loop Name   | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------------+-----+-----+----------+-----------+-----------+------+----------+
        |- GetMantissa   |   10|   10|         1|          -|          -|    10|    no    |
        |- FlipMantissa  |   10|   10|         1|          -|          -|    10|    no    |
        +----------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 9
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / (!p_Repl2_4)
	4  / (p_Repl2_4)
2 --> 
	3  / true
3 --> 
	7  / (!tmp_4)
	9  / (tmp_4)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	8  / (!exitcond1)
	9  / (exitcond1)
9 --> 
	9  / (p_Repl2_4 & !exitcond)

* FSM state operations: 

 <State 1> : 4.06ns
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%CompleteRegister_m_c_1 = call i72 @_ssdm_op_Read.ap_auto.i72(i72 %CompleteRegister_m_cr_V_read)"
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%CompleteRegister_m_c = sext i72 %CompleteRegister_m_c_1 to i128"
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%p_Repl2_4 = call i1 @_ssdm_op_BitSelect.i1.i72.i32(i72 %CompleteRegister_m_c_1, i32 71)" [exact_dot_product/complete_register.cpp:19]
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "br i1 %p_Repl2_4, label %._crit_edge.0_ifconv, label %.preheader704.0_ifconv" [exact_dot_product/complete_register.cpp:23]
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%tmp_7 = call i8 @_ssdm_op_PartSelect.i8.i72.i32.i32(i72 %CompleteRegister_m_c_1, i32 64, i32 71)" [exact_dot_product/complete_register.cpp:28]
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%p_Result_1 = sext i8 %tmp_7 to i64" [exact_dot_product/complete_register.cpp:28]
ST_1 : Operation 16 [1/1] (4.06ns)   --->   "%tmp_10 = call i64 @llvm.ctlz.i64(i64 %p_Result_1, i1 true) nounwind" [exact_dot_product/complete_register.cpp:28]   --->   Core 59 'CTLZ' <Latency = 0> <II = 1> <Delay = 4.06> <FuncUnit> <Opcode : 'ctlz'> <InPorts = 1> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (1.55ns)   --->   "%tmp_11 = icmp eq i8 %tmp_7, 0" [exact_dot_product/complete_register.cpp:28]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%p_Result_2 = trunc i72 %CompleteRegister_m_c_1 to i64" [exact_dot_product/complete_register.cpp:28]
ST_1 : Operation 19 [1/1] (4.06ns)   --->   "%tmp_2 = call i64 @llvm.ctlz.i64(i64 %p_Result_2, i1 true) nounwind" [exact_dot_product/complete_register.cpp:28]   --->   Core 59 'CTLZ' <Latency = 0> <II = 1> <Delay = 4.06> <FuncUnit> <Opcode : 'ctlz'> <InPorts = 1> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%tmp_14 = trunc i64 %tmp_2 to i8" [exact_dot_product/complete_register.cpp:28]
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%tmp_15 = trunc i64 %tmp_10 to i8" [exact_dot_product/complete_register.cpp:28]
ST_1 : Operation 22 [1/1] (0.88ns)   --->   "%flipped_V = xor i72 %CompleteRegister_m_c_1, -1" [exact_dot_product/complete_register.cpp:25]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%tmp = call i8 @_ssdm_op_PartSelect.i8.i72.i32.i32(i72 %flipped_V, i32 64, i32 71)" [exact_dot_product/complete_register.cpp:26]
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%p_Result_s_7 = trunc i72 %flipped_V to i64" [exact_dot_product/complete_register.cpp:26]

 <State 2> : 3.29ns
ST_2 : Operation 25 [1/1] (1.91ns)   --->   "%tmp_13 = add i8 %tmp_14, %tmp_15" [exact_dot_product/complete_register.cpp:28]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (1.37ns)   --->   "%leading_signs_V_1 = select i1 %tmp_11, i8 %tmp_13, i8 %tmp_15" [exact_dot_product/complete_register.cpp:28]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

 <State 3> : 3.32ns
ST_3 : Operation 27 [1/1] (1.55ns)   --->   "%tmp_4 = icmp eq i8 %leading_signs_V_1, -128" [exact_dot_product/complete_register.cpp:29]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 28 [1/1] (1.76ns)   --->   "br i1 %tmp_4, label %4, label %_ZN11ap_int_baseILi128ELb1ELb0EE17countLeadingZerosEv.exit._crit_edge" [exact_dot_product/complete_register.cpp:29]

 <State 4> : 4.06ns
ST_4 : Operation 29 [1/1] (0.00ns)   --->   "%p_Result_s = sext i8 %tmp to i64" [exact_dot_product/complete_register.cpp:26]
ST_4 : Operation 30 [1/1] (4.06ns)   --->   "%tmp_1 = call i64 @llvm.ctlz.i64(i64 %p_Result_s, i1 true) nounwind" [exact_dot_product/complete_register.cpp:26]   --->   Core 59 'CTLZ' <Latency = 0> <II = 1> <Delay = 4.06> <FuncUnit> <Opcode : 'ctlz'> <InPorts = 1> <OutPorts = 1>
ST_4 : Operation 31 [1/1] (1.55ns)   --->   "%tmp_3 = icmp eq i8 %tmp, 0" [exact_dot_product/complete_register.cpp:26]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 32 [1/1] (4.06ns)   --->   "%tmp_s = call i64 @llvm.ctlz.i64(i64 %p_Result_s_7, i1 true) nounwind" [exact_dot_product/complete_register.cpp:26]   --->   Core 59 'CTLZ' <Latency = 0> <II = 1> <Delay = 4.06> <FuncUnit> <Opcode : 'ctlz'> <InPorts = 1> <OutPorts = 1>
ST_4 : Operation 33 [1/1] (0.00ns)   --->   "%tmp_8 = trunc i64 %tmp_s to i8" [exact_dot_product/complete_register.cpp:26]
ST_4 : Operation 34 [1/1] (0.00ns)   --->   "%tmp_9 = trunc i64 %tmp_1 to i8" [exact_dot_product/complete_register.cpp:26]

 <State 5> : 3.29ns
ST_5 : Operation 35 [1/1] (1.91ns)   --->   "%tmp_5 = add i8 %tmp_8, %tmp_9" [exact_dot_product/complete_register.cpp:26]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 36 [1/1] (1.37ns)   --->   "%leading_signs_V = select i1 %tmp_3, i8 %tmp_5, i8 %tmp_9" [exact_dot_product/complete_register.cpp:26]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

 <State 6> : 1.77ns
ST_6 : Operation 37 [1/1] (1.76ns)   --->   "br label %_ZN11ap_int_baseILi128ELb1ELb0EE17countLeadingZerosEv.exit._crit_edge" [exact_dot_product/complete_register.cpp:27]

 <State 7> : 2.87ns
ST_7 : Operation 38 [1/1] (0.00ns)   --->   "%p_s = phi i8 [ %leading_signs_V, %._crit_edge.0_ifconv ], [ %leading_signs_V_1, %.preheader704.0_ifconv ]"
ST_7 : Operation 39 [1/1] (0.00ns)   --->   "%tmp_16 = trunc i8 %p_s to i5" [exact_dot_product/complete_register.cpp:35]
ST_7 : Operation 40 [1/1] (1.78ns)   --->   "%tmp_6 = sub i5 0, %tmp_16" [exact_dot_product/complete_register.cpp:35]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 41 [1/1] (1.09ns)   --->   "%exponent_V = xor i5 %tmp_6, -16" [exact_dot_product/complete_register.cpp:35]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 42 [1/1] (0.00ns)   --->   "%rhs_V_cast = zext i8 %p_s to i9" [exact_dot_product/complete_register.cpp:40]
ST_7 : Operation 43 [1/1] (1.91ns)   --->   "%addconv = sub i9 126, %rhs_V_cast" [exact_dot_product/complete_register.cpp:40]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 44 [1/1] (1.76ns)   --->   "br label %1" [exact_dot_product/complete_register.cpp:39]

 <State 8> : 2.87ns
ST_8 : Operation 45 [1/1] (0.00ns)   --->   "%p_Val2_2 = phi i10 [ 0, %_ZN11ap_int_baseILi128ELb1ELb0EE17countLeadingZerosEv.exit._crit_edge ], [ %mantissa_V, %_ifconv ]"
ST_8 : Operation 46 [1/1] (0.00ns)   --->   "%i_op_assign = phi i4 [ 0, %_ZN11ap_int_baseILi128ELb1ELb0EE17countLeadingZerosEv.exit._crit_edge ], [ %i, %_ifconv ]"
ST_8 : Operation 47 [1/1] (0.00ns)   --->   "%i_op_assign_cast3 = zext i4 %i_op_assign to i9" [exact_dot_product/complete_register.cpp:39]
ST_8 : Operation 48 [1/1] (1.30ns)   --->   "%exitcond1 = icmp eq i4 %i_op_assign, -6" [exact_dot_product/complete_register.cpp:39]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 49 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10)"
ST_8 : Operation 50 [1/1] (1.73ns)   --->   "%i = add i4 %i_op_assign, 1" [exact_dot_product/complete_register.cpp:39]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 51 [1/1] (0.00ns)   --->   "br i1 %exitcond1, label %2, label %_ifconv" [exact_dot_product/complete_register.cpp:39]
ST_8 : Operation 52 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @p_str5) nounwind" [exact_dot_product/complete_register.cpp:39]
ST_8 : Operation 53 [1/1] (1.93ns)   --->   "%r_V = sub i9 %addconv, %i_op_assign_cast3" [exact_dot_product/complete_register.cpp:40]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node tmp_18)   --->   "%tmp_17 = call i1 @_ssdm_op_BitSelect.i1.i9.i32(i9 %r_V, i32 8)" [exact_dot_product/complete_register.cpp:40]
ST_8 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node tmp_18)   --->   "%rev = xor i1 %tmp_17, true" [exact_dot_product/complete_register.cpp:40]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 56 [1/1] (1.73ns)   --->   "%bvh_d_index = sub i4 -7, %i_op_assign" [exact_dot_product/complete_register.cpp:42]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 57 [1/1] (0.00ns)   --->   "%index_assign_cast = zext i4 %bvh_d_index to i32" [exact_dot_product/complete_register.cpp:42]
ST_8 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node tmp_18)   --->   "%index_assign_1_cast = sext i9 %r_V to i32" [exact_dot_product/complete_register.cpp:42]
ST_8 : Operation 59 [1/1] (0.00ns) (grouped into LUT with out node tmp_18)   --->   "%p_Repl2_1 = call i1 @_ssdm_op_BitSelect.i1.i128.i32(i128 %CompleteRegister_m_c, i32 %index_assign_1_cast)" [exact_dot_product/complete_register.cpp:42]
ST_8 : Operation 60 [1/1] (0.93ns) (out node of the LUT)   --->   "%tmp_18 = and i1 %p_Repl2_1, %rev" [exact_dot_product/complete_register.cpp:42]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 61 [1/1] (0.00ns)   --->   "%tmp_18_cast = zext i1 %tmp_18 to i64" [exact_dot_product/complete_register.cpp:42]
ST_8 : Operation 62 [1/1] (0.00ns)   --->   "%mantissa_V = call i10 @_ssdm_op_BitSet.i10.i10.i32.i64(i10 %p_Val2_2, i32 %index_assign_cast, i64 %tmp_18_cast)" [exact_dot_product/complete_register.cpp:42]
ST_8 : Operation 63 [1/1] (0.00ns)   --->   "br label %1" [exact_dot_product/complete_register.cpp:39]
ST_8 : Operation 64 [1/1] (1.76ns)   --->   "br i1 %p_Repl2_4, label %.preheader.preheader, label %.loopexit" [exact_dot_product/complete_register.cpp:48]
ST_8 : Operation 65 [1/1] (1.76ns)   --->   "br label %.preheader" [exact_dot_product/complete_register.cpp:49]

 <State 9> : 3.54ns
ST_9 : Operation 66 [1/1] (0.00ns)   --->   "%p_Val2_1 = phi i10 [ %p_Result_3, %3 ], [ %p_Val2_2, %.preheader.preheader ]"
ST_9 : Operation 67 [1/1] (0.00ns)   --->   "%bvh_d_index_2 = phi i4 [ %i_1, %3 ], [ 0, %.preheader.preheader ]"
ST_9 : Operation 68 [1/1] (0.00ns)   --->   "%index_assign_2_cast1 = zext i4 %bvh_d_index_2 to i32" [exact_dot_product/complete_register.cpp:49]
ST_9 : Operation 69 [1/1] (1.30ns)   --->   "%exitcond = icmp eq i4 %bvh_d_index_2, -6" [exact_dot_product/complete_register.cpp:49]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 70 [1/1] (0.00ns)   --->   "%empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10)"
ST_9 : Operation 71 [1/1] (1.73ns)   --->   "%i_1 = add i4 %bvh_d_index_2, 1" [exact_dot_product/complete_register.cpp:49]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 72 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %.loopexit.loopexit, label %3" [exact_dot_product/complete_register.cpp:49]
ST_9 : Operation 73 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([13 x i8]* @p_str6) nounwind" [exact_dot_product/complete_register.cpp:49]
ST_9 : Operation 74 [1/1] (0.00ns)   --->   "%tmp_21 = call i1 @_ssdm_op_BitSelect.i1.i10.i32(i10 %p_Val2_1, i32 %index_assign_2_cast1)" [exact_dot_product/complete_register.cpp:50]
ST_9 : Operation 75 [1/1] (0.93ns)   --->   "%tmp_12 = xor i1 %tmp_21, true" [exact_dot_product/complete_register.cpp:50]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 76 [1/1] (0.00ns)   --->   "%p_Repl2_2 = zext i1 %tmp_12 to i64" [exact_dot_product/complete_register.cpp:50]
ST_9 : Operation 77 [1/1] (0.00ns)   --->   "%p_Result_3 = call i10 @_ssdm_op_BitSet.i10.i10.i32.i64(i10 %p_Val2_1, i32 %index_assign_2_cast1, i64 %p_Repl2_2)" [exact_dot_product/complete_register.cpp:50]
ST_9 : Operation 78 [1/1] (0.00ns)   --->   "br label %.preheader" [exact_dot_product/complete_register.cpp:49]
ST_9 : Operation 79 [1/1] (1.76ns)   --->   "br label %.loopexit"
ST_9 : Operation 80 [1/1] (0.00ns)   --->   "%p_Repl2_s = phi i10 [ %p_Val2_2, %2 ], [ %p_Val2_1, %.loopexit.loopexit ]"
ST_9 : Operation 81 [1/1] (0.00ns)   --->   "%p_Result_4 = call i16 @_ssdm_op_BitConcatenate.i16.i1.i5.i10(i1 %p_Repl2_4, i5 %exponent_V, i10 %p_Repl2_s)" [exact_dot_product/complete_register.cpp:54]
ST_9 : Operation 82 [1/1] (1.76ns)   --->   "br label %4" [exact_dot_product/complete_register.cpp:56]
ST_9 : Operation 83 [1/1] (0.00ns)   --->   "%agg_result_V = phi i16 [ %p_Result_4, %.loopexit ], [ 0, %.preheader704.0_ifconv ]"
ST_9 : Operation 84 [1/1] (0.00ns)   --->   "ret i16 %agg_result_V" [exact_dot_product/complete_register.cpp:57]


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5ns, clock uncertainty: 0.625ns.

 <State 1>: 4.06ns
The critical path consists of the following:
	wire read on port 'CompleteRegister_m_cr_V_read' [2]  (0 ns)
	'ctlz' operation ('tmp_10', exact_dot_product/complete_register.cpp:28) [9]  (4.06 ns)

 <State 2>: 3.29ns
The critical path consists of the following:
	'add' operation ('tmp_13', exact_dot_product/complete_register.cpp:28) [15]  (1.92 ns)
	'select' operation ('leading_signs.V', exact_dot_product/complete_register.cpp:28) [16]  (1.37 ns)

 <State 3>: 3.32ns
The critical path consists of the following:
	'icmp' operation ('tmp_4', exact_dot_product/complete_register.cpp:29) [17]  (1.55 ns)
	multiplexor before 'phi' operation ('__Result__') with incoming values : ('__Result__', exact_dot_product/complete_register.cpp:54) [87]  (1.77 ns)

 <State 4>: 4.06ns
The critical path consists of the following:
	'ctlz' operation ('tmp_1', exact_dot_product/complete_register.cpp:26) [23]  (4.06 ns)

 <State 5>: 3.29ns
The critical path consists of the following:
	'add' operation ('tmp_5', exact_dot_product/complete_register.cpp:26) [29]  (1.92 ns)
	'select' operation ('leading_signs.V', exact_dot_product/complete_register.cpp:26) [30]  (1.37 ns)

 <State 6>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('leading_signs.V') with incoming values : ('leading_signs.V', exact_dot_product/complete_register.cpp:28) ('leading_signs.V', exact_dot_product/complete_register.cpp:26) [33]  (1.77 ns)

 <State 7>: 2.87ns
The critical path consists of the following:
	'phi' operation ('leading_signs.V') with incoming values : ('leading_signs.V', exact_dot_product/complete_register.cpp:28) ('leading_signs.V', exact_dot_product/complete_register.cpp:26) [33]  (0 ns)
	'sub' operation ('tmp_6', exact_dot_product/complete_register.cpp:35) [35]  (1.78 ns)
	'xor' operation ('exponent.V', exact_dot_product/complete_register.cpp:35) [36]  (1.09 ns)

 <State 8>: 2.87ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', exact_dot_product/complete_register.cpp:39) [42]  (0 ns)
	'sub' operation ('r.V', exact_dot_product/complete_register.cpp:40) [50]  (1.94 ns)
	'xor' operation ('rev', exact_dot_product/complete_register.cpp:40) [52]  (0 ns)
	'and' operation ('tmp_18', exact_dot_product/complete_register.cpp:42) [57]  (0.931 ns)

 <State 9>: 3.54ns
The critical path consists of the following:
	'phi' operation ('__Result__') with incoming values : ('mantissa.V', exact_dot_product/complete_register.cpp:42) ('__Result__', exact_dot_product/complete_register.cpp:50) [66]  (0 ns)
	multiplexor before 'phi' operation ('__Val2__') with incoming values : ('mantissa.V', exact_dot_product/complete_register.cpp:42) ('__Result__', exact_dot_product/complete_register.cpp:50) [83]  (1.77 ns)
	'phi' operation ('__Val2__') with incoming values : ('mantissa.V', exact_dot_product/complete_register.cpp:42) ('__Result__', exact_dot_product/complete_register.cpp:50) [83]  (0 ns)
	multiplexor before 'phi' operation ('__Result__') with incoming values : ('__Result__', exact_dot_product/complete_register.cpp:54) [87]  (1.77 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
