<profile>

<section name = "Vivado HLS Report for 'neural_network'" level="0">
<item name = "Date">Tue Apr  3 14:51:58 2018
</item>
<item name = "Version">2017.4 (Build 2086221 on Fri Dec 15 21:13:33 MST 2017)</item>
<item name = "Project">exact_dot_product</item>
<item name = "Solution">base</item>
<item name = "Product family">zynq</item>
<item name = "Target device">xc7z020clg400-1</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing (ns)">
<section name = "" level="1">
<item name = "Target clock period (ns)">5.00</item>
<item name = "Clock uncertainty (ns)">0.62</item>
<item name = "Estimated clock period (ns)">6.64</item>
</section>
</item>
<item name = "Latency (clock cycles)">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">, min, max, min, max, Type</keys>
<column name="">808720, 808720, 808720, 808720, none</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="7">Instance, Module, min, max, min, max, Type</keys>
<column name="grp_get_result_fu_1664">get_result, 4, 4, 1, 1, function</column>
<column name="grp_multiply_accumulate_fu_1669">multiply_accumulate, 6, 6, 1, 1, function</column>
<column name="grp_multiply_accumulate_fu_1677">multiply_accumulate, 6, 6, 1, 1, function</column>
<column name="grp_multiply_accumulate_fu_1685">multiply_accumulate, 6, 6, 1, 1, function</column>
<column name="grp_multiply_accumulate_fu_1693">multiply_accumulate, 6, 6, 1, 1, function</column>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
<column name="- Loop 1">31, 31, 1, -, -, 32, no</column>
<column name="- Loop 2">9, 9, 1, -, -, 10, no</column>
<column name="- memcpy.inputs.addr.mem.V">785, 785, 3, 1, 1, 784, yes</column>
<column name="- memcpy.bias_1.addr.mem.V">33, 33, 3, 1, 1, 32, yes</column>
<column name="- memcpy.bias_2.addr.mem.V">11, 11, 3, 1, 1, 10, yes</column>
<column name="- Layer1_memcpy.weights_1.addr.mem.V">802816, 802816, 33, 32, 1, 25088, yes</column>
<column name="- ReLU">39, 39, 9, 1, 1, 32, yes</column>
<column name="- Layer2_memcpy.weights_2.addr.mem.V">4825, 4825, 41, 15, 1, 320, yes</column>
<column name="- Result">90, 90, 9, -, -, 10, no</column>
<column name="- memcpy.out.V.l2_result.V.addr">11, 11, 3, 1, 1, 10, yes</column>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="5">Name, BRAM_18K, DSP48E, FF, LUT</keys>
<column name="DSP">-, -, -, -</column>
<column name="Expression">-, -, 0, 759</column>
<column name="FIFO">-, -, -, -</column>
<column name="Instance">24, 4, 8022, 5657</column>
<column name="Memory">17, -, 190, 33</column>
<column name="Multiplexer">-, -, -, 2791</column>
<column name="Register">0, -, 8300, 96</column>
<specialColumn name="Available">280, 220, 106400, 53200</specialColumn>
<specialColumn name="Utilization (%)">14, 1, 15, 17</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="6">Instance, Module, BRAM_18K, DSP48E, FF, LUT</keys>
<column name="grp_get_result_fu_1664">get_result, 4, 0, 841, 1119</column>
<column name="grp_multiply_accumulate_fu_1669">multiply_accumulate, 4, 1, 1401, 650</column>
<column name="grp_multiply_accumulate_fu_1677">multiply_accumulate, 4, 1, 1401, 650</column>
<column name="grp_multiply_accumulate_fu_1685">multiply_accumulate, 4, 1, 1401, 650</column>
<column name="grp_multiply_accumulate_fu_1693">multiply_accumulate, 4, 1, 1401, 650</column>
<column name="neural_network_AXILiteS_s_axi_U">neural_network_AXILiteS_s_axi, 0, 0, 264, 424</column>
<column name="neural_network_mem_V_m_axi_U">neural_network_mem_V_m_axi, 2, 0, 537, 677</column>
<column name="neural_network_out_V_m_axi_U">neural_network_out_V_m_axi, 2, 0, 537, 677</column>
<column name="neural_network_urmb6_U9">neural_network_urmb6, 0, 0, 239, 160</column>
</table>
</item>
<item name = "DSP48"><table name="" hasTotal="0">
<keys size="3">Instance, Module, Expression</keys>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="9">Memory, Module, BRAM_18K, FF, LUT, Words, Bits, Banks, W*Bits*Banks</keys>
<column name="accums_1_m_cr_V_U">neural_network_achbi, 8, 0, 0, 32, 128, 1, 4096</column>
<column name="accums_2_m_cr_V_U">neural_network_acibs, 8, 0, 0, 10, 128, 1, 1280</column>
<column name="inputs_U">neural_network_injbC, 1, 0, 0, 784, 16, 1, 12544</column>
<column name="l1_result_V_U">neural_network_l1kbM, 0, 30, 8, 32, 15, 1, 480</column>
<column name="l2_result_V_U">neural_network_l2lbW, 0, 32, 3, 10, 16, 1, 160</column>
<column name="weights_1_U">neural_network_wedEe, 0, 32, 8, 32, 16, 1, 512</column>
<column name="bias_1_U">neural_network_wedEe, 0, 32, 8, 32, 16, 1, 512</column>
<column name="weights_2_U">neural_network_weeOg, 0, 32, 3, 10, 16, 1, 160</column>
<column name="bias_2_U">neural_network_weeOg, 0, 32, 3, 10, 16, 1, 160</column>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="7">Name, BRAM_18K, FF, LUT, Depth, Bits, Size:D*B</keys>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP48E, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
<column name="i_1_fu_2386_p2">+, 0, 0, 15, 1, 6</column>
<column name="i_2_fu_2490_p2">+, 0, 0, 13, 4, 1</column>
<column name="i_fu_2289_p2">+, 0, 0, 15, 6, 1</column>
<column name="i_s_fu_2250_p2">+, 0, 0, 17, 10, 1</column>
<column name="indvar_flatten_next1_fu_2360_p2">+, 0, 0, 16, 1, 9</column>
<column name="indvar_flatten_next_fu_2230_p2">+, 0, 0, 22, 15, 1</column>
<column name="indvar_next1_fu_2177_p2">+, 0, 0, 15, 6, 1</column>
<column name="indvar_next2_fu_2204_p2">+, 0, 0, 13, 4, 1</column>
<column name="indvar_next3_fu_2264_p2">+, 0, 0, 15, 6, 1</column>
<column name="indvar_next4_fu_2460_p2">+, 0, 0, 13, 1, 4</column>
<column name="indvar_next5_fu_2517_p2">+, 0, 0, 13, 4, 1</column>
<column name="indvar_next_fu_2150_p2">+, 0, 0, 17, 10, 1</column>
<column name="p_sum_cast_mid2_v_fu_2440_p2">+, 0, 0, 40, 33, 33</column>
<column name="tmp_1_fu_2100_p2">+, 0, 0, 15, 5, 1</column>
<column name="tmp_21_fu_2348_p2">+, 0, 0, 16, 9, 9</column>
<column name="tmp_21_mid1_fu_2418_p2">+, 0, 0, 16, 9, 9</column>
<column name="tmp_5_fu_2117_p2">+, 0, 0, 13, 4, 1</column>
<column name="ap_block_pp0_stage0_11001">and, 0, 0, 8, 1, 1</column>
<column name="ap_block_pp1_stage0_11001">and, 0, 0, 8, 1, 1</column>
<column name="ap_block_pp2_stage0_11001">and, 0, 0, 8, 1, 1</column>
<column name="ap_block_pp3_stage1_11001">and, 0, 0, 8, 1, 1</column>
<column name="ap_block_pp5_stage14_11001">and, 0, 0, 8, 1, 1</column>
<column name="ap_block_pp5_stage6_11001">and, 0, 0, 8, 1, 1</column>
<column name="ap_block_pp6_stage0_11001">and, 0, 0, 8, 1, 1</column>
<column name="ap_block_state11_pp0_stage0_iter1">and, 0, 0, 8, 1, 1</column>
<column name="ap_block_state123_io">and, 0, 0, 8, 1, 1</column>
<column name="ap_block_state151_io">and, 0, 0, 8, 1, 1</column>
<column name="ap_block_state162_io">and, 0, 0, 8, 1, 1</column>
<column name="ap_block_state21_pp1_stage0_iter1">and, 0, 0, 8, 1, 1</column>
<column name="ap_block_state31_pp2_stage0_iter1">and, 0, 0, 8, 1, 1</column>
<column name="ap_block_state3_io">and, 0, 0, 8, 1, 1</column>
<column name="ap_block_state66_pp3_stage1_iter0">and, 0, 0, 8, 1, 1</column>
<column name="ap_condition_2882">and, 0, 0, 8, 1, 1</column>
<column name="ap_condition_4237">and, 0, 0, 8, 1, 1</column>
<column name="ap_predicate_op1011_call_state70">and, 0, 0, 8, 1, 1</column>
<column name="ap_predicate_op1490_readreq_state123">and, 0, 0, 8, 1, 1</column>
<column name="exitcond1_fu_2144_p2">icmp, 0, 0, 13, 10, 9</column>
<column name="exitcond2_fu_2171_p2">icmp, 0, 0, 11, 6, 7</column>
<column name="exitcond3_fu_2236_p2">icmp, 0, 0, 11, 6, 7</column>
<column name="exitcond4_fu_2283_p2">icmp, 0, 0, 11, 6, 7</column>
<column name="exitcond5_fu_2198_p2">icmp, 0, 0, 9, 4, 4</column>
<column name="exitcond6_fu_2372_p2">icmp, 0, 0, 9, 4, 4</column>
<column name="exitcond9_fu_2511_p2">icmp, 0, 0, 9, 4, 4</column>
<column name="exitcond_flatten1_fu_2354_p2">icmp, 0, 0, 13, 9, 9</column>
<column name="exitcond_flatten_fu_2224_p2">icmp, 0, 0, 13, 15, 14</column>
<column name="exitcond_fu_2484_p2">icmp, 0, 0, 9, 4, 4</column>
<column name="ifzero5_fu_2465_p2">icmp, 0, 0, 9, 4, 4</column>
<column name="ifzero_fu_2269_p2">icmp, 0, 0, 11, 6, 7</column>
<column name="tmp_29_fu_2455_p2">icmp, 0, 0, 13, 9, 1</column>
<column name="tmp_3_fu_2111_p2">icmp, 0, 0, 11, 5, 2</column>
<column name="tmp_7_fu_2128_p2">icmp, 0, 0, 9, 4, 4</column>
<column name="i5_mid2_fu_2424_p3">select, 0, 0, 6, 1, 6</column>
<column name="indvar3_mid2_fu_2242_p3">select, 0, 0, 6, 1, 1</column>
<column name="indvar4_mid2_fu_2378_p3">select, 0, 0, 4, 1, 1</column>
<column name="l1_result_V_d0">select, 0, 0, 15, 1, 1</column>
<column name="tmp_13_cast_mid2_v_v_fu_2256_p3">select, 0, 0, 10, 1, 10</column>
<column name="tmp_21_cast_mid2_v_fu_2431_p3">select, 0, 0, 9, 1, 9</column>
<column name="ap_enable_pp0">xor, 0, 0, 8, 1, 2</column>
<column name="ap_enable_pp1">xor, 0, 0, 8, 1, 2</column>
<column name="ap_enable_pp2">xor, 0, 0, 8, 1, 2</column>
<column name="ap_enable_pp3">xor, 0, 0, 8, 1, 2</column>
<column name="ap_enable_pp4">xor, 0, 0, 8, 1, 2</column>
<column name="ap_enable_pp5">xor, 0, 0, 8, 1, 2</column>
<column name="ap_enable_pp6">xor, 0, 0, 8, 1, 2</column>
<column name="ap_enable_reg_pp0_iter1">xor, 0, 0, 8, 2, 1</column>
<column name="ap_enable_reg_pp1_iter1">xor, 0, 0, 8, 2, 1</column>
<column name="ap_enable_reg_pp2_iter1">xor, 0, 0, 8, 2, 1</column>
<column name="ap_enable_reg_pp3_iter1">xor, 0, 0, 8, 2, 1</column>
<column name="ap_enable_reg_pp4_iter1">xor, 0, 0, 8, 2, 1</column>
<column name="ap_enable_reg_pp5_iter1">xor, 0, 0, 8, 2, 1</column>
<column name="ap_enable_reg_pp6_iter1">xor, 0, 0, 8, 2, 1</column>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
<column name="accums_1_m_cr_V_address0">157, 35, 5, 175</column>
<column name="accums_1_m_cr_V_address1">153, 34, 5, 170</column>
<column name="accums_1_m_cr_V_d0">38, 7, 128, 896</column>
<column name="accums_1_m_cr_V_d1">33, 6, 128, 768</column>
<column name="accums_2_m_cr_V_address0">65, 16, 4, 64</column>
<column name="accums_2_m_cr_V_address1">65, 16, 4, 64</column>
<column name="accums_2_m_cr_V_d0">38, 7, 128, 896</column>
<column name="accums_2_m_cr_V_d1">21, 4, 128, 512</column>
<column name="ap_NS_fsm">536, 125, 1, 125</column>
<column name="ap_enable_reg_pp0_iter1">9, 2, 1, 2</column>
<column name="ap_enable_reg_pp0_iter2">9, 2, 1, 2</column>
<column name="ap_enable_reg_pp1_iter1">9, 2, 1, 2</column>
<column name="ap_enable_reg_pp1_iter2">9, 2, 1, 2</column>
<column name="ap_enable_reg_pp2_iter1">9, 2, 1, 2</column>
<column name="ap_enable_reg_pp2_iter2">9, 2, 1, 2</column>
<column name="ap_enable_reg_pp3_iter1">15, 3, 1, 3</column>
<column name="ap_enable_reg_pp4_iter1">9, 2, 1, 2</column>
<column name="ap_enable_reg_pp4_iter8">9, 2, 1, 2</column>
<column name="ap_enable_reg_pp5_iter1">9, 2, 1, 2</column>
<column name="ap_enable_reg_pp5_iter2">9, 2, 1, 2</column>
<column name="ap_enable_reg_pp6_iter1">9, 2, 1, 2</column>
<column name="ap_enable_reg_pp6_iter2">9, 2, 1, 2</column>
<column name="ap_phi_mux_i3_phi_fu_1577_p4">9, 2, 10, 20</column>
<column name="ap_phi_mux_i5_phi_fu_1622_p4">9, 2, 6, 12</column>
<column name="ap_phi_mux_indvar1_phi_fu_1542_p4">9, 2, 6, 12</column>
<column name="ap_phi_mux_indvar2_phi_fu_1554_p4">9, 2, 4, 8</column>
<column name="ap_phi_mux_indvar3_phi_fu_1588_p4">9, 2, 6, 12</column>
<column name="ap_phi_mux_indvar4_phi_fu_1634_p4">9, 2, 4, 8</column>
<column name="ap_phi_mux_indvar_flatten1_phi_fu_1610_p4">9, 2, 9, 18</column>
<column name="ap_phi_mux_indvar_flatten_phi_fu_1566_p4">9, 2, 15, 30</column>
<column name="ap_phi_mux_indvar_phi_fu_1530_p4">9, 2, 10, 20</column>
<column name="ap_sig_ioackin_mem_V_ARREADY">9, 2, 1, 2</column>
<column name="ap_sig_ioackin_out_V_AWREADY">9, 2, 1, 2</column>
<column name="ap_sig_ioackin_out_V_WREADY">9, 2, 1, 2</column>
<column name="bias_1_address0">89, 18, 5, 90</column>
<column name="bias_1_address1">85, 17, 5, 85</column>
<column name="bias_2_address0">38, 7, 4, 28</column>
<column name="bias_2_address1">33, 6, 4, 24</column>
<column name="grp_get_result_fu_1664_CompleteRegister_m_cr_V_read">15, 3, 128, 384</column>
<column name="grp_multiply_accumulate_fu_1669_CompleteRegister_m_cr_V_read">97, 20, 128, 2560</column>
<column name="grp_multiply_accumulate_fu_1669_in1_V">62, 15, 16, 240</column>
<column name="grp_multiply_accumulate_fu_1669_in2_V">53, 12, 16, 192</column>
<column name="grp_multiply_accumulate_fu_1677_CompleteRegister_m_cr_V_read">93, 19, 128, 2432</column>
<column name="grp_multiply_accumulate_fu_1677_in1_V">59, 14, 16, 224</column>
<column name="grp_multiply_accumulate_fu_1677_in2_V">53, 12, 16, 192</column>
<column name="grp_multiply_accumulate_fu_1685_CompleteRegister_m_cr_V_read">38, 7, 128, 896</column>
<column name="grp_multiply_accumulate_fu_1685_in1_V">15, 3, 16, 48</column>
<column name="grp_multiply_accumulate_fu_1685_in2_V">38, 7, 16, 112</column>
<column name="grp_multiply_accumulate_fu_1693_CompleteRegister_m_cr_V_read">33, 6, 128, 768</column>
<column name="grp_multiply_accumulate_fu_1693_in2_V">33, 6, 16, 96</column>
<column name="i3_reg_1573">9, 2, 10, 20</column>
<column name="i4_reg_1595">9, 2, 6, 12</column>
<column name="i5_reg_1618">9, 2, 6, 12</column>
<column name="i6_reg_1642">9, 2, 4, 8</column>
<column name="indvar1_reg_1538">9, 2, 6, 12</column>
<column name="indvar2_reg_1550">9, 2, 4, 8</column>
<column name="indvar3_reg_1584">9, 2, 6, 12</column>
<column name="indvar4_reg_1630">9, 2, 4, 8</column>
<column name="indvar5_reg_1653">9, 2, 4, 8</column>
<column name="indvar_flatten1_reg_1606">9, 2, 9, 18</column>
<column name="indvar_flatten_reg_1562">9, 2, 15, 30</column>
<column name="indvar_reg_1526">9, 2, 10, 20</column>
<column name="inputs_address0">15, 3, 10, 30</column>
<column name="l1_result_V_address0">15, 3, 5, 15</column>
<column name="l2_result_V_address0">15, 3, 4, 12</column>
<column name="mem_V_ARADDR">33, 6, 32, 192</column>
<column name="mem_V_ARLEN">27, 5, 32, 160</column>
<column name="mem_V_blk_n_AR">9, 2, 1, 2</column>
<column name="mem_V_blk_n_R">9, 2, 1, 2</column>
<column name="out_V_blk_n_AW">9, 2, 1, 2</column>
<column name="out_V_blk_n_B">9, 2, 1, 2</column>
<column name="out_V_blk_n_W">9, 2, 1, 2</column>
<column name="reg_1701">9, 2, 128, 256</column>
<column name="reg_1708">9, 2, 128, 256</column>
<column name="reg_1764">9, 2, 16, 32</column>
<column name="reg_1770">9, 2, 16, 32</column>
<column name="reg_1899">9, 2, 128, 256</column>
<column name="reg_1907">9, 2, 128, 256</column>
<column name="reg_1920">9, 2, 128, 256</column>
<column name="reg_1927">9, 2, 128, 256</column>
<column name="reg_1934">9, 2, 128, 256</column>
<column name="reg_1976">9, 2, 16, 32</column>
<column name="reg_1982">9, 2, 16, 32</column>
<column name="tmp_4_reg_1515">9, 2, 4, 8</column>
<column name="tmp_reg_1504">9, 2, 5, 10</column>
<column name="weights_1_address0">89, 18, 5, 90</column>
<column name="weights_1_address1">85, 17, 5, 85</column>
<column name="weights_2_address0">38, 7, 4, 28</column>
<column name="weights_2_address1">33, 6, 4, 24</column>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
<column name="accums_1_m_cr_V_addr_2_reg_3380">5, 0, 5, 0</column>
<column name="accums_1_m_cr_V_load_20_reg_2812">128, 0, 128, 0</column>
<column name="accums_1_m_cr_V_load_21_reg_2817">128, 0, 128, 0</column>
<column name="accums_1_m_cr_V_load_22_reg_2842">128, 0, 128, 0</column>
<column name="accums_1_m_cr_V_load_23_reg_2847">128, 0, 128, 0</column>
<column name="accums_1_m_cr_V_load_24_reg_2872">128, 0, 128, 0</column>
<column name="accums_1_m_cr_V_load_25_reg_2877">128, 0, 128, 0</column>
<column name="accums_1_m_cr_V_load_26_reg_2902">128, 0, 128, 0</column>
<column name="accums_1_m_cr_V_load_27_reg_2907">128, 0, 128, 0</column>
<column name="accums_2_m_cr_V_addr_2_reg_3598">4, 0, 4, 0</column>
<column name="ap_CS_fsm">124, 0, 124, 0</column>
<column name="ap_enable_reg_pp0_iter0">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter1">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter2">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp1_iter0">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp1_iter1">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp1_iter2">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp2_iter0">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp2_iter1">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp2_iter2">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp3_iter0">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp3_iter1">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp4_iter0">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp4_iter1">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp4_iter2">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp4_iter3">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp4_iter4">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp4_iter5">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp4_iter6">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp4_iter7">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp4_iter8">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp5_iter0">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp5_iter1">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp5_iter2">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp6_iter0">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp6_iter1">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp6_iter2">1, 0, 1, 0</column>
<column name="ap_reg_ioackin_mem_V_ARREADY">1, 0, 1, 0</column>
<column name="ap_reg_ioackin_out_V_AWREADY">1, 0, 1, 0</column>
<column name="ap_reg_ioackin_out_V_WREADY">1, 0, 1, 0</column>
<column name="ap_reg_pp0_iter1_exitcond1_reg_2580">1, 0, 1, 0</column>
<column name="ap_reg_pp0_iter1_indvar_reg_1526">10, 0, 10, 0</column>
<column name="ap_reg_pp1_iter1_exitcond2_reg_2600">1, 0, 1, 0</column>
<column name="ap_reg_pp1_iter1_indvar1_reg_1538">6, 0, 6, 0</column>
<column name="ap_reg_pp2_iter1_exitcond5_reg_2620">1, 0, 1, 0</column>
<column name="ap_reg_pp2_iter1_indvar2_reg_1550">4, 0, 4, 0</column>
<column name="ap_reg_pp5_iter1_indvar4_mid2_reg_3471">4, 0, 4, 0</column>
<column name="ap_reg_pp5_iter2_ifzero5_reg_3508">1, 0, 1, 0</column>
<column name="ap_reg_pp6_iter1_exitcond9_reg_3615">1, 0, 1, 0</column>
<column name="b1_offset_read_reg_2548">32, 0, 32, 0</column>
<column name="b2_offset_read_reg_2538">32, 0, 32, 0</column>
<column name="bias_2_load_1_reg_2999">16, 0, 16, 0</column>
<column name="bias_2_load_2_reg_3036">16, 0, 16, 0</column>
<column name="bias_2_load_3_reg_3041">16, 0, 16, 0</column>
<column name="bias_2_load_4_reg_3078">16, 0, 16, 0</column>
<column name="bias_2_load_5_reg_3083">16, 0, 16, 0</column>
<column name="bias_2_load_6_reg_3120">16, 0, 16, 0</column>
<column name="bias_2_load_7_reg_3125">16, 0, 16, 0</column>
<column name="bias_2_load_8_reg_3150">16, 0, 16, 0</column>
<column name="bias_2_load_9_reg_3155">16, 0, 16, 0</column>
<column name="bias_2_load_reg_2994">16, 0, 16, 0</column>
<column name="exitcond1_reg_2580">1, 0, 1, 0</column>
<column name="exitcond2_reg_2600">1, 0, 1, 0</column>
<column name="exitcond4_reg_3366">1, 0, 1, 0</column>
<column name="exitcond5_reg_2620">1, 0, 1, 0</column>
<column name="exitcond6_reg_3465">1, 0, 1, 0</column>
<column name="exitcond9_reg_3615">1, 0, 1, 0</column>
<column name="exitcond_flatten1_reg_3456">1, 0, 1, 0</column>
<column name="exitcond_flatten_reg_3320">1, 0, 1, 0</column>
<column name="extLd_reg_3537">15, 0, 16, 1</column>
<column name="i3_reg_1573">10, 0, 10, 0</column>
<column name="i4_reg_1595">6, 0, 6, 0</column>
<column name="i5_mid2_reg_3482">6, 0, 6, 0</column>
<column name="i5_reg_1618">6, 0, 6, 0</column>
<column name="i6_reg_1642">4, 0, 4, 0</column>
<column name="i_2_reg_3588">4, 0, 4, 0</column>
<column name="ifzero5_reg_3508">1, 0, 1, 0</column>
<column name="ifzero_reg_3351">1, 0, 1, 0</column>
<column name="indvar1_reg_1538">6, 0, 6, 0</column>
<column name="indvar2_reg_1550">4, 0, 4, 0</column>
<column name="indvar3_mid2_reg_3329">6, 0, 6, 0</column>
<column name="indvar3_reg_1584">6, 0, 6, 0</column>
<column name="indvar4_mid2_reg_3471">4, 0, 4, 0</column>
<column name="indvar4_reg_1630">4, 0, 4, 0</column>
<column name="indvar5_reg_1653">4, 0, 4, 0</column>
<column name="indvar_flatten1_reg_1606">9, 0, 9, 0</column>
<column name="indvar_flatten_next1_reg_3460">9, 0, 9, 0</column>
<column name="indvar_flatten_next_reg_3324">15, 0, 15, 0</column>
<column name="indvar_flatten_reg_1562">15, 0, 15, 0</column>
<column name="indvar_next1_reg_2604">6, 0, 6, 0</column>
<column name="indvar_next2_reg_2624">4, 0, 4, 0</column>
<column name="indvar_next3_reg_3341">6, 0, 6, 0</column>
<column name="indvar_next4_reg_3503">4, 0, 4, 0</column>
<column name="indvar_next_reg_2584">10, 0, 10, 0</column>
<column name="indvar_reg_1526">10, 0, 10, 0</column>
<column name="input_offset_read_reg_2533">32, 0, 32, 0</column>
<column name="inputs_load_reg_3360">16, 0, 16, 0</column>
<column name="l1_result_V_load_reg_3522">15, 0, 15, 0</column>
<column name="l2_result_V_load_reg_3629">16, 0, 16, 0</column>
<column name="mem_V_addr_1_read_reg_2609">16, 0, 16, 0</column>
<column name="mem_V_addr_2_read_reg_2629">16, 0, 16, 0</column>
<column name="mem_V_addr_3_read_reg_3346">16, 0, 16, 0</column>
<column name="mem_V_addr_3_reg_2646">32, 0, 32, 0</column>
<column name="mem_V_addr_4_read_reg_3512">16, 0, 16, 0</column>
<column name="mem_V_addr_4_reg_3488">32, 0, 32, 0</column>
<column name="mem_V_addr_read_reg_2589">16, 0, 16, 0</column>
<column name="op2_V_assign_1_reg_3610">16, 0, 16, 0</column>
<column name="reg_1701">128, 0, 128, 0</column>
<column name="reg_1708">128, 0, 128, 0</column>
<column name="reg_1714">128, 0, 128, 0</column>
<column name="reg_1719">128, 0, 128, 0</column>
<column name="reg_1724">128, 0, 128, 0</column>
<column name="reg_1729">128, 0, 128, 0</column>
<column name="reg_1734">128, 0, 128, 0</column>
<column name="reg_1739">128, 0, 128, 0</column>
<column name="reg_1744">128, 0, 128, 0</column>
<column name="reg_1749">128, 0, 128, 0</column>
<column name="reg_1754">128, 0, 128, 0</column>
<column name="reg_1759">128, 0, 128, 0</column>
<column name="reg_1764">16, 0, 16, 0</column>
<column name="reg_1770">16, 0, 16, 0</column>
<column name="reg_1776">128, 0, 128, 0</column>
<column name="reg_1781">128, 0, 128, 0</column>
<column name="reg_1786">16, 0, 16, 0</column>
<column name="reg_1791">16, 0, 16, 0</column>
<column name="reg_1796">128, 0, 128, 0</column>
<column name="reg_1801">128, 0, 128, 0</column>
<column name="reg_1806">16, 0, 16, 0</column>
<column name="reg_1811">16, 0, 16, 0</column>
<column name="reg_1816">128, 0, 128, 0</column>
<column name="reg_1821">128, 0, 128, 0</column>
<column name="reg_1826">16, 0, 16, 0</column>
<column name="reg_1831">16, 0, 16, 0</column>
<column name="reg_1836">128, 0, 128, 0</column>
<column name="reg_1841">128, 0, 128, 0</column>
<column name="reg_1846">16, 0, 16, 0</column>
<column name="reg_1851">16, 0, 16, 0</column>
<column name="reg_1856">16, 0, 16, 0</column>
<column name="reg_1861">16, 0, 16, 0</column>
<column name="reg_1866">16, 0, 16, 0</column>
<column name="reg_1871">16, 0, 16, 0</column>
<column name="reg_1876">16, 0, 16, 0</column>
<column name="reg_1881">16, 0, 16, 0</column>
<column name="reg_1886">128, 0, 128, 0</column>
<column name="reg_1892">128, 0, 128, 0</column>
<column name="reg_1899">128, 0, 128, 0</column>
<column name="reg_1907">128, 0, 128, 0</column>
<column name="reg_1914">128, 0, 128, 0</column>
<column name="reg_1920">128, 0, 128, 0</column>
<column name="reg_1927">128, 0, 128, 0</column>
<column name="reg_1934">128, 0, 128, 0</column>
<column name="reg_1941">128, 0, 128, 0</column>
<column name="reg_1947">128, 0, 128, 0</column>
<column name="reg_1953">128, 0, 128, 0</column>
<column name="reg_1959">128, 0, 128, 0</column>
<column name="reg_1965">128, 0, 128, 0</column>
<column name="reg_1971">128, 0, 128, 0</column>
<column name="reg_1976">16, 0, 16, 0</column>
<column name="reg_1982">16, 0, 16, 0</column>
<column name="reg_1988">16, 0, 16, 0</column>
<column name="reg_1993">16, 0, 16, 0</column>
<column name="reg_1998">16, 0, 16, 0</column>
<column name="reg_2003">16, 0, 16, 0</column>
<column name="reg_2008">16, 0, 16, 0</column>
<column name="reg_2013">16, 0, 16, 0</column>
<column name="reg_2018">16, 0, 16, 0</column>
<column name="reg_2023">16, 0, 16, 0</column>
<column name="reg_2028">16, 0, 16, 0</column>
<column name="reg_2033">16, 0, 16, 0</column>
<column name="reg_2038">16, 0, 16, 0</column>
<column name="reg_2043">16, 0, 16, 0</column>
<column name="reg_2048">16, 0, 16, 0</column>
<column name="reg_2053">16, 0, 16, 0</column>
<column name="reg_2058">128, 0, 128, 0</column>
<column name="reg_2064">128, 0, 128, 0</column>
<column name="reg_2070">128, 0, 128, 0</column>
<column name="reg_2075">128, 0, 128, 0</column>
<column name="reg_2080">128, 0, 128, 0</column>
<column name="reg_2085">128, 0, 128, 0</column>
<column name="reg_2090">128, 0, 128, 0</column>
<column name="reg_2095">128, 0, 128, 0</column>
<column name="result_offset_read_reg_2528">32, 0, 32, 0</column>
<column name="tmp_13_cast_mid2_v_v_reg_3335">10, 0, 10, 0</column>
<column name="tmp_16_cast_reg_3396">32, 0, 33, 1</column>
<column name="tmp_17_reg_3375">6, 0, 64, 58</column>
<column name="tmp_18_reg_3386">15, 0, 15, 0</column>
<column name="tmp_19_reg_3391">1, 0, 1, 0</column>
<column name="tmp_21_mid1_reg_3477">8, 0, 9, 1</column>
<column name="tmp_21_reg_3451">8, 0, 9, 1</column>
<column name="tmp_25_reg_3593">4, 0, 64, 60</column>
<column name="tmp_28_reg_3494">9, 0, 9, 0</column>
<column name="tmp_29_reg_3499">1, 0, 1, 0</column>
<column name="tmp_4_reg_1515">4, 0, 4, 0</column>
<column name="tmp_reg_1504">5, 0, 5, 0</column>
<column name="w1_offset_read_reg_2553">32, 0, 32, 0</column>
<column name="w2_offset_read_reg_2543">32, 0, 32, 0</column>
<column name="weights_2_load_1_reg_3569">16, 0, 16, 0</column>
<column name="weights_2_load_2_reg_3574">16, 0, 16, 0</column>
<column name="weights_2_load_3_reg_3579">16, 0, 16, 0</column>
<column name="weights_2_load_4_reg_3554">16, 0, 16, 0</column>
<column name="weights_2_load_5_reg_3559">16, 0, 16, 0</column>
<column name="weights_2_load_6_reg_3544">16, 0, 16, 0</column>
<column name="weights_2_load_7_reg_3549">16, 0, 16, 0</column>
<column name="weights_2_load_8_reg_3527">16, 0, 16, 0</column>
<column name="weights_2_load_9_reg_3532">16, 0, 16, 0</column>
<column name="weights_2_load_reg_3564">16, 0, 16, 0</column>
<column name="exitcond4_reg_3366">64, 32, 1, 0</column>
<column name="exitcond_flatten1_reg_3456">64, 32, 1, 0</column>
<column name="tmp_17_reg_3375">64, 32, 64, 58</column>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="s_axi_AXILiteS_AWVALID">in, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_AWREADY">out, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_AWADDR">in, 6, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_WVALID">in, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_WREADY">out, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_WDATA">in, 32, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_WSTRB">in, 4, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_ARVALID">in, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_ARREADY">out, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_ARADDR">in, 6, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_RVALID">out, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_RREADY">in, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_RDATA">out, 32, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_RRESP">out, 2, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_BVALID">out, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_BREADY">in, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_BRESP">out, 2, s_axi, AXILiteS, scalar</column>
<column name="ap_clk">in, 1, ap_ctrl_hs, neural_network, return value</column>
<column name="ap_rst_n">in, 1, ap_ctrl_hs, neural_network, return value</column>
<column name="interrupt">out, 1, ap_ctrl_hs, neural_network, return value</column>
<column name="m_axi_mem_V_AWVALID">out, 1, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_AWREADY">in, 1, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_AWADDR">out, 32, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_AWID">out, 1, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_AWLEN">out, 8, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_AWSIZE">out, 3, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_AWBURST">out, 2, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_AWLOCK">out, 2, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_AWCACHE">out, 4, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_AWPROT">out, 3, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_AWQOS">out, 4, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_AWREGION">out, 4, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_AWUSER">out, 1, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_WVALID">out, 1, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_WREADY">in, 1, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_WDATA">out, 32, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_WSTRB">out, 4, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_WLAST">out, 1, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_WID">out, 1, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_WUSER">out, 1, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_ARVALID">out, 1, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_ARREADY">in, 1, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_ARADDR">out, 32, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_ARID">out, 1, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_ARLEN">out, 8, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_ARSIZE">out, 3, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_ARBURST">out, 2, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_ARLOCK">out, 2, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_ARCACHE">out, 4, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_ARPROT">out, 3, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_ARQOS">out, 4, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_ARREGION">out, 4, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_ARUSER">out, 1, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_RVALID">in, 1, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_RREADY">out, 1, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_RDATA">in, 32, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_RLAST">in, 1, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_RID">in, 1, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_RUSER">in, 1, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_RRESP">in, 2, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_BVALID">in, 1, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_BREADY">out, 1, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_BRESP">in, 2, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_BID">in, 1, m_axi, mem_V, pointer</column>
<column name="m_axi_mem_V_BUSER">in, 1, m_axi, mem_V, pointer</column>
<column name="m_axi_out_V_AWVALID">out, 1, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_AWREADY">in, 1, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_AWADDR">out, 32, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_AWID">out, 1, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_AWLEN">out, 8, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_AWSIZE">out, 3, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_AWBURST">out, 2, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_AWLOCK">out, 2, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_AWCACHE">out, 4, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_AWPROT">out, 3, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_AWQOS">out, 4, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_AWREGION">out, 4, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_AWUSER">out, 1, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_WVALID">out, 1, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_WREADY">in, 1, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_WDATA">out, 32, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_WSTRB">out, 4, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_WLAST">out, 1, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_WID">out, 1, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_WUSER">out, 1, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_ARVALID">out, 1, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_ARREADY">in, 1, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_ARADDR">out, 32, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_ARID">out, 1, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_ARLEN">out, 8, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_ARSIZE">out, 3, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_ARBURST">out, 2, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_ARLOCK">out, 2, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_ARCACHE">out, 4, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_ARPROT">out, 3, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_ARQOS">out, 4, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_ARREGION">out, 4, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_ARUSER">out, 1, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_RVALID">in, 1, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_RREADY">out, 1, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_RDATA">in, 32, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_RLAST">in, 1, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_RID">in, 1, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_RUSER">in, 1, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_RRESP">in, 2, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_BVALID">in, 1, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_BREADY">out, 1, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_BRESP">in, 2, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_BID">in, 1, m_axi, out_V, pointer</column>
<column name="m_axi_out_V_BUSER">in, 1, m_axi, out_V, pointer</column>
</table>
</item>
</section>

<section name = "Critical Path" level="0">
<item name = "Max Delay">6.64</item>
<item name = "Critical Path Table"><table name="Critical Path Table" hasTotal="0">
<keys size="15">Name, Operator, Delay, Accumulated Delay, Store Source, Resource, Core, Interface, Type, Port, Array, Scope, Pointer, Callee, Phi Node</keys>
<column name="'call_ret', exact_dot_product/neural_network.cpp:48">call, 6.64, 6.64, -, -, -, -, -, -, -, -, -, multiply_accumulate, -</column>
</table>
</item>
</section>
</profile>
