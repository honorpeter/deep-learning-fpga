

================================================================
== Vivado HLS Report for 'multiply_accumulate'
================================================================
* Date:           Sun Apr  1 01:10:31 2018

* Version:        2017.4 (Build 2086221 on Fri Dec 15 21:13:33 MST 2017)
* Project:        exact_dot_product
* Solution:       base
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   5.00|      4.15|        0.62|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   39|   39|   39|   39|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------+-----+-----+----------+-----------+-----------+------+----------+
        |               |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |   Loop Name   | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------+-----+-----+----------+-----------+-----------+------+----------+
        |- GetMantissa  |   10|   10|         1|          -|          -|    10|    no    |
        |- GetExponent  |    5|    5|         1|          -|          -|     5|    no    |
        |- GetMantissa  |   10|   10|         1|          -|          -|    10|    no    |
        |- GetExponent  |    5|    5|         1|          -|          -|     5|    no    |
        +---------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 10
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	2  / (!exitcond_i)
	3  / (exitcond_i)
3 --> 
	3  / (!exitcond_i2)
	4  / (exitcond_i2)
4 --> 
	4  / (!exitcond_i1)
	5  / (exitcond_i1)
5 --> 
	6  / (exitcond_i3)
	5  / (!exitcond_i3)
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 

* FSM state operations: 

 <State 1> : 1.77ns
ST_1 : Operation 11 [1/1] (1.76ns)   --->   "br label %1" [exact_dot_product/complete_register.cpp:88->exact_dot_product/complete_register.cpp:52]

 <State 2> : 1.77ns
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%m1_V = phi i11 [ -1024, %0 ], [ %p_Result_s, %2 ]"
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%i_assign = phi i4 [ 0, %0 ], [ %i, %2 ]"
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%i_assign_cast5 = zext i4 %i_assign to i32" [exact_dot_product/complete_register.cpp:52]
ST_2 : Operation 15 [1/1] (1.30ns)   --->   "%exitcond_i = icmp eq i4 %i_assign, -6" [exact_dot_product/complete_register.cpp:88->exact_dot_product/complete_register.cpp:52]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10)"
ST_2 : Operation 17 [1/1] (1.73ns)   --->   "%i = add i4 %i_assign, 1" [exact_dot_product/complete_register.cpp:88->exact_dot_product/complete_register.cpp:52]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "br i1 %exitcond_i, label %get_mantissa.exit.preheader, label %2" [exact_dot_product/complete_register.cpp:88->exact_dot_product/complete_register.cpp:52]
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @p_str1) nounwind" [exact_dot_product/complete_register.cpp:88->exact_dot_product/complete_register.cpp:52]
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%p_Repl2_s = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 1, i32 %i_assign_cast5)" [exact_dot_product/complete_register.cpp:89->exact_dot_product/complete_register.cpp:52]
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%p_Result_s = call i11 @_ssdm_op_BitSet.i11.i11.i32.i1(i11 %m1_V, i32 %i_assign_cast5, i1 %p_Repl2_s)" [exact_dot_product/complete_register.cpp:89->exact_dot_product/complete_register.cpp:52]
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "br label %1" [exact_dot_product/complete_register.cpp:88->exact_dot_product/complete_register.cpp:52]
ST_2 : Operation 23 [1/1] (1.76ns)   --->   "br label %get_mantissa.exit" [exact_dot_product/complete_register.cpp:53]

 <State 3> : 1.77ns
ST_3 : Operation 24 [1/1] (0.00ns)   --->   "%e1_V = phi i5 [ %p_Result_1, %3 ], [ 0, %get_mantissa.exit.preheader ]"
ST_3 : Operation 25 [1/1] (0.00ns)   --->   "%i_assign_2 = phi i3 [ %i_1, %3 ], [ 0, %get_mantissa.exit.preheader ]"
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%i_assign_2_cast4 = zext i3 %i_assign_2 to i32" [exact_dot_product/complete_register.cpp:53]
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%i_assign_2_cast = zext i3 %i_assign_2 to i4" [exact_dot_product/complete_register.cpp:53]
ST_3 : Operation 28 [1/1] (1.13ns)   --->   "%exitcond_i2 = icmp eq i3 %i_assign_2, -3" [exact_dot_product/complete_register.cpp:98->exact_dot_product/complete_register.cpp:53]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%empty_2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5)"
ST_3 : Operation 30 [1/1] (1.65ns)   --->   "%i_1 = add i3 %i_assign_2, 1" [exact_dot_product/complete_register.cpp:98->exact_dot_product/complete_register.cpp:53]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "br i1 %exitcond_i2, label %get_exponent.exit.preheader, label %3" [exact_dot_product/complete_register.cpp:98->exact_dot_product/complete_register.cpp:53]
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @p_str) nounwind" [exact_dot_product/complete_register.cpp:98->exact_dot_product/complete_register.cpp:53]
ST_3 : Operation 33 [1/1] (1.73ns)   --->   "%i_assign_1 = add i4 %i_assign_2_cast, -6" [exact_dot_product/complete_register.cpp:99->exact_dot_product/complete_register.cpp:53]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%i_assign_1_cast = zext i4 %i_assign_1 to i32" [exact_dot_product/complete_register.cpp:99->exact_dot_product/complete_register.cpp:53]
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%p_Repl2_1 = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 1, i32 %i_assign_1_cast)" [exact_dot_product/complete_register.cpp:99->exact_dot_product/complete_register.cpp:53]
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%p_Result_1 = call i5 @_ssdm_op_BitSet.i5.i5.i32.i1(i5 %e1_V, i32 %i_assign_2_cast4, i1 %p_Repl2_1)" [exact_dot_product/complete_register.cpp:99->exact_dot_product/complete_register.cpp:53]
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "br label %get_mantissa.exit" [exact_dot_product/complete_register.cpp:98->exact_dot_product/complete_register.cpp:53]
ST_3 : Operation 38 [1/1] (1.76ns)   --->   "br label %get_exponent.exit" [exact_dot_product/complete_register.cpp:56]

 <State 4> : 1.77ns
ST_4 : Operation 39 [1/1] (0.00ns)   --->   "%m2_V = phi i11 [ %p_Result_2, %4 ], [ -1024, %get_exponent.exit.preheader ]"
ST_4 : Operation 40 [1/1] (0.00ns)   --->   "%i_assign_3 = phi i4 [ %i_2, %4 ], [ 0, %get_exponent.exit.preheader ]"
ST_4 : Operation 41 [1/1] (0.00ns)   --->   "%i_assign_3_cast3 = zext i4 %i_assign_3 to i32" [exact_dot_product/complete_register.cpp:56]
ST_4 : Operation 42 [1/1] (1.30ns)   --->   "%exitcond_i1 = icmp eq i4 %i_assign_3, -6" [exact_dot_product/complete_register.cpp:88->exact_dot_product/complete_register.cpp:56]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 43 [1/1] (0.00ns)   --->   "%empty_3 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10)"
ST_4 : Operation 44 [1/1] (1.73ns)   --->   "%i_2 = add i4 %i_assign_3, 1" [exact_dot_product/complete_register.cpp:88->exact_dot_product/complete_register.cpp:56]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 45 [1/1] (0.00ns)   --->   "br i1 %exitcond_i1, label %get_mantissa.exit16.preheader, label %4" [exact_dot_product/complete_register.cpp:88->exact_dot_product/complete_register.cpp:56]
ST_4 : Operation 46 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @p_str1) nounwind" [exact_dot_product/complete_register.cpp:88->exact_dot_product/complete_register.cpp:56]
ST_4 : Operation 47 [1/1] (0.00ns)   --->   "%p_Repl2_2 = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 2, i32 %i_assign_3_cast3)" [exact_dot_product/complete_register.cpp:89->exact_dot_product/complete_register.cpp:56]
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "%p_Result_2 = call i11 @_ssdm_op_BitSet.i11.i11.i32.i1(i11 %m2_V, i32 %i_assign_3_cast3, i1 %p_Repl2_2)" [exact_dot_product/complete_register.cpp:89->exact_dot_product/complete_register.cpp:56]
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "br label %get_exponent.exit" [exact_dot_product/complete_register.cpp:88->exact_dot_product/complete_register.cpp:56]
ST_4 : Operation 50 [1/1] (1.76ns)   --->   "br label %get_mantissa.exit16" [exact_dot_product/complete_register.cpp:98->exact_dot_product/complete_register.cpp:57]

 <State 5> : 3.89ns
ST_5 : Operation 51 [1/1] (0.00ns)   --->   "%p_Val2_4 = phi i5 [ %p_Result_3, %5 ], [ 0, %get_mantissa.exit16.preheader ]"
ST_5 : Operation 52 [1/1] (0.00ns)   --->   "%i_assign_5 = phi i3 [ %i_3, %5 ], [ 0, %get_mantissa.exit16.preheader ]"
ST_5 : Operation 53 [1/1] (0.00ns)   --->   "%i_assign_5_cast2 = zext i3 %i_assign_5 to i32" [exact_dot_product/complete_register.cpp:98->exact_dot_product/complete_register.cpp:57]
ST_5 : Operation 54 [1/1] (0.00ns)   --->   "%i_assign_5_cast = zext i3 %i_assign_5 to i4" [exact_dot_product/complete_register.cpp:98->exact_dot_product/complete_register.cpp:57]
ST_5 : Operation 55 [1/1] (1.13ns)   --->   "%exitcond_i3 = icmp eq i3 %i_assign_5, -3" [exact_dot_product/complete_register.cpp:98->exact_dot_product/complete_register.cpp:57]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 56 [1/1] (0.00ns)   --->   "%empty_4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5)"
ST_5 : Operation 57 [1/1] (1.65ns)   --->   "%i_3 = add i3 %i_assign_5, 1" [exact_dot_product/complete_register.cpp:98->exact_dot_product/complete_register.cpp:57]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 58 [1/1] (0.00ns)   --->   "br i1 %exitcond_i3, label %get_exponent.exit26_ifconv, label %5" [exact_dot_product/complete_register.cpp:98->exact_dot_product/complete_register.cpp:57]
ST_5 : Operation 59 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @p_str) nounwind" [exact_dot_product/complete_register.cpp:98->exact_dot_product/complete_register.cpp:57]
ST_5 : Operation 60 [1/1] (1.73ns)   --->   "%i_assign_4 = add i4 %i_assign_5_cast, -6" [exact_dot_product/complete_register.cpp:99->exact_dot_product/complete_register.cpp:57]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 61 [1/1] (0.00ns)   --->   "%i_assign_4_cast = zext i4 %i_assign_4 to i32" [exact_dot_product/complete_register.cpp:99->exact_dot_product/complete_register.cpp:57]
ST_5 : Operation 62 [1/1] (0.00ns)   --->   "%p_Repl2_3 = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 2, i32 %i_assign_4_cast)" [exact_dot_product/complete_register.cpp:99->exact_dot_product/complete_register.cpp:57]
ST_5 : Operation 63 [1/1] (0.00ns)   --->   "%p_Result_3 = call i5 @_ssdm_op_BitSet.i5.i5.i32.i1(i5 %p_Val2_4, i32 %i_assign_5_cast2, i1 %p_Repl2_3)" [exact_dot_product/complete_register.cpp:99->exact_dot_product/complete_register.cpp:57]
ST_5 : Operation 64 [1/1] (0.00ns)   --->   "br label %get_mantissa.exit16" [exact_dot_product/complete_register.cpp:98->exact_dot_product/complete_register.cpp:57]
ST_5 : Operation 65 [1/1] (0.00ns)   --->   "%lhs_V = zext i11 %m1_V to i22" [exact_dot_product/complete_register.cpp:115->exact_dot_product/complete_register.cpp:61]
ST_5 : Operation 66 [1/1] (0.00ns)   --->   "%rhs_V = zext i11 %m2_V to i22" [exact_dot_product/complete_register.cpp:115->exact_dot_product/complete_register.cpp:61]
ST_5 : Operation 67 [3/3] (3.89ns)   --->   "%r_V_3 = mul i22 %rhs_V, %lhs_V" [exact_dot_product/complete_register.cpp:115->exact_dot_product/complete_register.cpp:61]   --->   Core 61 'DSP48' <Latency = 2> <II = 1> <Delay = 3.89> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 68 [1/1] (0.00ns)   --->   "%lhs_V_1 = zext i5 %e1_V to i6" [exact_dot_product/complete_register.cpp:120->exact_dot_product/complete_register.cpp:62]
ST_5 : Operation 69 [1/1] (0.00ns)   --->   "%rhs_V_1 = zext i5 %p_Val2_4 to i6" [exact_dot_product/complete_register.cpp:120->exact_dot_product/complete_register.cpp:62]
ST_5 : Operation 70 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp1 = add i6 -15, %rhs_V_1" [exact_dot_product/complete_register.cpp:120->exact_dot_product/complete_register.cpp:62]   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.74> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 71 [1/1] (3.49ns) (root node of TernaryAdder)   --->   "%exact_e_V = add i6 %tmp1, %lhs_V_1" [exact_dot_product/complete_register.cpp:120->exact_dot_product/complete_register.cpp:62]   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.74> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

 <State 6> : 3.89ns
ST_6 : Operation 72 [2/3] (3.89ns)   --->   "%r_V_3 = mul i22 %rhs_V, %lhs_V" [exact_dot_product/complete_register.cpp:115->exact_dot_product/complete_register.cpp:61]   --->   Core 61 'DSP48' <Latency = 2> <II = 1> <Delay = 3.89> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

 <State 7> : 1.83ns
ST_7 : Operation 73 [1/3] (0.00ns)   --->   "%r_V_3 = mul i22 %rhs_V, %lhs_V" [exact_dot_product/complete_register.cpp:115->exact_dot_product/complete_register.cpp:61]   --->   Core 61 'DSP48' <Latency = 2> <II = 1> <Delay = 3.89> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 74 [1/1] (0.00ns)   --->   "%lhs_V_cast = zext i6 %exact_e_V to i7" [exact_dot_product/complete_register.cpp:65]
ST_7 : Operation 75 [1/1] (1.82ns)   --->   "%r_V_4 = add i7 -15, %lhs_V_cast" [exact_dot_product/complete_register.cpp:65]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 76 [1/1] (1.82ns)   --->   "%tmp_6 = sub i7 15, %lhs_V_cast" [exact_dot_product/complete_register.cpp:65]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

 <State 8> : 4.15ns
ST_8 : Operation 77 [1/1] (0.00ns) (grouped into LUT with out node r_V)   --->   "%tmp = call i1 @_ssdm_op_BitSelect.i1.i7.i32(i7 %r_V_4, i32 6)" [exact_dot_product/complete_register.cpp:65]
ST_8 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node r_V)   --->   "%tmp_5 = zext i22 %r_V_3 to i32" [exact_dot_product/complete_register.cpp:65]
ST_8 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node r_V)   --->   "%tmp_6_cast = sext i7 %tmp_6 to i22" [exact_dot_product/complete_register.cpp:65]
ST_8 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node r_V)   --->   "%tmp_7 = lshr i22 %r_V_3, %tmp_6_cast" [exact_dot_product/complete_register.cpp:65]   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 4.15> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node r_V)   --->   "%tmp_2_cast = sext i7 %r_V_4 to i32" [exact_dot_product/complete_register.cpp:65]
ST_8 : Operation 82 [1/1] (0.00ns) (grouped into LUT with out node r_V)   --->   "%tmp_3 = shl i32 %tmp_5, %tmp_2_cast" [exact_dot_product/complete_register.cpp:65]   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 4.15> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node r_V)   --->   "%tmp_1 = trunc i32 %tmp_3 to i22" [exact_dot_product/complete_register.cpp:65]
ST_8 : Operation 84 [1/1] (4.15ns) (out node of the LUT)   --->   "%r_V = select i1 %tmp, i22 %tmp_7, i22 %tmp_1" [exact_dot_product/complete_register.cpp:65]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

 <State 9> : 3.44ns
ST_9 : Operation 85 [1/1] (0.00ns)   --->   "%shifted_V = zext i22 %r_V to i512" [exact_dot_product/complete_register.cpp:65]
ST_9 : Operation 86 [1/1] (0.00ns)   --->   "%cr_m_cr_V_load = load i512* @cr_m_cr_V, align 64" [exact_dot_product/complete_register.cpp:66]
ST_9 : Operation 87 [2/2] (3.44ns)   --->   "%tmp_s = add i512 %cr_m_cr_V_load, %shifted_V" [exact_dot_product/complete_register.cpp:66]   --->   Core 15 'AddSubnS' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

 <State 10> : 3.44ns
ST_10 : Operation 88 [1/2] (3.44ns)   --->   "%tmp_s = add i512 %cr_m_cr_V_load, %shifted_V" [exact_dot_product/complete_register.cpp:66]   --->   Core 15 'AddSubnS' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 89 [1/1] (0.00ns)   --->   "store i512 %tmp_s, i512* @cr_m_cr_V, align 64" [exact_dot_product/complete_register.cpp:66]
ST_10 : Operation 90 [1/1] (0.00ns)   --->   "ret void" [exact_dot_product/complete_register.cpp:67]


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5ns, clock uncertainty: 0.625ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('__Result__') with incoming values : ('__Result__', exact_dot_product/complete_register.cpp:89->exact_dot_product/complete_register.cpp:52) [4]  (1.77 ns)

 <State 2>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('__Result__') with incoming values : ('__Result__', exact_dot_product/complete_register.cpp:99->exact_dot_product/complete_register.cpp:53) [19]  (1.77 ns)

 <State 3>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('__Result__') with incoming values : ('__Result__', exact_dot_product/complete_register.cpp:89->exact_dot_product/complete_register.cpp:56) [37]  (1.77 ns)

 <State 4>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('__Result__') with incoming values : ('__Result__', exact_dot_product/complete_register.cpp:99->exact_dot_product/complete_register.cpp:57) [52]  (1.77 ns)

 <State 5>: 3.89ns
The critical path consists of the following:
	'mul' operation ('r.V', exact_dot_product/complete_register.cpp:115->exact_dot_product/complete_register.cpp:61) [70]  (3.89 ns)

 <State 6>: 3.89ns
The critical path consists of the following:
	'mul' operation ('r.V', exact_dot_product/complete_register.cpp:115->exact_dot_product/complete_register.cpp:61) [70]  (3.89 ns)

 <State 7>: 1.83ns
The critical path consists of the following:
	'add' operation ('r.V', exact_dot_product/complete_register.cpp:65) [76]  (1.83 ns)

 <State 8>: 4.15ns
The critical path consists of the following:
	'select' operation ('r.V', exact_dot_product/complete_register.cpp:65) [85]  (4.15 ns)

 <State 9>: 3.44ns
The critical path consists of the following:
	'add' operation ('tmp_s', exact_dot_product/complete_register.cpp:66) [88]  (3.44 ns)

 <State 10>: 3.44ns
The critical path consists of the following:
	'add' operation ('tmp_s', exact_dot_product/complete_register.cpp:66) [88]  (3.44 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
