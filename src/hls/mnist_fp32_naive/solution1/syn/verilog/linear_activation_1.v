// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module linear_activation_1 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_in_V_dout,
        data_in_V_empty_n,
        data_in_V_read,
        data_out_V_din,
        data_out_V_full_n,
        data_out_V_write
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_pp0_stage0 = 9'd2;
parameter    ap_ST_fsm_pp0_stage1 = 9'd4;
parameter    ap_ST_fsm_pp0_stage2 = 9'd8;
parameter    ap_ST_fsm_pp0_stage3 = 9'd16;
parameter    ap_ST_fsm_pp0_stage4 = 9'd32;
parameter    ap_ST_fsm_state17 = 9'd64;
parameter    ap_ST_fsm_pp1_stage0 = 9'd128;
parameter    ap_ST_fsm_state26 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [31:0] data_in_V_dout;
input   data_in_V_empty_n;
output   data_in_V_read;
output  [31:0] data_out_V_din;
input   data_out_V_full_n;
output   data_out_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_in_V_read;
reg data_out_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
wire   [5:0] L2_WEIGHTS_address0;
reg    L2_WEIGHTS_ce0;
wire   [319:0] L2_WEIGHTS_q0;
wire   [3:0] L2_BIAS_address0;
reg    L2_BIAS_ce0;
wire   [31:0] L2_BIAS_q0;
reg    data_in_V_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] exitcond5_reg_532;
reg    data_out_V_blk_n;
reg    ap_enable_reg_pp1_iter7;
wire    ap_block_pp1_stage0;
reg   [0:0] exitcond_reg_747;
reg   [0:0] ap_reg_pp1_iter6_exitcond_reg_747;
reg   [31:0] acc_9_reg_163;
reg   [31:0] acc_8_reg_175;
reg   [31:0] acc_7_reg_187;
reg   [31:0] acc_6_reg_199;
reg   [31:0] acc_5_reg_211;
reg   [31:0] acc_4_reg_223;
reg   [31:0] acc_3_reg_235;
reg   [31:0] acc_2_reg_247;
reg   [31:0] acc_1_reg_259;
reg   [31:0] acc_0_reg_271;
reg   [6:0] ii_reg_283;
reg   [3:0] ires_reg_294;
wire   [31:0] grp_fu_306_p2;
reg   [31:0] reg_332;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
wire    ap_block_state12_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] ap_reg_pp0_iter1_exitcond5_reg_532;
reg    ap_enable_reg_pp1_iter6;
wire    ap_block_state18_pp1_stage0_iter0;
wire    ap_block_state19_pp1_stage0_iter1;
wire    ap_block_state20_pp1_stage0_iter2;
wire    ap_block_state21_pp1_stage0_iter3;
wire    ap_block_state22_pp1_stage0_iter4;
wire    ap_block_state23_pp1_stage0_iter5;
wire    ap_block_state24_pp1_stage0_iter6;
reg    ap_block_state25_pp1_stage0_iter7;
reg    ap_block_pp1_stage0_11001;
reg   [0:0] ap_reg_pp1_iter5_exitcond_reg_747;
wire   [0:0] exitcond5_fu_338_p2;
reg   [0:0] ap_reg_pp0_iter2_exitcond5_reg_532;
wire   [6:0] ii_2_fu_344_p2;
reg   [6:0] ii_2_reg_536;
reg   [31:0] tmp_26_reg_546;
reg    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state8_pp0_stage1_iter1;
wire    ap_block_state13_pp0_stage1_iter2;
reg    ap_block_pp0_stage1_11001;
wire   [31:0] tmp_8_fu_355_p1;
reg   [31:0] tmp_8_reg_552;
reg   [31:0] tmp_5_reg_557;
reg   [31:0] tmp_7_reg_562;
reg   [31:0] tmp_10_reg_567;
reg   [31:0] tmp_12_reg_572;
reg   [31:0] tmp_14_reg_577;
reg   [31:0] tmp_16_reg_582;
reg   [31:0] tmp_18_reg_587;
reg   [31:0] tmp_20_reg_592;
reg   [31:0] tmp_22_reg_597;
wire   [31:0] tmp_3_fu_449_p1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state9_pp0_stage2_iter1;
wire    ap_block_state14_pp0_stage2_iter2;
wire    ap_block_pp0_stage2_11001;
wire   [31:0] tmp_6_fu_453_p1;
wire   [31:0] tmp_2_fu_457_p1;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state10_pp0_stage3_iter1;
wire    ap_block_state15_pp0_stage3_iter2;
wire    ap_block_pp0_stage3_11001;
wire   [31:0] tmp_11_fu_461_p1;
wire   [31:0] tmp_13_fu_465_p1;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state11_pp0_stage4_iter1;
wire    ap_block_state16_pp0_stage4_iter2;
wire    ap_block_pp0_stage4_11001;
wire   [31:0] tmp_15_fu_469_p1;
wire   [31:0] grp_fu_324_p2;
reg   [31:0] tmp_4_reg_632;
reg    ap_enable_reg_pp0_iter1;
wire   [31:0] grp_fu_328_p2;
reg   [31:0] tmp_13_1_reg_637;
wire   [31:0] tmp_17_fu_473_p1;
wire   [31:0] tmp_19_fu_477_p1;
reg   [31:0] tmp_13_2_reg_652;
reg   [31:0] tmp_13_3_reg_657;
wire   [31:0] tmp_21_fu_481_p1;
wire   [31:0] tmp_23_fu_485_p1;
reg   [31:0] tmp_13_4_reg_672;
reg   [31:0] tmp_13_5_reg_677;
reg   [31:0] tmp_13_6_reg_682;
reg   [31:0] tmp_13_7_reg_687;
reg   [31:0] tmp_13_8_reg_692;
reg   [31:0] tmp_13_9_reg_697;
wire   [31:0] grp_fu_311_p2;
reg   [31:0] acc_1_1_reg_702;
reg   [31:0] acc_2_1_reg_707;
reg   [31:0] acc_3_1_reg_712;
reg   [31:0] acc_4_1_reg_717;
reg   [31:0] acc_5_1_reg_722;
reg   [31:0] acc_6_1_reg_727;
reg   [31:0] acc_7_1_reg_732;
wire   [0:0] exitcond_fu_489_p2;
wire    ap_CS_fsm_pp1_stage0;
reg   [0:0] ap_reg_pp1_iter1_exitcond_reg_747;
reg   [0:0] ap_reg_pp1_iter2_exitcond_reg_747;
reg   [0:0] ap_reg_pp1_iter3_exitcond_reg_747;
reg   [0:0] ap_reg_pp1_iter4_exitcond_reg_747;
wire   [3:0] ires_1_fu_495_p2;
reg   [3:0] ires_1_reg_751;
reg    ap_enable_reg_pp1_iter0;
wire   [31:0] tmp_25_fu_506_p12;
reg   [31:0] tmp_25_reg_761;
reg   [31:0] L2_BIAS_load_reg_766;
reg    ap_block_state1;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage4_subdone;
wire    ap_CS_fsm_state17;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state18;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter5;
reg   [31:0] ap_phi_mux_acc_7_phi_fu_191_p4;
wire    ap_block_pp0_stage4;
reg   [31:0] ap_phi_mux_acc_6_phi_fu_203_p4;
reg   [31:0] ap_phi_mux_acc_5_phi_fu_215_p4;
wire    ap_block_pp0_stage3;
reg   [31:0] ap_phi_mux_acc_4_phi_fu_227_p4;
reg   [31:0] ap_phi_mux_acc_3_phi_fu_239_p4;
wire    ap_block_pp0_stage2;
reg   [31:0] ap_phi_mux_acc_2_phi_fu_251_p4;
reg   [31:0] ap_phi_mux_acc_1_phi_fu_263_p4;
reg   [31:0] ap_phi_mux_acc_0_phi_fu_275_p4;
reg   [6:0] ap_phi_mux_ii_phi_fu_287_p4;
wire    ap_block_pp0_stage0;
reg   [3:0] ap_phi_mux_ires_phi_fu_298_p4;
wire   [63:0] tmp_s_fu_350_p1;
wire   [63:0] tmp_9_fu_501_p1;
reg    ap_block_pp1_stage0_01001;
reg   [31:0] grp_fu_306_p0;
reg   [31:0] grp_fu_306_p1;
reg   [31:0] grp_fu_311_p0;
reg   [31:0] grp_fu_311_p1;
reg   [31:0] grp_fu_324_p1;
reg   [31:0] grp_fu_328_p1;
reg    grp_fu_306_ce;
reg    grp_fu_311_ce;
reg    grp_fu_324_ce;
reg    grp_fu_328_ce;
wire    ap_CS_fsm_state26;
reg   [8:0] ap_NS_fsm;
reg    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 9'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
end

linear_activationhbi #(
    .DataWidth( 320 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
L2_WEIGHTS_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(L2_WEIGHTS_address0),
    .ce0(L2_WEIGHTS_ce0),
    .q0(L2_WEIGHTS_q0)
);

linear_activationibs #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
L2_BIAS_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(L2_BIAS_address0),
    .ce0(L2_BIAS_ce0),
    .q0(L2_BIAS_q0)
);

mnist_fp32_naive_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mnist_fp32_naive_dEe_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_306_p0),
    .din1(grp_fu_306_p1),
    .ce(grp_fu_306_ce),
    .dout(grp_fu_306_p2)
);

mnist_fp32_naive_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mnist_fp32_naive_dEe_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_311_p0),
    .din1(grp_fu_311_p1),
    .ce(grp_fu_311_ce),
    .dout(grp_fu_311_p2)
);

mnist_fp32_naive_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mnist_fp32_naive_eOg_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_26_reg_546),
    .din1(grp_fu_324_p1),
    .ce(grp_fu_324_ce),
    .dout(grp_fu_324_p2)
);

mnist_fp32_naive_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mnist_fp32_naive_eOg_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_26_reg_546),
    .din1(grp_fu_328_p1),
    .ce(grp_fu_328_ce),
    .dout(grp_fu_328_p2)
);

mnist_fp32_naive_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mnist_fp32_naive_jbC_U51(
    .din0(acc_0_reg_271),
    .din1(acc_1_reg_259),
    .din2(acc_2_reg_247),
    .din3(acc_3_reg_235),
    .din4(acc_4_reg_223),
    .din5(acc_5_reg_211),
    .din6(acc_6_reg_199),
    .din7(acc_7_reg_187),
    .din8(acc_8_reg_175),
    .din9(acc_9_reg_163),
    .din10(ires_reg_294),
    .dout(tmp_25_fu_506_p12)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state26)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state18) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state18)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state18);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp1_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_exitcond5_reg_532 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        acc_0_reg_271 <= reg_332;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        acc_0_reg_271 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_exitcond5_reg_532 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        acc_1_reg_259 <= acc_1_1_reg_702;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        acc_1_reg_259 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_exitcond5_reg_532 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        acc_2_reg_247 <= acc_2_1_reg_707;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        acc_2_reg_247 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_exitcond5_reg_532 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        acc_3_reg_235 <= acc_3_1_reg_712;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        acc_3_reg_235 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_exitcond5_reg_532 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        acc_4_reg_223 <= acc_4_1_reg_717;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        acc_4_reg_223 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_exitcond5_reg_532 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        acc_5_reg_211 <= acc_5_1_reg_722;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        acc_5_reg_211 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_exitcond5_reg_532 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        acc_6_reg_199 <= acc_6_1_reg_727;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        acc_6_reg_199 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_exitcond5_reg_532 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        acc_7_reg_187 <= acc_7_1_reg_732;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        acc_7_reg_187 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_exitcond5_reg_532 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        acc_8_reg_175 <= grp_fu_306_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        acc_8_reg_175 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_exitcond5_reg_532 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        acc_9_reg_163 <= grp_fu_311_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        acc_9_reg_163 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_reg_532 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ii_reg_283 <= ii_2_reg_536;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ii_reg_283 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        ires_reg_294 <= 4'd0;
    end else if (((exitcond_reg_747 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ires_reg_294 <= ires_1_reg_751;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_reg_747 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        L2_BIAS_load_reg_766 <= L2_BIAS_q0;
        tmp_25_reg_761 <= tmp_25_fu_506_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond5_reg_532 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_1_1_reg_702 <= grp_fu_311_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_exitcond5_reg_532 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        acc_2_1_reg_707 <= grp_fu_306_p2;
        acc_3_1_reg_712 <= grp_fu_311_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_exitcond5_reg_532 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        acc_4_1_reg_717 <= grp_fu_306_p2;
        acc_5_1_reg_722 <= grp_fu_311_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_exitcond5_reg_532 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        acc_6_1_reg_727 <= grp_fu_306_p2;
        acc_7_1_reg_732 <= grp_fu_311_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_reg_pp0_iter1_exitcond5_reg_532 <= exitcond5_reg_532;
        ap_reg_pp0_iter2_exitcond5_reg_532 <= ap_reg_pp0_iter1_exitcond5_reg_532;
        exitcond5_reg_532 <= exitcond5_fu_338_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ap_reg_pp1_iter1_exitcond_reg_747 <= exitcond_reg_747;
        exitcond_reg_747 <= exitcond_fu_489_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        ap_reg_pp1_iter2_exitcond_reg_747 <= ap_reg_pp1_iter1_exitcond_reg_747;
        ap_reg_pp1_iter3_exitcond_reg_747 <= ap_reg_pp1_iter2_exitcond_reg_747;
        ap_reg_pp1_iter4_exitcond_reg_747 <= ap_reg_pp1_iter3_exitcond_reg_747;
        ap_reg_pp1_iter5_exitcond_reg_747 <= ap_reg_pp1_iter4_exitcond_reg_747;
        ap_reg_pp1_iter6_exitcond_reg_747 <= ap_reg_pp1_iter5_exitcond_reg_747;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ii_2_reg_536 <= ii_2_fu_344_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ires_1_reg_751 <= ires_1_fu_495_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_reg_pp1_iter5_exitcond_reg_747 == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_reg_pp0_iter1_exitcond5_reg_532 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_332 <= grp_fu_306_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_reg_532 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_10_reg_567 <= {{L2_WEIGHTS_q0[127:96]}};
        tmp_12_reg_572 <= {{L2_WEIGHTS_q0[159:128]}};
        tmp_14_reg_577 <= {{L2_WEIGHTS_q0[191:160]}};
        tmp_16_reg_582 <= {{L2_WEIGHTS_q0[223:192]}};
        tmp_18_reg_587 <= {{L2_WEIGHTS_q0[255:224]}};
        tmp_20_reg_592 <= {{L2_WEIGHTS_q0[287:256]}};
        tmp_22_reg_597 <= {{L2_WEIGHTS_q0[319:288]}};
        tmp_26_reg_546 <= data_in_V_dout;
        tmp_5_reg_557 <= {{L2_WEIGHTS_q0[63:32]}};
        tmp_7_reg_562 <= {{L2_WEIGHTS_q0[95:64]}};
        tmp_8_reg_552 <= tmp_8_fu_355_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_reg_532 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_13_1_reg_637 <= grp_fu_328_p2;
        tmp_4_reg_632 <= grp_fu_324_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond5_reg_532 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_13_2_reg_652 <= grp_fu_324_p2;
        tmp_13_3_reg_657 <= grp_fu_328_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond5_reg_532 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_13_4_reg_672 <= grp_fu_324_p2;
        tmp_13_5_reg_677 <= grp_fu_328_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond5_reg_532 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_13_6_reg_682 <= grp_fu_324_p2;
        tmp_13_7_reg_687 <= grp_fu_328_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond5_reg_532 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_13_8_reg_692 <= grp_fu_324_p2;
        tmp_13_9_reg_697 <= grp_fu_328_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        L2_BIAS_ce0 = 1'b1;
    end else begin
        L2_BIAS_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        L2_WEIGHTS_ce0 = 1'b1;
    end else begin
        L2_WEIGHTS_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond5_fu_338_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_fu_489_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state18 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state18 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter2_exitcond5_reg_532 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_acc_0_phi_fu_275_p4 = reg_332;
    end else begin
        ap_phi_mux_acc_0_phi_fu_275_p4 = acc_0_reg_271;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter2_exitcond5_reg_532 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_acc_1_phi_fu_263_p4 = acc_1_1_reg_702;
    end else begin
        ap_phi_mux_acc_1_phi_fu_263_p4 = acc_1_reg_259;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter2_exitcond5_reg_532 == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_acc_2_phi_fu_251_p4 = acc_2_1_reg_707;
    end else begin
        ap_phi_mux_acc_2_phi_fu_251_p4 = acc_2_reg_247;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter2_exitcond5_reg_532 == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_acc_3_phi_fu_239_p4 = acc_3_1_reg_712;
    end else begin
        ap_phi_mux_acc_3_phi_fu_239_p4 = acc_3_reg_235;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter2_exitcond5_reg_532 == 1'd0) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_acc_4_phi_fu_227_p4 = acc_4_1_reg_717;
    end else begin
        ap_phi_mux_acc_4_phi_fu_227_p4 = acc_4_reg_223;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter2_exitcond5_reg_532 == 1'd0) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_acc_5_phi_fu_215_p4 = acc_5_1_reg_722;
    end else begin
        ap_phi_mux_acc_5_phi_fu_215_p4 = acc_5_reg_211;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter2_exitcond5_reg_532 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_acc_6_phi_fu_203_p4 = acc_6_1_reg_727;
    end else begin
        ap_phi_mux_acc_6_phi_fu_203_p4 = acc_6_reg_199;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter2_exitcond5_reg_532 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_acc_7_phi_fu_191_p4 = acc_7_1_reg_732;
    end else begin
        ap_phi_mux_acc_7_phi_fu_191_p4 = acc_7_reg_187;
    end
end

always @ (*) begin
    if (((exitcond5_reg_532 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_ii_phi_fu_287_p4 = ii_2_reg_536;
    end else begin
        ap_phi_mux_ii_phi_fu_287_p4 = ii_reg_283;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (exitcond_reg_747 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_ires_phi_fu_298_p4 = ires_1_reg_751;
    end else begin
        ap_phi_mux_ires_phi_fu_298_p4 = ires_reg_294;
    end
end

always @ (*) begin
    if (((exitcond5_reg_532 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_in_V_blk_n = data_in_V_empty_n;
    end else begin
        data_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond5_reg_532 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        data_in_V_read = 1'b1;
    end else begin
        data_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_reg_pp1_iter6_exitcond_reg_747 == 1'd0) & (ap_enable_reg_pp1_iter7 == 1'b1))) begin
        data_out_V_blk_n = data_out_V_full_n;
    end else begin
        data_out_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_pp1_iter6_exitcond_reg_747 == 1'd0) & (ap_enable_reg_pp1_iter7 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        data_out_V_write = 1'b1;
    end else begin
        data_out_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_306_ce = 1'b1;
    end else begin
        grp_fu_306_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        grp_fu_306_p0 = tmp_25_reg_761;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_306_p0 = acc_8_reg_175;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_306_p0 = ap_phi_mux_acc_6_phi_fu_203_p4;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_306_p0 = ap_phi_mux_acc_4_phi_fu_227_p4;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_306_p0 = ap_phi_mux_acc_2_phi_fu_251_p4;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_306_p0 = ap_phi_mux_acc_0_phi_fu_275_p4;
    end else begin
        grp_fu_306_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        grp_fu_306_p1 = L2_BIAS_load_reg_766;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_306_p1 = tmp_13_8_reg_692;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_306_p1 = tmp_13_6_reg_682;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_306_p1 = tmp_13_4_reg_672;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_306_p1 = tmp_13_2_reg_652;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_306_p1 = tmp_4_reg_632;
    end else begin
        grp_fu_306_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_311_ce = 1'b1;
    end else begin
        grp_fu_311_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_311_p0 = acc_9_reg_163;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_311_p0 = ap_phi_mux_acc_7_phi_fu_191_p4;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_311_p0 = ap_phi_mux_acc_5_phi_fu_215_p4;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_311_p0 = ap_phi_mux_acc_3_phi_fu_239_p4;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_311_p0 = ap_phi_mux_acc_1_phi_fu_263_p4;
    end else begin
        grp_fu_311_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_311_p1 = tmp_13_9_reg_697;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_311_p1 = tmp_13_7_reg_687;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_311_p1 = tmp_13_5_reg_677;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_311_p1 = tmp_13_3_reg_657;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_311_p1 = tmp_13_1_reg_637;
    end else begin
        grp_fu_311_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_324_ce = 1'b1;
    end else begin
        grp_fu_324_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_324_p1 = tmp_21_fu_481_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_324_p1 = tmp_17_fu_473_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_324_p1 = tmp_13_fu_465_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_324_p1 = tmp_2_fu_457_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_324_p1 = tmp_3_fu_449_p1;
    end else begin
        grp_fu_324_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_328_ce = 1'b1;
    end else begin
        grp_fu_328_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_328_p1 = tmp_23_fu_485_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_328_p1 = tmp_19_fu_477_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_328_p1 = tmp_15_fu_469_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_328_p1 = tmp_11_fu_461_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_328_p1 = tmp_6_fu_453_p1;
    end else begin
        grp_fu_328_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond5_fu_338_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond5_fu_338_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((~((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1)) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (exitcond_fu_489_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter7 == 1'b1) & (ap_enable_reg_pp1_iter6 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter7 == 1'b1) & (ap_enable_reg_pp1_iter6 == 1'b0)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (exitcond_fu_489_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign L2_BIAS_address0 = tmp_9_fu_501_p1;

assign L2_WEIGHTS_address0 = tmp_s_fu_350_p1;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((exitcond5_reg_532 == 1'd0) & (data_in_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((exitcond5_reg_532 == 1'd0) & (data_in_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = ((ap_reg_pp1_iter6_exitcond_reg_747 == 1'd0) & (data_out_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((ap_reg_pp1_iter6_exitcond_reg_747 == 1'd0) & (data_out_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((ap_reg_pp1_iter6_exitcond_reg_747 == 1'd0) & (data_out_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b1));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state25_pp1_stage0_iter7 = ((ap_reg_pp1_iter6_exitcond_reg_747 == 1'd0) & (data_out_V_full_n == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0 = ((exitcond5_reg_532 == 1'd0) & (data_in_V_empty_n == 1'b0));
end

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign data_out_V_din = reg_332;

assign exitcond5_fu_338_p2 = ((ap_phi_mux_ii_phi_fu_287_p4 == 7'd64) ? 1'b1 : 1'b0);

assign exitcond_fu_489_p2 = ((ap_phi_mux_ires_phi_fu_298_p4 == 4'd10) ? 1'b1 : 1'b0);

assign ii_2_fu_344_p2 = (ap_phi_mux_ii_phi_fu_287_p4 + 7'd1);

assign ires_1_fu_495_p2 = (ap_phi_mux_ires_phi_fu_298_p4 + 4'd1);

assign start_out = real_start;

assign tmp_11_fu_461_p1 = tmp_10_reg_567;

assign tmp_13_fu_465_p1 = tmp_12_reg_572;

assign tmp_15_fu_469_p1 = tmp_14_reg_577;

assign tmp_17_fu_473_p1 = tmp_16_reg_582;

assign tmp_19_fu_477_p1 = tmp_18_reg_587;

assign tmp_21_fu_481_p1 = tmp_20_reg_592;

assign tmp_23_fu_485_p1 = tmp_22_reg_597;

assign tmp_2_fu_457_p1 = tmp_7_reg_562;

assign tmp_3_fu_449_p1 = tmp_8_reg_552;

assign tmp_6_fu_453_p1 = tmp_5_reg_557;

assign tmp_8_fu_355_p1 = L2_WEIGHTS_q0[31:0];

assign tmp_9_fu_501_p1 = ap_phi_mux_ires_phi_fu_298_p4;

assign tmp_s_fu_350_p1 = ap_phi_mux_ii_phi_fu_287_p4;

endmodule //linear_activation_1
