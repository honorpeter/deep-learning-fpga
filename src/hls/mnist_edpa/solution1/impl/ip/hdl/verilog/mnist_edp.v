// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="mnist_edp,hls_ip_2017_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=15.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=14.910125,HLS_SYN_LAT=1706,HLS_SYN_TPT=1706,HLS_SYN_MEM=63,HLS_SYN_DSP=37,HLS_SYN_FF=21366,HLS_SYN_LUT=29118}" *)

module mnist_edp (
        sdata_in_TDATA,
        sdata_in_TKEEP,
        sdata_in_TSTRB,
        sdata_in_TUSER,
        sdata_in_TLAST,
        sdata_in_TID,
        sdata_in_TDEST,
        sdata_out_TDATA,
        sdata_out_TKEEP,
        sdata_out_TSTRB,
        sdata_out_TUSER,
        sdata_out_TLAST,
        sdata_out_TID,
        sdata_out_TDEST,
        ap_clk,
        ap_rst_n,
        sdata_in_TVALID,
        sdata_in_TREADY,
        sdata_out_TVALID,
        sdata_out_TREADY
);


input  [15:0] sdata_in_TDATA;
input  [1:0] sdata_in_TKEEP;
input  [1:0] sdata_in_TSTRB;
input  [0:0] sdata_in_TUSER;
input  [0:0] sdata_in_TLAST;
input  [0:0] sdata_in_TID;
input  [0:0] sdata_in_TDEST;
output  [15:0] sdata_out_TDATA;
output  [1:0] sdata_out_TKEEP;
output  [1:0] sdata_out_TSTRB;
output  [0:0] sdata_out_TUSER;
output  [0:0] sdata_out_TLAST;
output  [0:0] sdata_out_TID;
output  [0:0] sdata_out_TDEST;
input   ap_clk;
input   ap_rst_n;
input   sdata_in_TVALID;
output   sdata_in_TREADY;
output   sdata_out_TVALID;
input   sdata_out_TREADY;

reg    ap_rst_n_inv;
wire    unpacker_U0_ap_start;
wire    unpacker_U0_ap_done;
wire    unpacker_U0_ap_continue;
wire    unpacker_U0_ap_idle;
wire    unpacker_U0_ap_ready;
wire    unpacker_U0_start_out;
wire    unpacker_U0_start_write;
wire    unpacker_U0_sdata_in_TREADY;
wire   [15:0] unpacker_U0_stream_out_V_V_din;
wire    unpacker_U0_stream_out_V_V_write;
wire    linear_activation_U0_ap_start;
wire    linear_activation_U0_ap_done;
wire    linear_activation_U0_ap_continue;
wire    linear_activation_U0_ap_idle;
wire    linear_activation_U0_ap_ready;
wire    linear_activation_U0_start_out;
wire    linear_activation_U0_start_write;
wire    linear_activation_U0_data_in_V_V_read;
wire   [15:0] linear_activation_U0_data_out_V_V_din;
wire    linear_activation_U0_data_out_V_V_write;
wire    relu_U0_ap_start;
wire    relu_U0_ap_done;
wire    relu_U0_ap_continue;
wire    relu_U0_ap_idle;
wire    relu_U0_ap_ready;
wire    relu_U0_start_out;
wire    relu_U0_start_write;
wire    relu_U0_data_in_V_V_read;
wire   [15:0] relu_U0_data_out_V_V_din;
wire    relu_U0_data_out_V_V_write;
wire    linear_activation_1_U0_ap_start;
wire    linear_activation_1_U0_ap_done;
wire    linear_activation_1_U0_ap_continue;
wire    linear_activation_1_U0_ap_idle;
wire    linear_activation_1_U0_ap_ready;
wire    linear_activation_1_U0_start_out;
wire    linear_activation_1_U0_start_write;
wire    linear_activation_1_U0_data_in_V_V_read;
wire   [15:0] linear_activation_1_U0_data_out_V_V_din;
wire    linear_activation_1_U0_data_out_V_V_write;
wire    packer_U0_ap_start;
wire    packer_U0_ap_done;
wire    packer_U0_ap_continue;
wire    packer_U0_ap_idle;
wire    packer_U0_ap_ready;
wire    packer_U0_stream_in_V_V_read;
wire   [15:0] packer_U0_sdata_out_TDATA;
wire    packer_U0_sdata_out_TVALID;
wire   [1:0] packer_U0_sdata_out_TKEEP;
wire   [1:0] packer_U0_sdata_out_TSTRB;
wire   [0:0] packer_U0_sdata_out_TUSER;
wire   [0:0] packer_U0_sdata_out_TLAST;
wire   [0:0] packer_U0_sdata_out_TID;
wire   [0:0] packer_U0_sdata_out_TDEST;
wire    ap_sync_continue;
wire    data_in_V_V_full_n;
wire   [15:0] data_in_V_V_dout;
wire    data_in_V_V_empty_n;
wire    l1_result_V_V_full_n;
wire   [15:0] l1_result_V_V_dout;
wire    l1_result_V_V_empty_n;
wire    l1_relu_V_V_full_n;
wire   [15:0] l1_relu_V_V_dout;
wire    l1_relu_V_V_empty_n;
wire    data_out_V_V_full_n;
wire   [15:0] data_out_V_V_dout;
wire    data_out_V_V_empty_n;
wire   [0:0] start_for_linear_activation_U0_din;
wire    start_for_linear_activation_U0_full_n;
wire   [0:0] start_for_linear_activation_U0_dout;
wire    start_for_linear_activation_U0_empty_n;
wire   [0:0] start_for_relu_U0_din;
wire    start_for_relu_U0_full_n;
wire   [0:0] start_for_relu_U0_dout;
wire    start_for_relu_U0_empty_n;
wire   [0:0] start_for_linear_activation_1_U0_din;
wire    start_for_linear_activation_1_U0_full_n;
wire   [0:0] start_for_linear_activation_1_U0_dout;
wire    start_for_linear_activation_1_U0_empty_n;
wire   [0:0] start_for_packer_U0_din;
wire    start_for_packer_U0_full_n;
wire   [0:0] start_for_packer_U0_dout;
wire    start_for_packer_U0_empty_n;
wire    packer_U0_start_full_n;
wire    packer_U0_start_write;

unpacker unpacker_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(unpacker_U0_ap_start),
    .start_full_n(start_for_linear_activation_U0_full_n),
    .ap_done(unpacker_U0_ap_done),
    .ap_continue(unpacker_U0_ap_continue),
    .ap_idle(unpacker_U0_ap_idle),
    .ap_ready(unpacker_U0_ap_ready),
    .start_out(unpacker_U0_start_out),
    .start_write(unpacker_U0_start_write),
    .sdata_in_TDATA(sdata_in_TDATA),
    .sdata_in_TVALID(sdata_in_TVALID),
    .sdata_in_TREADY(unpacker_U0_sdata_in_TREADY),
    .sdata_in_TKEEP(sdata_in_TKEEP),
    .sdata_in_TSTRB(sdata_in_TSTRB),
    .sdata_in_TUSER(sdata_in_TUSER),
    .sdata_in_TLAST(sdata_in_TLAST),
    .sdata_in_TID(sdata_in_TID),
    .sdata_in_TDEST(sdata_in_TDEST),
    .stream_out_V_V_din(unpacker_U0_stream_out_V_V_din),
    .stream_out_V_V_full_n(data_in_V_V_full_n),
    .stream_out_V_V_write(unpacker_U0_stream_out_V_V_write)
);

linear_activation linear_activation_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(linear_activation_U0_ap_start),
    .start_full_n(start_for_relu_U0_full_n),
    .ap_done(linear_activation_U0_ap_done),
    .ap_continue(linear_activation_U0_ap_continue),
    .ap_idle(linear_activation_U0_ap_idle),
    .ap_ready(linear_activation_U0_ap_ready),
    .start_out(linear_activation_U0_start_out),
    .start_write(linear_activation_U0_start_write),
    .data_in_V_V_dout(data_in_V_V_dout),
    .data_in_V_V_empty_n(data_in_V_V_empty_n),
    .data_in_V_V_read(linear_activation_U0_data_in_V_V_read),
    .data_out_V_V_din(linear_activation_U0_data_out_V_V_din),
    .data_out_V_V_full_n(l1_result_V_V_full_n),
    .data_out_V_V_write(linear_activation_U0_data_out_V_V_write)
);

relu relu_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(relu_U0_ap_start),
    .start_full_n(start_for_linear_activation_1_U0_full_n),
    .ap_done(relu_U0_ap_done),
    .ap_continue(relu_U0_ap_continue),
    .ap_idle(relu_U0_ap_idle),
    .ap_ready(relu_U0_ap_ready),
    .start_out(relu_U0_start_out),
    .start_write(relu_U0_start_write),
    .data_in_V_V_dout(l1_result_V_V_dout),
    .data_in_V_V_empty_n(l1_result_V_V_empty_n),
    .data_in_V_V_read(relu_U0_data_in_V_V_read),
    .data_out_V_V_din(relu_U0_data_out_V_V_din),
    .data_out_V_V_full_n(l1_relu_V_V_full_n),
    .data_out_V_V_write(relu_U0_data_out_V_V_write)
);

linear_activation_1 linear_activation_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(linear_activation_1_U0_ap_start),
    .start_full_n(start_for_packer_U0_full_n),
    .ap_done(linear_activation_1_U0_ap_done),
    .ap_continue(linear_activation_1_U0_ap_continue),
    .ap_idle(linear_activation_1_U0_ap_idle),
    .ap_ready(linear_activation_1_U0_ap_ready),
    .start_out(linear_activation_1_U0_start_out),
    .start_write(linear_activation_1_U0_start_write),
    .data_in_V_V_dout(l1_relu_V_V_dout),
    .data_in_V_V_empty_n(l1_relu_V_V_empty_n),
    .data_in_V_V_read(linear_activation_1_U0_data_in_V_V_read),
    .data_out_V_V_din(linear_activation_1_U0_data_out_V_V_din),
    .data_out_V_V_full_n(data_out_V_V_full_n),
    .data_out_V_V_write(linear_activation_1_U0_data_out_V_V_write)
);

packer packer_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(packer_U0_ap_start),
    .ap_done(packer_U0_ap_done),
    .ap_continue(packer_U0_ap_continue),
    .ap_idle(packer_U0_ap_idle),
    .ap_ready(packer_U0_ap_ready),
    .stream_in_V_V_dout(data_out_V_V_dout),
    .stream_in_V_V_empty_n(data_out_V_V_empty_n),
    .stream_in_V_V_read(packer_U0_stream_in_V_V_read),
    .sdata_out_TDATA(packer_U0_sdata_out_TDATA),
    .sdata_out_TVALID(packer_U0_sdata_out_TVALID),
    .sdata_out_TREADY(sdata_out_TREADY),
    .sdata_out_TKEEP(packer_U0_sdata_out_TKEEP),
    .sdata_out_TSTRB(packer_U0_sdata_out_TSTRB),
    .sdata_out_TUSER(packer_U0_sdata_out_TUSER),
    .sdata_out_TLAST(packer_U0_sdata_out_TLAST),
    .sdata_out_TID(packer_U0_sdata_out_TID),
    .sdata_out_TDEST(packer_U0_sdata_out_TDEST)
);

fifo_w16_d1_A data_in_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(unpacker_U0_stream_out_V_V_din),
    .if_full_n(data_in_V_V_full_n),
    .if_write(unpacker_U0_stream_out_V_V_write),
    .if_dout(data_in_V_V_dout),
    .if_empty_n(data_in_V_V_empty_n),
    .if_read(linear_activation_U0_data_in_V_V_read)
);

fifo_w16_d1_A l1_result_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(linear_activation_U0_data_out_V_V_din),
    .if_full_n(l1_result_V_V_full_n),
    .if_write(linear_activation_U0_data_out_V_V_write),
    .if_dout(l1_result_V_V_dout),
    .if_empty_n(l1_result_V_V_empty_n),
    .if_read(relu_U0_data_in_V_V_read)
);

fifo_w16_d1_A l1_relu_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(relu_U0_data_out_V_V_din),
    .if_full_n(l1_relu_V_V_full_n),
    .if_write(relu_U0_data_out_V_V_write),
    .if_dout(l1_relu_V_V_dout),
    .if_empty_n(l1_relu_V_V_empty_n),
    .if_read(linear_activation_1_U0_data_in_V_V_read)
);

fifo_w16_d1_A data_out_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(linear_activation_1_U0_data_out_V_V_din),
    .if_full_n(data_out_V_V_full_n),
    .if_write(linear_activation_1_U0_data_out_V_V_write),
    .if_dout(data_out_V_V_dout),
    .if_empty_n(data_out_V_V_empty_n),
    .if_read(packer_U0_stream_in_V_V_read)
);

start_for_linear_kbM start_for_linear_kbM_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_linear_activation_U0_din),
    .if_full_n(start_for_linear_activation_U0_full_n),
    .if_write(unpacker_U0_start_write),
    .if_dout(start_for_linear_activation_U0_dout),
    .if_empty_n(start_for_linear_activation_U0_empty_n),
    .if_read(linear_activation_U0_ap_ready)
);

start_for_relu_U0 start_for_relu_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_relu_U0_din),
    .if_full_n(start_for_relu_U0_full_n),
    .if_write(linear_activation_U0_start_write),
    .if_dout(start_for_relu_U0_dout),
    .if_empty_n(start_for_relu_U0_empty_n),
    .if_read(relu_U0_ap_ready)
);

start_for_linear_lbW start_for_linear_lbW_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_linear_activation_1_U0_din),
    .if_full_n(start_for_linear_activation_1_U0_full_n),
    .if_write(relu_U0_start_write),
    .if_dout(start_for_linear_activation_1_U0_dout),
    .if_empty_n(start_for_linear_activation_1_U0_empty_n),
    .if_read(linear_activation_1_U0_ap_ready)
);

start_for_packer_U0 start_for_packer_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_packer_U0_din),
    .if_full_n(start_for_packer_U0_full_n),
    .if_write(linear_activation_1_U0_start_write),
    .if_dout(start_for_packer_U0_dout),
    .if_empty_n(start_for_packer_U0_empty_n),
    .if_read(packer_U0_ap_ready)
);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_continue = 1'b0;

assign linear_activation_1_U0_ap_continue = 1'b1;

assign linear_activation_1_U0_ap_start = start_for_linear_activation_1_U0_empty_n;

assign linear_activation_U0_ap_continue = 1'b1;

assign linear_activation_U0_ap_start = start_for_linear_activation_U0_empty_n;

assign packer_U0_ap_continue = 1'b1;

assign packer_U0_ap_start = start_for_packer_U0_empty_n;

assign packer_U0_start_full_n = 1'b1;

assign packer_U0_start_write = 1'b0;

assign relu_U0_ap_continue = 1'b1;

assign relu_U0_ap_start = start_for_relu_U0_empty_n;

assign sdata_in_TREADY = unpacker_U0_sdata_in_TREADY;

assign sdata_out_TDATA = packer_U0_sdata_out_TDATA;

assign sdata_out_TDEST = packer_U0_sdata_out_TDEST;

assign sdata_out_TID = packer_U0_sdata_out_TID;

assign sdata_out_TKEEP = packer_U0_sdata_out_TKEEP;

assign sdata_out_TLAST = packer_U0_sdata_out_TLAST;

assign sdata_out_TSTRB = packer_U0_sdata_out_TSTRB;

assign sdata_out_TUSER = packer_U0_sdata_out_TUSER;

assign sdata_out_TVALID = packer_U0_sdata_out_TVALID;

assign start_for_linear_activation_1_U0_din = 1'b1;

assign start_for_linear_activation_U0_din = 1'b1;

assign start_for_packer_U0_din = 1'b1;

assign start_for_relu_U0_din = 1'b1;

assign unpacker_U0_ap_continue = 1'b1;

assign unpacker_U0_ap_start = 1'b1;

endmodule //mnist_edp
