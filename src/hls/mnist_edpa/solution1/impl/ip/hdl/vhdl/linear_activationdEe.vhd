-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity linear_activationdEe_rom is 
    generic(
             dwidth     : integer := 16; 
             awidth     : integer := 6; 
             mem_size    : integer := 64
    ); 
    port (
          addr0      : in std_logic_vector(awidth-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(dwidth-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of linear_activationdEe_rom is 

signal addr0_tmp : std_logic_vector(awidth-1 downto 0); 
type mem_array is array (0 to mem_size-1) of std_logic_vector (dwidth-1 downto 0); 
signal mem : mem_array := (
    0 => "1010110110100110", 1 => "1011000001110000", 2 => "0010110101101111", 
    3 => "1010101001010111", 4 => "0010110000011000", 5 => "0011001001000111", 
    6 => "1010110001101111", 7 => "1010010011010000", 8 => "1010101001100111", 
    9 => "1010100101110111", 10 => "0011001000000001", 11 => "1010100000101010", 
    12 => "0001101000101111", 13 => "0010010111010000", 14 => "1011001000010110", 
    15 => "1011000000010110", 16 => "0010110101110001", 17 => "0010110011010111", 
    18 => "1011000100010010", 19 => "1010100111010101", 20 => "1011000000111001", 
    21 => "1011000100101100", 22 => "1011001000010010", 23 => "0011001000101010", 
    24 => "1011000001011000", 25 => "0010011100101111", 26 => "1010111000000101", 
    27 => "0010110000100000", 28 => "1010111100001000", 29 => "0010111110000111", 
    30 => "1011011001010011", 31 => "1010010001001000", 32 => "1011000010010100", 
    33 => "1011001111111101", 34 => "1010111001110111", 35 => "1010111011110000", 
    36 => "1010111111000100", 37 => "0011000101111100", 38 => "1011001000101101", 
    39 => "0010111111010100", 40 => "1001110110010010", 41 => "1011010010101101", 
    42 => "1010110110011100", 43 => "0010111111100000", 44 => "1011010110001110", 
    45 => "0011001000111011", 46 => "0011010011011001", 47 => "1011000000001110", 
    48 => "1011000010011010", 49 => "1010110100111010", 50 => "0010111101110011", 
    51 => "1010110100011111", 52 => "0010011010010011", 53 => "1010010101110010", 
    54 => "0010100011010011", 55 => "1001000100101011", 56 => "0011000011111101", 
    57 => "1011000011101001", 58 => "1010110110011110", 59 => "0010010110110101", 
    60 => "0011000100001000", 61 => "0011000000111101", 62 => "0011010000010010", 
    63 => "1010111110101111" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity linear_activationdEe is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 64;
        AddressWidth : INTEGER := 6);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of linear_activationdEe is
    component linear_activationdEe_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    linear_activationdEe_rom_U :  component linear_activationdEe_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


