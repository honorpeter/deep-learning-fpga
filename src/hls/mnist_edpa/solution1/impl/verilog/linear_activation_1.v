// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module linear_activation_1 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_in_V_V_dout,
        data_in_V_V_empty_n,
        data_in_V_V_read,
        data_out_V_V_din,
        data_out_V_V_full_n,
        data_out_V_V_write
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_pp0_stage0 = 6'd2;
parameter    ap_ST_fsm_pp0_stage1 = 6'd4;
parameter    ap_ST_fsm_state7 = 6'd8;
parameter    ap_ST_fsm_pp1_stage0 = 6'd16;
parameter    ap_ST_fsm_state14 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [15:0] data_in_V_V_dout;
input   data_in_V_V_empty_n;
output   data_in_V_V_read;
output  [15:0] data_out_V_V_din;
input   data_out_V_V_full_n;
output   data_out_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_in_V_V_read;
reg data_out_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
wire   [5:0] L2_WEIGHTS_V_address0;
reg    L2_WEIGHTS_V_ce0;
wire   [159:0] L2_WEIGHTS_V_q0;
wire   [3:0] L2_BIAS_V_address0;
reg    L2_BIAS_V_ce0;
wire   [15:0] L2_BIAS_V_q0;
reg    data_in_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] exitcond5_reg_935;
reg    data_out_V_V_blk_n;
reg    ap_enable_reg_pp1_iter5;
wire    ap_block_pp1_stage0;
reg   [0:0] exitcond_reg_1053;
reg   [0:0] ap_reg_pp1_iter4_exitcond_reg_1053;
reg   [79:0] acc_9_m_cr_V_reg_181;
reg   [79:0] acc_8_m_cr_V_reg_193;
reg   [79:0] acc_7_m_cr_V_reg_205;
reg   [79:0] acc_6_m_cr_V_reg_217;
reg   [79:0] acc_5_m_cr_V_reg_229;
reg   [79:0] acc_4_m_cr_V_reg_241;
reg   [79:0] acc_3_m_cr_V_reg_253;
reg   [79:0] acc_2_m_cr_V_reg_265;
reg   [79:0] acc_1_m_cr_V_reg_277;
reg   [79:0] acc_0_m_cr_V_reg_289;
reg   [6:0] ii_reg_301;
reg   [79:0] acc_9_m_cr_V_1_reg_312;
reg   [79:0] acc_8_m_cr_V_1_reg_323;
reg   [79:0] acc_9_m_cr_V_7_reg_334;
reg   [79:0] acc_9_m_cr_V_9_reg_345;
reg   [79:0] acc_9_m_cr_V_18_reg_356;
reg   [79:0] acc_9_m_cr_V_3_reg_367;
reg   [79:0] acc_9_m_cr_V_4_reg_378;
reg   [79:0] acc_9_m_cr_V_11_reg_389;
reg   [79:0] acc_9_m_cr_V_13_reg_400;
reg   [79:0] acc_9_m_cr_V_15_reg_411;
reg   [3:0] ires_reg_422;
reg   [3:0] ap_reg_pp1_iter1_ires_reg_422;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state8_pp1_stage0_iter0;
wire    ap_block_state9_pp1_stage0_iter1;
wire    ap_block_state10_pp1_stage0_iter2;
wire    ap_block_state11_pp1_stage0_iter3;
wire    ap_block_state12_pp1_stage0_iter4;
reg    ap_block_state13_pp1_stage0_iter5;
reg    ap_block_pp1_stage0_11001;
reg   [3:0] ap_reg_pp1_iter2_ires_reg_422;
wire   [79:0] grp_multiply_accumulate_fu_440_ap_return;
reg   [79:0] reg_486;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
reg   [0:0] ap_reg_pp0_iter1_exitcond5_reg_935;
reg    ap_enable_reg_pp1_iter3;
reg   [0:0] ap_reg_pp1_iter2_exitcond_reg_1053;
wire   [0:0] exitcond5_fu_492_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
wire   [6:0] ii_2_fu_498_p2;
reg   [6:0] ii_2_reg_939;
reg   [15:0] tmp_V_1_reg_949;
wire   [15:0] tmp_14_fu_509_p1;
reg   [15:0] tmp_14_reg_958;
reg   [15:0] tmp_4_reg_963;
reg   [15:0] tmp_5_reg_968;
reg   [15:0] tmp_6_reg_973;
reg   [15:0] tmp_7_reg_978;
reg   [15:0] tmp_8_reg_983;
reg   [15:0] tmp_9_reg_988;
reg   [15:0] tmp_3_reg_993;
reg   [15:0] tmp_10_reg_998;
reg   [15:0] tmp_11_reg_1003;
wire   [79:0] grp_multiply_accumulate_fu_448_ap_return;
reg   [79:0] acc_1_m_cr_V_1_reg_1008;
wire   [79:0] grp_multiply_accumulate_fu_456_ap_return;
reg   [79:0] acc_2_m_cr_V_1_reg_1013;
wire   [79:0] grp_multiply_accumulate_fu_464_ap_return;
reg   [79:0] acc_3_m_cr_V_1_reg_1018;
wire   [79:0] grp_multiply_accumulate_fu_472_ap_return;
reg   [79:0] acc_4_m_cr_V_1_reg_1023;
reg    ap_enable_reg_pp0_iter2;
wire   [0:0] exitcond_fu_603_p2;
reg   [0:0] ap_reg_pp1_iter1_exitcond_reg_1053;
reg   [0:0] ap_reg_pp1_iter3_exitcond_reg_1053;
wire   [3:0] ires_1_fu_609_p2;
reg   [3:0] ires_1_reg_1057;
reg    ap_enable_reg_pp1_iter0;
reg   [15:0] L2_BIAS_V_load_reg_1067;
wire   [79:0] acc_9_m_cr_V_5_fu_751_p3;
wire   [79:0] acc_9_m_cr_V_6_fu_767_p3;
wire   [79:0] acc_9_m_cr_V_8_fu_799_p3;
wire   [79:0] acc_9_m_cr_V_10_fu_823_p3;
wire   [79:0] acc_9_m_cr_V_12_fu_847_p3;
wire   [79:0] acc_9_m_cr_V_14_fu_863_p3;
wire   [79:0] acc_9_m_cr_V_16_fu_887_p3;
wire   [79:0] acc_9_m_cr_V_19_fu_903_p3;
wire   [79:0] acc_9_m_cr_V_21_fu_919_p3;
wire   [79:0] acc_9_m_cr_V_22_fu_927_p3;
reg    ap_block_state1;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp0_stage1_subdone;
wire    ap_CS_fsm_state7;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state8;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter4;
wire   [15:0] grp_get_result_fu_434_ap_return;
reg    grp_get_result_fu_434_ap_ce;
reg   [79:0] grp_multiply_accumulate_fu_440_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read;
reg   [15:0] grp_multiply_accumulate_fu_440_in1_V;
reg   [15:0] grp_multiply_accumulate_fu_440_in2_V;
reg    grp_multiply_accumulate_fu_440_ap_ce;
reg   [79:0] grp_multiply_accumulate_fu_448_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read;
reg   [15:0] grp_multiply_accumulate_fu_448_in2_V;
reg    grp_multiply_accumulate_fu_448_ap_ce;
reg   [79:0] grp_multiply_accumulate_fu_456_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read;
reg   [15:0] grp_multiply_accumulate_fu_456_in2_V;
reg    grp_multiply_accumulate_fu_456_ap_ce;
reg   [79:0] grp_multiply_accumulate_fu_464_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read;
reg   [15:0] grp_multiply_accumulate_fu_464_in2_V;
reg    grp_multiply_accumulate_fu_464_ap_ce;
reg   [79:0] grp_multiply_accumulate_fu_472_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read;
reg   [15:0] grp_multiply_accumulate_fu_472_in2_V;
reg    grp_multiply_accumulate_fu_472_ap_ce;
reg   [79:0] ap_phi_mux_acc_4_m_cr_V_phi_fu_245_p4;
wire    ap_block_pp0_stage0;
reg   [79:0] ap_phi_mux_acc_3_m_cr_V_phi_fu_257_p4;
reg   [79:0] ap_phi_mux_acc_2_m_cr_V_phi_fu_269_p4;
reg   [79:0] ap_phi_mux_acc_1_m_cr_V_phi_fu_281_p4;
reg   [79:0] ap_phi_mux_acc_0_m_cr_V_phi_fu_293_p4;
reg   [6:0] ap_phi_mux_ii_phi_fu_305_p4;
reg   [79:0] ap_phi_mux_acc_9_m_cr_V_1_phi_fu_315_p4;
reg   [79:0] ap_phi_mux_acc_8_m_cr_V_1_phi_fu_326_p4;
reg   [79:0] ap_phi_mux_acc_9_m_cr_V_7_phi_fu_337_p4;
reg   [79:0] ap_phi_mux_acc_9_m_cr_V_9_phi_fu_348_p4;
reg   [79:0] ap_phi_mux_acc_9_m_cr_V_18_phi_fu_359_p4;
reg   [79:0] ap_phi_mux_acc_9_m_cr_V_3_phi_fu_370_p4;
reg   [79:0] ap_phi_mux_acc_9_m_cr_V_4_phi_fu_381_p4;
reg   [79:0] ap_phi_mux_acc_9_m_cr_V_11_phi_fu_392_p4;
reg   [79:0] ap_phi_mux_acc_9_m_cr_V_13_phi_fu_403_p4;
reg   [79:0] ap_phi_mux_acc_9_m_cr_V_15_phi_fu_414_p4;
reg   [3:0] ap_phi_mux_ires_phi_fu_426_p4;
wire   [79:0] tmp_fu_620_p12;
wire   [63:0] tmp_1_fu_504_p1;
wire   [63:0] tmp_2_fu_615_p1;
reg    ap_block_pp1_stage0_01001;
wire   [0:0] sel_tmp7_fu_695_p2;
wire   [0:0] sel_tmp5_fu_689_p2;
wire   [0:0] sel_tmp3_fu_683_p2;
wire   [0:0] sel_tmp1_fu_677_p2;
wire   [0:0] sel_tmp8_fu_671_p2;
wire   [0:0] sel_tmp6_fu_665_p2;
wire   [0:0] sel_tmp4_fu_659_p2;
wire   [0:0] sel_tmp2_fu_653_p2;
wire   [0:0] sel_tmp_fu_647_p2;
wire   [0:0] or_cond_fu_701_p2;
wire   [0:0] or_cond1_fu_707_p2;
wire   [0:0] or_cond2_fu_713_p2;
wire   [0:0] or_cond3_fu_719_p2;
wire   [0:0] or_cond4_fu_733_p2;
wire   [0:0] or_cond5_fu_739_p2;
wire   [0:0] or_cond6_fu_745_p2;
wire   [79:0] newSel_fu_725_p3;
wire   [79:0] newSel2_fu_759_p3;
wire   [79:0] newSel4_fu_775_p3;
wire   [79:0] newSel5_fu_783_p3;
wire   [79:0] newSel6_fu_791_p3;
wire   [79:0] newSel8_fu_807_p3;
wire   [79:0] newSel9_fu_815_p3;
wire   [79:0] newSel1_fu_831_p3;
wire   [79:0] newSel3_fu_839_p3;
wire   [79:0] newSel7_fu_855_p3;
wire   [79:0] newSel10_fu_871_p3;
wire   [79:0] newSel11_fu_879_p3;
wire   [79:0] newSel12_fu_895_p3;
wire   [79:0] acc_9_m_cr_V_20_fu_911_p3;
wire    ap_CS_fsm_state14;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_condition_761;
reg    ap_condition_765;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
end

linear_activationfYi #(
    .DataWidth( 160 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
L2_WEIGHTS_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(L2_WEIGHTS_V_address0),
    .ce0(L2_WEIGHTS_V_ce0),
    .q0(L2_WEIGHTS_V_q0)
);

linear_activationg8j #(
    .DataWidth( 16 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
L2_BIAS_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(L2_BIAS_V_address0),
    .ce0(L2_BIAS_V_ce0),
    .q0(L2_BIAS_V_q0)
);

get_result grp_get_result_fu_434(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read(reg_486),
    .ap_return(grp_get_result_fu_434_ap_return),
    .ap_ce(grp_get_result_fu_434_ap_ce)
);

multiply_accumulate grp_multiply_accumulate_fu_440(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read(grp_multiply_accumulate_fu_440_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read),
    .in1_V(grp_multiply_accumulate_fu_440_in1_V),
    .in2_V(grp_multiply_accumulate_fu_440_in2_V),
    .ap_return(grp_multiply_accumulate_fu_440_ap_return),
    .ap_ce(grp_multiply_accumulate_fu_440_ap_ce)
);

multiply_accumulate grp_multiply_accumulate_fu_448(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read(grp_multiply_accumulate_fu_448_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read),
    .in1_V(tmp_V_1_reg_949),
    .in2_V(grp_multiply_accumulate_fu_448_in2_V),
    .ap_return(grp_multiply_accumulate_fu_448_ap_return),
    .ap_ce(grp_multiply_accumulate_fu_448_ap_ce)
);

multiply_accumulate grp_multiply_accumulate_fu_456(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read(grp_multiply_accumulate_fu_456_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read),
    .in1_V(tmp_V_1_reg_949),
    .in2_V(grp_multiply_accumulate_fu_456_in2_V),
    .ap_return(grp_multiply_accumulate_fu_456_ap_return),
    .ap_ce(grp_multiply_accumulate_fu_456_ap_ce)
);

multiply_accumulate grp_multiply_accumulate_fu_464(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read(grp_multiply_accumulate_fu_464_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read),
    .in1_V(tmp_V_1_reg_949),
    .in2_V(grp_multiply_accumulate_fu_464_in2_V),
    .ap_return(grp_multiply_accumulate_fu_464_ap_return),
    .ap_ce(grp_multiply_accumulate_fu_464_ap_ce)
);

multiply_accumulate grp_multiply_accumulate_fu_472(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read(grp_multiply_accumulate_fu_472_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read),
    .in1_V(tmp_V_1_reg_949),
    .in2_V(grp_multiply_accumulate_fu_472_in2_V),
    .ap_return(grp_multiply_accumulate_fu_472_ap_return),
    .ap_ce(grp_multiply_accumulate_fu_472_ap_ce)
);

mnist_edp_mux_104hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 80 ),
    .din1_WIDTH( 80 ),
    .din2_WIDTH( 80 ),
    .din3_WIDTH( 80 ),
    .din4_WIDTH( 80 ),
    .din5_WIDTH( 80 ),
    .din6_WIDTH( 80 ),
    .din7_WIDTH( 80 ),
    .din8_WIDTH( 80 ),
    .din9_WIDTH( 80 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 80 ))
mnist_edp_mux_104hbi_U23(
    .din0(ap_phi_mux_acc_9_m_cr_V_15_phi_fu_414_p4),
    .din1(ap_phi_mux_acc_9_m_cr_V_13_phi_fu_403_p4),
    .din2(ap_phi_mux_acc_9_m_cr_V_11_phi_fu_392_p4),
    .din3(ap_phi_mux_acc_9_m_cr_V_4_phi_fu_381_p4),
    .din4(ap_phi_mux_acc_9_m_cr_V_3_phi_fu_370_p4),
    .din5(ap_phi_mux_acc_9_m_cr_V_18_phi_fu_359_p4),
    .din6(ap_phi_mux_acc_9_m_cr_V_9_phi_fu_348_p4),
    .din7(ap_phi_mux_acc_9_m_cr_V_7_phi_fu_337_p4),
    .din8(ap_phi_mux_acc_8_m_cr_V_1_phi_fu_326_p4),
    .din9(ap_phi_mux_acc_9_m_cr_V_1_phi_fu_315_p4),
    .din10(ap_reg_pp1_iter1_ires_reg_422),
    .dout(tmp_fu_620_p12)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state14)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state8) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state8)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state8);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp1_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond5_reg_935 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_0_m_cr_V_reg_289 <= reg_486;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        acc_0_m_cr_V_reg_289 <= 80'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond5_reg_935 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_1_m_cr_V_reg_277 <= acc_1_m_cr_V_1_reg_1008;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        acc_1_m_cr_V_reg_277 <= 80'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond5_reg_935 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_2_m_cr_V_reg_265 <= acc_2_m_cr_V_1_reg_1013;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        acc_2_m_cr_V_reg_265 <= 80'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond5_reg_935 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_3_m_cr_V_reg_253 <= acc_3_m_cr_V_1_reg_1018;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        acc_3_m_cr_V_reg_253 <= 80'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond5_reg_935 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_4_m_cr_V_reg_241 <= acc_4_m_cr_V_1_reg_1023;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        acc_4_m_cr_V_reg_241 <= 80'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond5_reg_935 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_5_m_cr_V_reg_229 <= grp_multiply_accumulate_fu_440_ap_return;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        acc_5_m_cr_V_reg_229 <= 80'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond5_reg_935 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_6_m_cr_V_reg_217 <= grp_multiply_accumulate_fu_448_ap_return;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        acc_6_m_cr_V_reg_217 <= 80'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond5_reg_935 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_7_m_cr_V_reg_205 <= grp_multiply_accumulate_fu_456_ap_return;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        acc_7_m_cr_V_reg_205 <= 80'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        acc_8_m_cr_V_1_reg_323 <= acc_8_m_cr_V_reg_193;
    end else if (((ap_reg_pp1_iter2_exitcond_reg_1053 == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        acc_8_m_cr_V_1_reg_323 <= acc_9_m_cr_V_6_fu_767_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond5_reg_935 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_8_m_cr_V_reg_193 <= grp_multiply_accumulate_fu_464_ap_return;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        acc_8_m_cr_V_reg_193 <= 80'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        acc_9_m_cr_V_11_reg_389 <= acc_2_m_cr_V_reg_265;
    end else if (((ap_reg_pp1_iter2_exitcond_reg_1053 == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        acc_9_m_cr_V_11_reg_389 <= acc_9_m_cr_V_19_fu_903_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        acc_9_m_cr_V_13_reg_400 <= acc_1_m_cr_V_reg_277;
    end else if (((ap_reg_pp1_iter2_exitcond_reg_1053 == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        acc_9_m_cr_V_13_reg_400 <= acc_9_m_cr_V_21_fu_919_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        acc_9_m_cr_V_15_reg_411 <= acc_0_m_cr_V_reg_289;
    end else if (((ap_reg_pp1_iter2_exitcond_reg_1053 == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        acc_9_m_cr_V_15_reg_411 <= acc_9_m_cr_V_22_fu_927_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        acc_9_m_cr_V_18_reg_356 <= acc_5_m_cr_V_reg_229;
    end else if (((ap_reg_pp1_iter2_exitcond_reg_1053 == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        acc_9_m_cr_V_18_reg_356 <= acc_9_m_cr_V_12_fu_847_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        acc_9_m_cr_V_1_reg_312 <= acc_9_m_cr_V_reg_181;
    end else if (((ap_reg_pp1_iter2_exitcond_reg_1053 == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        acc_9_m_cr_V_1_reg_312 <= acc_9_m_cr_V_5_fu_751_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        acc_9_m_cr_V_3_reg_367 <= acc_4_m_cr_V_reg_241;
    end else if (((ap_reg_pp1_iter2_exitcond_reg_1053 == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        acc_9_m_cr_V_3_reg_367 <= acc_9_m_cr_V_14_fu_863_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        acc_9_m_cr_V_4_reg_378 <= acc_3_m_cr_V_reg_253;
    end else if (((ap_reg_pp1_iter2_exitcond_reg_1053 == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        acc_9_m_cr_V_4_reg_378 <= acc_9_m_cr_V_16_fu_887_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        acc_9_m_cr_V_7_reg_334 <= acc_7_m_cr_V_reg_205;
    end else if (((ap_reg_pp1_iter2_exitcond_reg_1053 == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        acc_9_m_cr_V_7_reg_334 <= acc_9_m_cr_V_8_fu_799_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        acc_9_m_cr_V_9_reg_345 <= acc_6_m_cr_V_reg_217;
    end else if (((ap_reg_pp1_iter2_exitcond_reg_1053 == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        acc_9_m_cr_V_9_reg_345 <= acc_9_m_cr_V_10_fu_823_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond5_reg_935 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_9_m_cr_V_reg_181 <= grp_multiply_accumulate_fu_472_ap_return;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        acc_9_m_cr_V_reg_181 <= 80'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_reg_935 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ii_reg_301 <= ii_2_reg_939;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ii_reg_301 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ires_reg_422 <= 4'd0;
    end else if (((exitcond_reg_1053 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ires_reg_422 <= ires_1_reg_1057;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_reg_1053 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        L2_BIAS_V_load_reg_1067 <= L2_BIAS_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond5_reg_935 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        acc_1_m_cr_V_1_reg_1008 <= grp_multiply_accumulate_fu_448_ap_return;
        acc_2_m_cr_V_1_reg_1013 <= grp_multiply_accumulate_fu_456_ap_return;
        acc_3_m_cr_V_1_reg_1018 <= grp_multiply_accumulate_fu_464_ap_return;
        acc_4_m_cr_V_1_reg_1023 <= grp_multiply_accumulate_fu_472_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_reg_pp0_iter1_exitcond5_reg_935 <= exitcond5_reg_935;
        exitcond5_reg_935 <= exitcond5_fu_492_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ap_reg_pp1_iter1_exitcond_reg_1053 <= exitcond_reg_1053;
        ap_reg_pp1_iter1_ires_reg_422 <= ires_reg_422;
        exitcond_reg_1053 <= exitcond_fu_603_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        ap_reg_pp1_iter2_exitcond_reg_1053 <= ap_reg_pp1_iter1_exitcond_reg_1053;
        ap_reg_pp1_iter2_ires_reg_422 <= ap_reg_pp1_iter1_ires_reg_422;
        ap_reg_pp1_iter3_exitcond_reg_1053 <= ap_reg_pp1_iter2_exitcond_reg_1053;
        ap_reg_pp1_iter4_exitcond_reg_1053 <= ap_reg_pp1_iter3_exitcond_reg_1053;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ii_2_reg_939 <= ii_2_fu_498_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ires_1_reg_1057 <= ires_1_fu_609_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_reg_pp0_iter1_exitcond5_reg_935 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_reg_pp1_iter2_exitcond_reg_1053 == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        reg_486 <= grp_multiply_accumulate_fu_440_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_reg_935 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_10_reg_998 <= {{L2_WEIGHTS_V_q0[143:128]}};
        tmp_11_reg_1003 <= {{L2_WEIGHTS_V_q0[159:144]}};
        tmp_14_reg_958 <= tmp_14_fu_509_p1;
        tmp_3_reg_993 <= {{L2_WEIGHTS_V_q0[127:112]}};
        tmp_4_reg_963 <= {{L2_WEIGHTS_V_q0[31:16]}};
        tmp_5_reg_968 <= {{L2_WEIGHTS_V_q0[47:32]}};
        tmp_6_reg_973 <= {{L2_WEIGHTS_V_q0[63:48]}};
        tmp_7_reg_978 <= {{L2_WEIGHTS_V_q0[79:64]}};
        tmp_8_reg_983 <= {{L2_WEIGHTS_V_q0[95:80]}};
        tmp_9_reg_988 <= {{L2_WEIGHTS_V_q0[111:96]}};
        tmp_V_1_reg_949 <= data_in_V_V_dout;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        L2_BIAS_V_ce0 = 1'b1;
    end else begin
        L2_BIAS_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        L2_WEIGHTS_V_ce0 = 1'b1;
    end else begin
        L2_WEIGHTS_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond5_fu_492_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_fu_603_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state8 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter1_exitcond5_reg_935 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_acc_0_m_cr_V_phi_fu_293_p4 = reg_486;
    end else begin
        ap_phi_mux_acc_0_m_cr_V_phi_fu_293_p4 = acc_0_m_cr_V_reg_289;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter1_exitcond5_reg_935 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_acc_1_m_cr_V_phi_fu_281_p4 = acc_1_m_cr_V_1_reg_1008;
    end else begin
        ap_phi_mux_acc_1_m_cr_V_phi_fu_281_p4 = acc_1_m_cr_V_reg_277;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter1_exitcond5_reg_935 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_acc_2_m_cr_V_phi_fu_269_p4 = acc_2_m_cr_V_1_reg_1013;
    end else begin
        ap_phi_mux_acc_2_m_cr_V_phi_fu_269_p4 = acc_2_m_cr_V_reg_265;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter1_exitcond5_reg_935 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_acc_3_m_cr_V_phi_fu_257_p4 = acc_3_m_cr_V_1_reg_1018;
    end else begin
        ap_phi_mux_acc_3_m_cr_V_phi_fu_257_p4 = acc_3_m_cr_V_reg_253;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter1_exitcond5_reg_935 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_acc_4_m_cr_V_phi_fu_245_p4 = acc_4_m_cr_V_1_reg_1023;
    end else begin
        ap_phi_mux_acc_4_m_cr_V_phi_fu_245_p4 = acc_4_m_cr_V_reg_241;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_reg_pp1_iter2_exitcond_reg_1053 == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        ap_phi_mux_acc_8_m_cr_V_1_phi_fu_326_p4 = acc_9_m_cr_V_6_fu_767_p3;
    end else begin
        ap_phi_mux_acc_8_m_cr_V_1_phi_fu_326_p4 = acc_8_m_cr_V_1_reg_323;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_reg_pp1_iter2_exitcond_reg_1053 == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        ap_phi_mux_acc_9_m_cr_V_11_phi_fu_392_p4 = acc_9_m_cr_V_19_fu_903_p3;
    end else begin
        ap_phi_mux_acc_9_m_cr_V_11_phi_fu_392_p4 = acc_9_m_cr_V_11_reg_389;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_reg_pp1_iter2_exitcond_reg_1053 == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        ap_phi_mux_acc_9_m_cr_V_13_phi_fu_403_p4 = acc_9_m_cr_V_21_fu_919_p3;
    end else begin
        ap_phi_mux_acc_9_m_cr_V_13_phi_fu_403_p4 = acc_9_m_cr_V_13_reg_400;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_reg_pp1_iter2_exitcond_reg_1053 == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        ap_phi_mux_acc_9_m_cr_V_15_phi_fu_414_p4 = acc_9_m_cr_V_22_fu_927_p3;
    end else begin
        ap_phi_mux_acc_9_m_cr_V_15_phi_fu_414_p4 = acc_9_m_cr_V_15_reg_411;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_reg_pp1_iter2_exitcond_reg_1053 == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        ap_phi_mux_acc_9_m_cr_V_18_phi_fu_359_p4 = acc_9_m_cr_V_12_fu_847_p3;
    end else begin
        ap_phi_mux_acc_9_m_cr_V_18_phi_fu_359_p4 = acc_9_m_cr_V_18_reg_356;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_reg_pp1_iter2_exitcond_reg_1053 == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        ap_phi_mux_acc_9_m_cr_V_1_phi_fu_315_p4 = acc_9_m_cr_V_5_fu_751_p3;
    end else begin
        ap_phi_mux_acc_9_m_cr_V_1_phi_fu_315_p4 = acc_9_m_cr_V_1_reg_312;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_reg_pp1_iter2_exitcond_reg_1053 == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        ap_phi_mux_acc_9_m_cr_V_3_phi_fu_370_p4 = acc_9_m_cr_V_14_fu_863_p3;
    end else begin
        ap_phi_mux_acc_9_m_cr_V_3_phi_fu_370_p4 = acc_9_m_cr_V_3_reg_367;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_reg_pp1_iter2_exitcond_reg_1053 == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        ap_phi_mux_acc_9_m_cr_V_4_phi_fu_381_p4 = acc_9_m_cr_V_16_fu_887_p3;
    end else begin
        ap_phi_mux_acc_9_m_cr_V_4_phi_fu_381_p4 = acc_9_m_cr_V_4_reg_378;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_reg_pp1_iter2_exitcond_reg_1053 == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        ap_phi_mux_acc_9_m_cr_V_7_phi_fu_337_p4 = acc_9_m_cr_V_8_fu_799_p3;
    end else begin
        ap_phi_mux_acc_9_m_cr_V_7_phi_fu_337_p4 = acc_9_m_cr_V_7_reg_334;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_reg_pp1_iter2_exitcond_reg_1053 == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        ap_phi_mux_acc_9_m_cr_V_9_phi_fu_348_p4 = acc_9_m_cr_V_10_fu_823_p3;
    end else begin
        ap_phi_mux_acc_9_m_cr_V_9_phi_fu_348_p4 = acc_9_m_cr_V_9_reg_345;
    end
end

always @ (*) begin
    if (((exitcond5_reg_935 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_ii_phi_fu_305_p4 = ii_2_reg_939;
    end else begin
        ap_phi_mux_ii_phi_fu_305_p4 = ii_reg_301;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (exitcond_reg_1053 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_ires_phi_fu_426_p4 = ires_1_reg_1057;
    end else begin
        ap_phi_mux_ires_phi_fu_426_p4 = ires_reg_422;
    end
end

always @ (*) begin
    if (((exitcond5_reg_935 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_in_V_V_blk_n = data_in_V_V_empty_n;
    end else begin
        data_in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond5_reg_935 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        data_in_V_V_read = 1'b1;
    end else begin
        data_in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_reg_pp1_iter4_exitcond_reg_1053 == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        data_out_V_V_blk_n = data_out_V_V_full_n;
    end else begin
        data_out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_pp1_iter4_exitcond_reg_1053 == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        data_out_V_V_write = 1'b1;
    end else begin
        data_out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        grp_get_result_fu_434_ap_ce = 1'b1;
    end else begin
        grp_get_result_fu_434_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_reg_pp1_iter1_exitcond_reg_1053 == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        grp_multiply_accumulate_fu_440_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read = tmp_fu_620_p12;
    end else if (((ap_reg_pp0_iter1_exitcond5_reg_935 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_multiply_accumulate_fu_440_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read = acc_5_m_cr_V_reg_229;
    end else if (((exitcond5_reg_935 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_multiply_accumulate_fu_440_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read = ap_phi_mux_acc_0_m_cr_V_phi_fu_293_p4;
    end else begin
        grp_multiply_accumulate_fu_440_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        grp_multiply_accumulate_fu_440_ap_ce = 1'b1;
    end else begin
        grp_multiply_accumulate_fu_440_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_reg_pp1_iter1_exitcond_reg_1053 == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        grp_multiply_accumulate_fu_440_in1_V = L2_BIAS_V_load_reg_1067;
    end else if ((((exitcond5_reg_935 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_reg_pp0_iter1_exitcond5_reg_935 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        grp_multiply_accumulate_fu_440_in1_V = tmp_V_1_reg_949;
    end else begin
        grp_multiply_accumulate_fu_440_in1_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_reg_pp1_iter1_exitcond_reg_1053 == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        grp_multiply_accumulate_fu_440_in2_V = 16'd15360;
    end else if (((ap_reg_pp0_iter1_exitcond5_reg_935 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_multiply_accumulate_fu_440_in2_V = tmp_8_reg_983;
    end else if (((exitcond5_reg_935 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_multiply_accumulate_fu_440_in2_V = tmp_14_reg_958;
    end else begin
        grp_multiply_accumulate_fu_440_in2_V = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if ((1'b1 == ap_condition_765)) begin
            grp_multiply_accumulate_fu_448_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read = acc_6_m_cr_V_reg_217;
        end else if ((1'b1 == ap_condition_761)) begin
            grp_multiply_accumulate_fu_448_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read = ap_phi_mux_acc_1_m_cr_V_phi_fu_281_p4;
        end else begin
            grp_multiply_accumulate_fu_448_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read = 'bx;
        end
    end else begin
        grp_multiply_accumulate_fu_448_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_multiply_accumulate_fu_448_ap_ce = 1'b1;
    end else begin
        grp_multiply_accumulate_fu_448_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if ((1'b1 == ap_condition_765)) begin
            grp_multiply_accumulate_fu_448_in2_V = tmp_9_reg_988;
        end else if ((1'b1 == ap_condition_761)) begin
            grp_multiply_accumulate_fu_448_in2_V = tmp_4_reg_963;
        end else begin
            grp_multiply_accumulate_fu_448_in2_V = 'bx;
        end
    end else begin
        grp_multiply_accumulate_fu_448_in2_V = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if ((1'b1 == ap_condition_765)) begin
            grp_multiply_accumulate_fu_456_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read = acc_7_m_cr_V_reg_205;
        end else if ((1'b1 == ap_condition_761)) begin
            grp_multiply_accumulate_fu_456_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read = ap_phi_mux_acc_2_m_cr_V_phi_fu_269_p4;
        end else begin
            grp_multiply_accumulate_fu_456_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read = 'bx;
        end
    end else begin
        grp_multiply_accumulate_fu_456_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_multiply_accumulate_fu_456_ap_ce = 1'b1;
    end else begin
        grp_multiply_accumulate_fu_456_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if ((1'b1 == ap_condition_765)) begin
            grp_multiply_accumulate_fu_456_in2_V = tmp_3_reg_993;
        end else if ((1'b1 == ap_condition_761)) begin
            grp_multiply_accumulate_fu_456_in2_V = tmp_5_reg_968;
        end else begin
            grp_multiply_accumulate_fu_456_in2_V = 'bx;
        end
    end else begin
        grp_multiply_accumulate_fu_456_in2_V = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if ((1'b1 == ap_condition_765)) begin
            grp_multiply_accumulate_fu_464_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read = acc_8_m_cr_V_reg_193;
        end else if ((1'b1 == ap_condition_761)) begin
            grp_multiply_accumulate_fu_464_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read = ap_phi_mux_acc_3_m_cr_V_phi_fu_257_p4;
        end else begin
            grp_multiply_accumulate_fu_464_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read = 'bx;
        end
    end else begin
        grp_multiply_accumulate_fu_464_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_multiply_accumulate_fu_464_ap_ce = 1'b1;
    end else begin
        grp_multiply_accumulate_fu_464_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if ((1'b1 == ap_condition_765)) begin
            grp_multiply_accumulate_fu_464_in2_V = tmp_10_reg_998;
        end else if ((1'b1 == ap_condition_761)) begin
            grp_multiply_accumulate_fu_464_in2_V = tmp_6_reg_973;
        end else begin
            grp_multiply_accumulate_fu_464_in2_V = 'bx;
        end
    end else begin
        grp_multiply_accumulate_fu_464_in2_V = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if ((1'b1 == ap_condition_765)) begin
            grp_multiply_accumulate_fu_472_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read = acc_9_m_cr_V_reg_181;
        end else if ((1'b1 == ap_condition_761)) begin
            grp_multiply_accumulate_fu_472_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read = ap_phi_mux_acc_4_m_cr_V_phi_fu_245_p4;
        end else begin
            grp_multiply_accumulate_fu_472_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read = 'bx;
        end
    end else begin
        grp_multiply_accumulate_fu_472_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_multiply_accumulate_fu_472_ap_ce = 1'b1;
    end else begin
        grp_multiply_accumulate_fu_472_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if ((1'b1 == ap_condition_765)) begin
            grp_multiply_accumulate_fu_472_in2_V = tmp_11_reg_1003;
        end else if ((1'b1 == ap_condition_761)) begin
            grp_multiply_accumulate_fu_472_in2_V = tmp_7_reg_978;
        end else begin
            grp_multiply_accumulate_fu_472_in2_V = 'bx;
        end
    end else begin
        grp_multiply_accumulate_fu_472_in2_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond5_fu_492_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond5_fu_492_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (exitcond_fu_603_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((ap_enable_reg_pp1_iter4 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter5 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter4 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter5 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (exitcond_fu_603_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign L2_BIAS_V_address0 = tmp_2_fu_615_p1;

assign L2_WEIGHTS_V_address0 = tmp_1_fu_504_p1;

assign acc_9_m_cr_V_10_fu_823_p3 = ((or_cond4_fu_733_p2[0:0] === 1'b1) ? acc_9_m_cr_V_9_reg_345 : newSel9_fu_815_p3);

assign acc_9_m_cr_V_12_fu_847_p3 = ((or_cond4_fu_733_p2[0:0] === 1'b1) ? acc_9_m_cr_V_18_reg_356 : newSel3_fu_839_p3);

assign acc_9_m_cr_V_14_fu_863_p3 = ((or_cond4_fu_733_p2[0:0] === 1'b1) ? acc_9_m_cr_V_3_reg_367 : newSel7_fu_855_p3);

assign acc_9_m_cr_V_16_fu_887_p3 = ((or_cond4_fu_733_p2[0:0] === 1'b1) ? newSel11_fu_879_p3 : acc_9_m_cr_V_4_reg_378);

assign acc_9_m_cr_V_19_fu_903_p3 = ((or_cond_fu_701_p2[0:0] === 1'b1) ? acc_9_m_cr_V_11_reg_389 : newSel12_fu_895_p3);

assign acc_9_m_cr_V_20_fu_911_p3 = ((sel_tmp5_fu_689_p2[0:0] === 1'b1) ? grp_multiply_accumulate_fu_440_ap_return : acc_9_m_cr_V_13_reg_400);

assign acc_9_m_cr_V_21_fu_919_p3 = ((sel_tmp7_fu_695_p2[0:0] === 1'b1) ? acc_9_m_cr_V_13_reg_400 : acc_9_m_cr_V_20_fu_911_p3);

assign acc_9_m_cr_V_22_fu_927_p3 = ((sel_tmp7_fu_695_p2[0:0] === 1'b1) ? grp_multiply_accumulate_fu_440_ap_return : acc_9_m_cr_V_15_reg_411);

assign acc_9_m_cr_V_5_fu_751_p3 = ((or_cond6_fu_745_p2[0:0] === 1'b1) ? acc_9_m_cr_V_1_reg_312 : newSel_fu_725_p3);

assign acc_9_m_cr_V_6_fu_767_p3 = ((or_cond6_fu_745_p2[0:0] === 1'b1) ? acc_8_m_cr_V_1_reg_323 : newSel2_fu_759_p3);

assign acc_9_m_cr_V_8_fu_799_p3 = ((or_cond6_fu_745_p2[0:0] === 1'b1) ? newSel6_fu_791_p3 : acc_9_m_cr_V_7_reg_334);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((exitcond5_reg_935 == 1'd0) & (data_in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((exitcond5_reg_935 == 1'd0) & (data_in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = ((ap_reg_pp1_iter4_exitcond_reg_1053 == 1'd0) & (data_out_V_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((ap_reg_pp1_iter4_exitcond_reg_1053 == 1'd0) & (data_out_V_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((ap_reg_pp1_iter4_exitcond_reg_1053 == 1'd0) & (data_out_V_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b1));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_pp1_stage0_iter5 = ((ap_reg_pp1_iter4_exitcond_reg_1053 == 1'd0) & (data_out_V_V_full_n == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0 = ((exitcond5_reg_935 == 1'd0) & (data_in_V_V_empty_n == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_761 = ((exitcond5_reg_935 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_765 = ((ap_reg_pp0_iter1_exitcond5_reg_935 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign data_out_V_V_din = grp_get_result_fu_434_ap_return;

assign exitcond5_fu_492_p2 = ((ap_phi_mux_ii_phi_fu_305_p4 == 7'd64) ? 1'b1 : 1'b0);

assign exitcond_fu_603_p2 = ((ap_phi_mux_ires_phi_fu_426_p4 == 4'd10) ? 1'b1 : 1'b0);

assign ii_2_fu_498_p2 = (ap_phi_mux_ii_phi_fu_305_p4 + 7'd1);

assign ires_1_fu_609_p2 = (ap_phi_mux_ires_phi_fu_426_p4 + 4'd1);

assign newSel10_fu_871_p3 = ((sel_tmp3_fu_683_p2[0:0] === 1'b1) ? acc_9_m_cr_V_4_reg_378 : grp_multiply_accumulate_fu_440_ap_return);

assign newSel11_fu_879_p3 = ((or_cond_fu_701_p2[0:0] === 1'b1) ? acc_9_m_cr_V_4_reg_378 : newSel10_fu_871_p3);

assign newSel12_fu_895_p3 = ((sel_tmp3_fu_683_p2[0:0] === 1'b1) ? grp_multiply_accumulate_fu_440_ap_return : acc_9_m_cr_V_11_reg_389);

assign newSel1_fu_831_p3 = ((sel_tmp8_fu_671_p2[0:0] === 1'b1) ? acc_9_m_cr_V_18_reg_356 : grp_multiply_accumulate_fu_440_ap_return);

assign newSel2_fu_759_p3 = ((sel_tmp_fu_647_p2[0:0] === 1'b1) ? grp_multiply_accumulate_fu_440_ap_return : acc_8_m_cr_V_1_reg_323);

assign newSel3_fu_839_p3 = ((or_cond2_fu_713_p2[0:0] === 1'b1) ? newSel1_fu_831_p3 : acc_9_m_cr_V_18_reg_356);

assign newSel4_fu_775_p3 = ((sel_tmp4_fu_659_p2[0:0] === 1'b1) ? acc_9_m_cr_V_7_reg_334 : grp_multiply_accumulate_fu_440_ap_return);

assign newSel5_fu_783_p3 = ((or_cond2_fu_713_p2[0:0] === 1'b1) ? acc_9_m_cr_V_7_reg_334 : newSel4_fu_775_p3);

assign newSel6_fu_791_p3 = ((or_cond4_fu_733_p2[0:0] === 1'b1) ? acc_9_m_cr_V_7_reg_334 : newSel5_fu_783_p3);

assign newSel7_fu_855_p3 = ((sel_tmp8_fu_671_p2[0:0] === 1'b1) ? grp_multiply_accumulate_fu_440_ap_return : acc_9_m_cr_V_3_reg_367);

assign newSel8_fu_807_p3 = ((sel_tmp4_fu_659_p2[0:0] === 1'b1) ? grp_multiply_accumulate_fu_440_ap_return : acc_9_m_cr_V_9_reg_345);

assign newSel9_fu_815_p3 = ((or_cond2_fu_713_p2[0:0] === 1'b1) ? acc_9_m_cr_V_9_reg_345 : newSel8_fu_807_p3);

assign newSel_fu_725_p3 = ((sel_tmp_fu_647_p2[0:0] === 1'b1) ? acc_9_m_cr_V_1_reg_312 : grp_multiply_accumulate_fu_440_ap_return);

assign or_cond1_fu_707_p2 = (sel_tmp3_fu_683_p2 | sel_tmp1_fu_677_p2);

assign or_cond2_fu_713_p2 = (sel_tmp8_fu_671_p2 | sel_tmp6_fu_665_p2);

assign or_cond3_fu_719_p2 = (sel_tmp4_fu_659_p2 | sel_tmp2_fu_653_p2);

assign or_cond4_fu_733_p2 = (or_cond_fu_701_p2 | or_cond1_fu_707_p2);

assign or_cond5_fu_739_p2 = (or_cond3_fu_719_p2 | or_cond2_fu_713_p2);

assign or_cond6_fu_745_p2 = (or_cond5_fu_739_p2 | or_cond4_fu_733_p2);

assign or_cond_fu_701_p2 = (sel_tmp7_fu_695_p2 | sel_tmp5_fu_689_p2);

assign sel_tmp1_fu_677_p2 = ((ap_reg_pp1_iter2_ires_reg_422 == 4'd3) ? 1'b1 : 1'b0);

assign sel_tmp2_fu_653_p2 = ((ap_reg_pp1_iter2_ires_reg_422 == 4'd7) ? 1'b1 : 1'b0);

assign sel_tmp3_fu_683_p2 = ((ap_reg_pp1_iter2_ires_reg_422 == 4'd2) ? 1'b1 : 1'b0);

assign sel_tmp4_fu_659_p2 = ((ap_reg_pp1_iter2_ires_reg_422 == 4'd6) ? 1'b1 : 1'b0);

assign sel_tmp5_fu_689_p2 = ((ap_reg_pp1_iter2_ires_reg_422 == 4'd1) ? 1'b1 : 1'b0);

assign sel_tmp6_fu_665_p2 = ((ap_reg_pp1_iter2_ires_reg_422 == 4'd5) ? 1'b1 : 1'b0);

assign sel_tmp7_fu_695_p2 = ((ap_reg_pp1_iter2_ires_reg_422 == 4'd0) ? 1'b1 : 1'b0);

assign sel_tmp8_fu_671_p2 = ((ap_reg_pp1_iter2_ires_reg_422 == 4'd4) ? 1'b1 : 1'b0);

assign sel_tmp_fu_647_p2 = ((ap_reg_pp1_iter2_ires_reg_422 == 4'd8) ? 1'b1 : 1'b0);

assign start_out = real_start;

assign tmp_14_fu_509_p1 = L2_WEIGHTS_V_q0[15:0];

assign tmp_1_fu_504_p1 = ap_phi_mux_ii_phi_fu_305_p4;

assign tmp_2_fu_615_p1 = ap_phi_mux_ires_phi_fu_426_p4;

endmodule //linear_activation_1
