-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity get_result is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read : IN STD_LOGIC_VECTOR (79 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of get_result is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv80_FFFFFFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (79 downto 0) := "11111111111111111111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv8_50 : STD_LOGIC_VECTOR (7 downto 0) := "01010000";
    constant ap_const_lv9_4E : STD_LOGIC_VECTOR (8 downto 0) := "001001110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv9_1FE : STD_LOGIC_VECTOR (8 downto 0) := "111111110";
    constant ap_const_lv9_1FD : STD_LOGIC_VECTOR (8 downto 0) := "111111101";
    constant ap_const_lv9_1FC : STD_LOGIC_VECTOR (8 downto 0) := "111111100";
    constant ap_const_lv9_1FB : STD_LOGIC_VECTOR (8 downto 0) := "111111011";
    constant ap_const_lv9_1FA : STD_LOGIC_VECTOR (8 downto 0) := "111111010";
    constant ap_const_lv9_1F9 : STD_LOGIC_VECTOR (8 downto 0) := "111111001";
    constant ap_const_lv9_1F8 : STD_LOGIC_VECTOR (8 downto 0) := "111111000";
    constant ap_const_lv9_1F7 : STD_LOGIC_VECTOR (8 downto 0) := "111110111";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal CompleteRegister_m_c_reg_853 : STD_LOGIC_VECTOR (79 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_fu_92_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_858 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_864 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_74_fu_272_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_74_reg_869 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_75_reg_874 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_76_fu_298_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_76_reg_879 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_1_fu_306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_1_reg_884 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_77_fu_322_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_77_reg_889 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_78_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_79_fu_348_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_79_reg_900 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_80_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_fu_374_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_reg_912 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_reg_918 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_83_fu_400_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_83_reg_924 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_reg_930 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_85_fu_426_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_85_reg_936 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_86_reg_942 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_87_fu_452_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_87_reg_948 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_88_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_89_fu_478_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_89_reg_960 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_90_reg_966 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_91_fu_504_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_91_reg_972 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_92_reg_978 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_93_fu_530_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_93_reg_984 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal p_Result_3_fu_100_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal flipped_V_fu_124_p2 : STD_LOGIC_VECTOR (79 downto 0);
    signal p_Result_1_fu_130_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_s_fu_154_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_s_31_fu_164_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_fu_110_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_176_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_71_fu_188_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_70_fu_184_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_28_fu_118_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_192_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal leading_signs_V_fu_198_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_4_fu_212_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_fu_222_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_fu_140_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_234_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_73_fu_246_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_72_fu_242_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_31_fu_148_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_250_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal leading_signs_V_1_fu_256_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal leading_signs_V_2_fu_264_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_V_cast_fu_276_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal addconv_fu_280_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_16_cast_fu_286_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal index_assign_1_1_fu_312_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_1_1_cas_fu_318_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_2_fu_330_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_1_2_cas_fu_344_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_3_fu_356_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_1_3_cas_fu_370_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_4_fu_382_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_1_4_cas_fu_396_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_5_fu_408_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_1_5_cas_fu_422_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_6_fu_434_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_1_6_cas_fu_448_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_7_fu_460_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_1_7_cas_fu_474_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_8_fu_486_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_1_8_cas_fu_500_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_9_fu_512_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_1_9_cas_fu_526_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_550_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Result_6_fu_561_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal rev7_fu_579_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_589_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev1_fu_599_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev2_fu_609_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev3_fu_619_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev4_fu_629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev5_fu_639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev6_fu_649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_575_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_594_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_604_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_614_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_624_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_654_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_0274_1_fu_568_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_26_fu_659_p10 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_not_fu_693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not1_fu_703_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not2_fu_713_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not3_fu_723_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not4_fu_733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not5_fu_743_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not6_fu_753_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not7_fu_763_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_94_fu_779_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_9_fu_787_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_8_fu_773_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_7_fu_768_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_6_fu_758_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_5_fu_748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_4_fu_738_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_3_fu_728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_2_fu_718_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_1_fu_708_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_698_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_27_9_fu_793_p11 : STD_LOGIC_VECTOR (9 downto 0);
    signal mantissa_V_fu_817_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0274_1_9_fu_681_p5 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Repl2_2_fu_538_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal exponent_V_fu_555_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Repl2_s_fu_823_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_s_fu_545_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_840_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_5_fu_830_p4 : STD_LOGIC_VECTOR (15 downto 0);


begin



    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then
                CompleteRegister_m_c_reg_853 <= CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read;
                tmp_10_reg_864 <= tmp_10_fu_206_p2;
                tmp_36_1_reg_884 <= tmp_36_1_fu_306_p2;
                tmp_74_reg_869 <= tmp_74_fu_272_p1;
                tmp_75_reg_874 <= addconv_fu_280_p2(8 downto 8);
                tmp_76_reg_879 <= tmp_76_fu_298_p3;
                tmp_77_reg_889 <= tmp_77_fu_322_p3;
                tmp_78_reg_894 <= r_V_2_fu_330_p2(8 downto 8);
                tmp_79_reg_900 <= tmp_79_fu_348_p3;
                tmp_80_reg_906 <= r_V_3_fu_356_p2(8 downto 8);
                tmp_81_reg_912 <= tmp_81_fu_374_p3;
                tmp_82_reg_918 <= r_V_4_fu_382_p2(8 downto 8);
                tmp_83_reg_924 <= tmp_83_fu_400_p3;
                tmp_84_reg_930 <= r_V_5_fu_408_p2(8 downto 8);
                tmp_85_reg_936 <= tmp_85_fu_426_p3;
                tmp_86_reg_942 <= r_V_6_fu_434_p2(8 downto 8);
                tmp_87_reg_948 <= tmp_87_fu_452_p3;
                tmp_88_reg_954 <= r_V_7_fu_460_p2(8 downto 8);
                tmp_89_reg_960 <= tmp_89_fu_478_p3;
                tmp_90_reg_966 <= r_V_8_fu_486_p2(8 downto 8);
                tmp_91_reg_972 <= tmp_91_fu_504_p3;
                tmp_92_reg_978 <= r_V_9_fu_512_p2(8 downto 8);
                tmp_93_reg_984 <= tmp_93_fu_530_p3;
                tmp_reg_858 <= CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read(79 downto 79);
            end if;
        end if;
    end process;
    addconv_fu_280_p2 <= std_logic_vector(unsigned(ap_const_lv9_4E) - unsigned(rhs_V_cast_fu_276_p1));
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
    ap_return <= 
        ap_const_lv16_0 when (sel_tmp_fu_840_p2(0) = '1') else 
        p_Result_5_fu_830_p4;
    exponent_V_fu_555_p2 <= (tmp_14_fu_550_p2 xor ap_const_lv5_10);
    flipped_V_fu_124_p2 <= (ap_const_lv80_FFFFFFFFFFFFFFFFFFFF xor CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read);
    index_assign_1_1_cas_fu_318_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_assign_1_1_fu_312_p2),32));
    index_assign_1_1_fu_312_p2 <= std_logic_vector(signed(ap_const_lv9_1FF) + signed(addconv_fu_280_p2));
    index_assign_1_2_cas_fu_344_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_2_fu_330_p2),32));
    index_assign_1_3_cas_fu_370_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_3_fu_356_p2),32));
    index_assign_1_4_cas_fu_396_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_4_fu_382_p2),32));
    index_assign_1_5_cas_fu_422_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_5_fu_408_p2),32));
    index_assign_1_6_cas_fu_448_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_6_fu_434_p2),32));
    index_assign_1_7_cas_fu_474_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_7_fu_460_p2),32));
    index_assign_1_8_cas_fu_500_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_8_fu_486_p2),32));
    index_assign_1_9_cas_fu_526_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_9_fu_512_p2),32));
    leading_signs_V_1_fu_256_p3 <= 
        tmp_7_fu_250_p2 when (tmp_31_fu_148_p2(0) = '1') else 
        tmp_72_fu_242_p1;
    leading_signs_V_2_fu_264_p3 <= 
        leading_signs_V_1_fu_256_p3 when (tmp_fu_92_p3(0) = '1') else 
        leading_signs_V_fu_198_p3;
    leading_signs_V_fu_198_p3 <= 
        tmp_2_fu_192_p2 when (tmp_28_fu_118_p2(0) = '1') else 
        tmp_70_fu_184_p1;
    mantissa_V_fu_817_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(p_Result_27_9_fu_793_p11));
    p_0274_1_9_fu_681_p5 <= (p_0274_1_fu_568_p3(9 downto 9) & tmp_26_fu_659_p10);
    p_0274_1_fu_568_p3 <= 
        ap_const_lv10_0 when (tmp_75_reg_874(0) = '1') else 
        p_Result_6_fu_561_p3;
    p_Repl2_2_fu_538_p3 <= CompleteRegister_m_c_reg_853(79 downto 79);
    p_Repl2_s_fu_823_p3 <= 
        mantissa_V_fu_817_p2 when (tmp_reg_858(0) = '1') else 
        p_0274_1_9_fu_681_p5;
    p_Result_1_fu_130_p4 <= flipped_V_fu_124_p2(79 downto 16);
    p_Result_27_9_fu_793_p11 <= (((((((((tmp_39_9_fu_787_p2 & tmp_39_8_fu_773_p2) & tmp_39_7_fu_768_p2) & tmp_39_6_fu_758_p2) & tmp_39_5_fu_748_p2) & tmp_39_4_fu_738_p2) & tmp_39_3_fu_728_p2) & tmp_39_2_fu_718_p2) & tmp_39_1_fu_708_p2) & tmp_39_fu_698_p2);
    
    p_Result_2_fu_222_p5_proc : process(p_Result_4_fu_212_p4)
    begin
        for i in 64 - 1 downto 0 loop
            if (i > 63 or i < 48) then
                p_Result_2_fu_222_p5(i) <= ap_const_lv64_FFFFFFFFFFFFFFFF(i);
            elsif (63 - i >= 16) then
                p_Result_2_fu_222_p5(i) <= '0';
            else
                p_Result_2_fu_222_p5(i) <= p_Result_4_fu_212_p4(63 - i);
            end if;
        end loop;
    end process;

    p_Result_3_fu_100_p4 <= CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read(79 downto 16);
    
    p_Result_4_fu_212_p4_proc : process(flipped_V_fu_124_p2)
    variable vlo_cpy : STD_LOGIC_VECTOR(80+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(80+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(80 - 1 downto 0);
    variable p_Result_4_fu_212_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(80 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(80 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(80 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(7 - 1 downto 0) := ap_const_lv32_F(7 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(7 - 1 downto 0) := ap_const_lv32_0(7 - 1 downto 0);
        v0_cpy := flipped_V_fu_124_p2;
        if (vlo_cpy(7 - 1 downto 0) > vhi_cpy(7 - 1 downto 0)) then
            vhi_cpy(7-1 downto 0) := std_logic_vector(80-1-unsigned(ap_const_lv32_0(7-1 downto 0)));
            vlo_cpy(7-1 downto 0) := std_logic_vector(80-1-unsigned(ap_const_lv32_F(7-1 downto 0)));
            for p_Result_4_fu_212_p4_i in 0 to 80-1 loop
                v0_cpy(p_Result_4_fu_212_p4_i) := flipped_V_fu_124_p2(80-1-p_Result_4_fu_212_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(7-1 downto 0)))));

        section := (others=>'0');
        section(7-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(7-1 downto 0)) - unsigned(vlo_cpy(7-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(80-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_4_fu_212_p4 <= resvalue(16-1 downto 0);
    end process;

    p_Result_5_fu_830_p4 <= ((p_Repl2_2_fu_538_p3 & exponent_V_fu_555_p2) & p_Repl2_s_fu_823_p3);
    p_Result_6_fu_561_p3 <= (tmp_76_reg_879 & ap_const_lv9_0);
    
    p_Result_s_31_fu_164_p5_proc : process(p_Result_s_fu_154_p4)
    begin
        for i in 64 - 1 downto 0 loop
            if (i > 63 or i < 48) then
                p_Result_s_31_fu_164_p5(i) <= ap_const_lv64_FFFFFFFFFFFFFFFF(i);
            elsif (63 - i >= 16) then
                p_Result_s_31_fu_164_p5(i) <= '0';
            else
                p_Result_s_31_fu_164_p5(i) <= p_Result_s_fu_154_p4(63 - i);
            end if;
        end loop;
    end process;

    
    p_Result_s_fu_154_p4_proc : process(CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read)
    variable vlo_cpy : STD_LOGIC_VECTOR(80+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(80+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(80 - 1 downto 0);
    variable p_Result_s_fu_154_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(80 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(80 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(80 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(7 - 1 downto 0) := ap_const_lv32_F(7 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(7 - 1 downto 0) := ap_const_lv32_0(7 - 1 downto 0);
        v0_cpy := CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read;
        if (vlo_cpy(7 - 1 downto 0) > vhi_cpy(7 - 1 downto 0)) then
            vhi_cpy(7-1 downto 0) := std_logic_vector(80-1-unsigned(ap_const_lv32_0(7-1 downto 0)));
            vlo_cpy(7-1 downto 0) := std_logic_vector(80-1-unsigned(ap_const_lv32_F(7-1 downto 0)));
            for p_Result_s_fu_154_p4_i in 0 to 80-1 loop
                v0_cpy(p_Result_s_fu_154_p4_i) := CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read(80-1-p_Result_s_fu_154_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(7-1 downto 0)))));

        section := (others=>'0');
        section(7-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(7-1 downto 0)) - unsigned(vlo_cpy(7-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(80-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_s_fu_154_p4 <= resvalue(16-1 downto 0);
    end process;

    p_not1_fu_703_p2 <= (tmp_91_reg_972 xor ap_const_lv1_1);
    p_not2_fu_713_p2 <= (tmp_89_reg_960 xor ap_const_lv1_1);
    p_not3_fu_723_p2 <= (tmp_87_reg_948 xor ap_const_lv1_1);
    p_not4_fu_733_p2 <= (tmp_85_reg_936 xor ap_const_lv1_1);
    p_not5_fu_743_p2 <= (tmp_83_reg_924 xor ap_const_lv1_1);
    p_not6_fu_753_p2 <= (tmp_81_reg_912 xor ap_const_lv1_1);
    p_not7_fu_763_p2 <= (tmp_79_reg_900 xor ap_const_lv1_1);
    p_not_fu_693_p2 <= (tmp_93_reg_984 xor ap_const_lv1_1);
    r_V_2_fu_330_p2 <= std_logic_vector(signed(ap_const_lv9_1FE) + signed(addconv_fu_280_p2));
    r_V_3_fu_356_p2 <= std_logic_vector(signed(ap_const_lv9_1FD) + signed(addconv_fu_280_p2));
    r_V_4_fu_382_p2 <= std_logic_vector(signed(ap_const_lv9_1FC) + signed(addconv_fu_280_p2));
    r_V_5_fu_408_p2 <= std_logic_vector(signed(ap_const_lv9_1FB) + signed(addconv_fu_280_p2));
    r_V_6_fu_434_p2 <= std_logic_vector(signed(ap_const_lv9_1FA) + signed(addconv_fu_280_p2));
    r_V_7_fu_460_p2 <= std_logic_vector(signed(ap_const_lv9_1F9) + signed(addconv_fu_280_p2));
    r_V_8_fu_486_p2 <= std_logic_vector(signed(ap_const_lv9_1F8) + signed(addconv_fu_280_p2));
    r_V_9_fu_512_p2 <= std_logic_vector(signed(ap_const_lv9_1F7) + signed(addconv_fu_280_p2));
    rev1_fu_599_p2 <= (tmp_82_reg_918 xor ap_const_lv1_1);
    rev2_fu_609_p2 <= (tmp_84_reg_930 xor ap_const_lv1_1);
    rev3_fu_619_p2 <= (tmp_86_reg_942 xor ap_const_lv1_1);
    rev4_fu_629_p2 <= (tmp_88_reg_954 xor ap_const_lv1_1);
    rev5_fu_639_p2 <= (tmp_90_reg_966 xor ap_const_lv1_1);
    rev6_fu_649_p2 <= (tmp_92_reg_978 xor ap_const_lv1_1);
    rev7_fu_579_p2 <= (tmp_78_reg_894 xor ap_const_lv1_1);
    rev_fu_589_p2 <= (tmp_80_reg_906 xor ap_const_lv1_1);
    rhs_V_cast_fu_276_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(leading_signs_V_2_fu_264_p3),9));
    sel_tmp_fu_840_p2 <= (tmp_s_fu_545_p2 and tmp_10_reg_864);
    tmp_10_fu_206_p2 <= "1" when (leading_signs_V_fu_198_p3 = ap_const_lv8_50) else "0";
    
    tmp_11_fu_234_p3_proc : process(p_Result_2_fu_222_p5)
    begin
        tmp_11_fu_234_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 64 - 1 downto 0 loop
            if p_Result_2_fu_222_p5(i) = '1' then
                tmp_11_fu_234_p3 <= std_logic_vector(to_unsigned(64-1-i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_14_fu_550_p2 <= std_logic_vector(unsigned(ap_const_lv5_8) - unsigned(tmp_74_reg_869));
    tmp_15_fu_575_p2 <= (tmp_77_reg_889 and tmp_36_1_reg_884);
        tmp_16_cast_fu_286_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(addconv_fu_280_p2),32));

    tmp_16_fu_584_p2 <= (tmp_79_reg_900 and rev7_fu_579_p2);
    tmp_17_fu_594_p2 <= (tmp_81_reg_912 and rev_fu_589_p2);
    tmp_18_fu_604_p2 <= (tmp_83_reg_924 and rev1_fu_599_p2);
    
    tmp_19_fu_110_p3_proc : process(p_Result_3_fu_100_p4)
    begin
        tmp_19_fu_110_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 64 - 1 downto 0 loop
            if p_Result_3_fu_100_p4(i) = '1' then
                tmp_19_fu_110_p3 <= std_logic_vector(to_unsigned(64-1-i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_20_fu_614_p2 <= (tmp_85_reg_936 and rev2_fu_609_p2);
    tmp_21_fu_624_p2 <= (tmp_87_reg_948 and rev3_fu_619_p2);
    tmp_22_fu_634_p2 <= (tmp_89_reg_960 and rev4_fu_629_p2);
    
    tmp_23_fu_140_p3_proc : process(p_Result_1_fu_130_p4)
    begin
        tmp_23_fu_140_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 64 - 1 downto 0 loop
            if p_Result_1_fu_130_p4(i) = '1' then
                tmp_23_fu_140_p3 <= std_logic_vector(to_unsigned(64-1-i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_24_fu_644_p2 <= (tmp_91_reg_972 and rev5_fu_639_p2);
    tmp_25_fu_654_p2 <= (tmp_93_reg_984 and rev6_fu_649_p2);
    tmp_26_fu_659_p10 <= ((((((((tmp_15_fu_575_p2 & tmp_16_fu_584_p2) & tmp_17_fu_594_p2) & tmp_18_fu_604_p2) & tmp_20_fu_614_p2) & tmp_21_fu_624_p2) & tmp_22_fu_634_p2) & tmp_24_fu_644_p2) & tmp_25_fu_654_p2);
    tmp_28_fu_118_p2 <= "1" when (p_Result_3_fu_100_p4 = ap_const_lv64_0) else "0";
    tmp_2_fu_192_p2 <= std_logic_vector(unsigned(tmp_71_fu_188_p1) + unsigned(tmp_70_fu_184_p1));
    tmp_31_fu_148_p2 <= "1" when (p_Result_1_fu_130_p4 = ap_const_lv64_0) else "0";
    tmp_36_1_fu_306_p2 <= "1" when (signed(addconv_fu_280_p2) > signed(ap_const_lv9_0)) else "0";
    tmp_39_1_fu_708_p2 <= (tmp_90_reg_966 or p_not1_fu_703_p2);
    tmp_39_2_fu_718_p2 <= (tmp_88_reg_954 or p_not2_fu_713_p2);
    tmp_39_3_fu_728_p2 <= (tmp_86_reg_942 or p_not3_fu_723_p2);
    tmp_39_4_fu_738_p2 <= (tmp_84_reg_930 or p_not4_fu_733_p2);
    tmp_39_5_fu_748_p2 <= (tmp_82_reg_918 or p_not5_fu_743_p2);
    tmp_39_6_fu_758_p2 <= (tmp_80_reg_906 or p_not6_fu_753_p2);
    tmp_39_7_fu_768_p2 <= (tmp_78_reg_894 or p_not7_fu_763_p2);
    tmp_39_8_fu_773_p2 <= (tmp_15_fu_575_p2 xor ap_const_lv1_1);
    tmp_39_9_fu_787_p2 <= (tmp_94_fu_779_p3 xor ap_const_lv1_1);
    tmp_39_fu_698_p2 <= (tmp_92_reg_978 or p_not_fu_693_p2);
    tmp_70_fu_184_p1 <= tmp_19_fu_110_p3(8 - 1 downto 0);
    tmp_71_fu_188_p1 <= tmp_8_fu_176_p3(8 - 1 downto 0);
    tmp_72_fu_242_p1 <= tmp_23_fu_140_p3(8 - 1 downto 0);
    tmp_73_fu_246_p1 <= tmp_11_fu_234_p3(8 - 1 downto 0);
    tmp_74_fu_272_p1 <= leading_signs_V_2_fu_264_p3(5 - 1 downto 0);
    tmp_76_fu_298_p3 <= CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read(to_integer(unsigned(tmp_16_cast_fu_286_p1)) downto to_integer(unsigned(tmp_16_cast_fu_286_p1))) when (to_integer(unsigned(tmp_16_cast_fu_286_p1))>= 0 and to_integer(unsigned(tmp_16_cast_fu_286_p1))<=79) else "-";
    tmp_77_fu_322_p3 <= CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read(to_integer(unsigned(index_assign_1_1_cas_fu_318_p1)) downto to_integer(unsigned(index_assign_1_1_cas_fu_318_p1))) when (to_integer(unsigned(index_assign_1_1_cas_fu_318_p1))>= 0 and to_integer(unsigned(index_assign_1_1_cas_fu_318_p1))<=79) else "-";
    tmp_79_fu_348_p3 <= CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read(to_integer(unsigned(index_assign_1_2_cas_fu_344_p1)) downto to_integer(unsigned(index_assign_1_2_cas_fu_344_p1))) when (to_integer(unsigned(index_assign_1_2_cas_fu_344_p1))>= 0 and to_integer(unsigned(index_assign_1_2_cas_fu_344_p1))<=79) else "-";
    tmp_7_fu_250_p2 <= std_logic_vector(unsigned(tmp_73_fu_246_p1) + unsigned(tmp_72_fu_242_p1));
    tmp_81_fu_374_p3 <= CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read(to_integer(unsigned(index_assign_1_3_cas_fu_370_p1)) downto to_integer(unsigned(index_assign_1_3_cas_fu_370_p1))) when (to_integer(unsigned(index_assign_1_3_cas_fu_370_p1))>= 0 and to_integer(unsigned(index_assign_1_3_cas_fu_370_p1))<=79) else "-";
    tmp_83_fu_400_p3 <= CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read(to_integer(unsigned(index_assign_1_4_cas_fu_396_p1)) downto to_integer(unsigned(index_assign_1_4_cas_fu_396_p1))) when (to_integer(unsigned(index_assign_1_4_cas_fu_396_p1))>= 0 and to_integer(unsigned(index_assign_1_4_cas_fu_396_p1))<=79) else "-";
    tmp_85_fu_426_p3 <= CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read(to_integer(unsigned(index_assign_1_5_cas_fu_422_p1)) downto to_integer(unsigned(index_assign_1_5_cas_fu_422_p1))) when (to_integer(unsigned(index_assign_1_5_cas_fu_422_p1))>= 0 and to_integer(unsigned(index_assign_1_5_cas_fu_422_p1))<=79) else "-";
    tmp_87_fu_452_p3 <= CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read(to_integer(unsigned(index_assign_1_6_cas_fu_448_p1)) downto to_integer(unsigned(index_assign_1_6_cas_fu_448_p1))) when (to_integer(unsigned(index_assign_1_6_cas_fu_448_p1))>= 0 and to_integer(unsigned(index_assign_1_6_cas_fu_448_p1))<=79) else "-";
    tmp_89_fu_478_p3 <= CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read(to_integer(unsigned(index_assign_1_7_cas_fu_474_p1)) downto to_integer(unsigned(index_assign_1_7_cas_fu_474_p1))) when (to_integer(unsigned(index_assign_1_7_cas_fu_474_p1))>= 0 and to_integer(unsigned(index_assign_1_7_cas_fu_474_p1))<=79) else "-";
    
    tmp_8_fu_176_p3_proc : process(p_Result_s_31_fu_164_p5)
    begin
        tmp_8_fu_176_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 64 - 1 downto 0 loop
            if p_Result_s_31_fu_164_p5(i) = '1' then
                tmp_8_fu_176_p3 <= std_logic_vector(to_unsigned(64-1-i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_91_fu_504_p3 <= CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read(to_integer(unsigned(index_assign_1_8_cas_fu_500_p1)) downto to_integer(unsigned(index_assign_1_8_cas_fu_500_p1))) when (to_integer(unsigned(index_assign_1_8_cas_fu_500_p1))>= 0 and to_integer(unsigned(index_assign_1_8_cas_fu_500_p1))<=79) else "-";
    tmp_93_fu_530_p3 <= CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read(to_integer(unsigned(index_assign_1_9_cas_fu_526_p1)) downto to_integer(unsigned(index_assign_1_9_cas_fu_526_p1))) when (to_integer(unsigned(index_assign_1_9_cas_fu_526_p1))>= 0 and to_integer(unsigned(index_assign_1_9_cas_fu_526_p1))<=79) else "-";
    tmp_94_fu_779_p3 <= p_0274_1_fu_568_p3(9 downto 9);
    tmp_fu_92_p3 <= CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read(79 downto 79);
    tmp_s_fu_545_p2 <= (tmp_reg_858 xor ap_const_lv1_1);
end behav;
