-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity linear_activationfYi_rom is 
    generic(
             dwidth     : integer := 160; 
             awidth     : integer := 6; 
             mem_size    : integer := 64
    ); 
    port (
          addr0      : in std_logic_vector(awidth-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(dwidth-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of linear_activationfYi_rom is 

signal addr0_tmp : std_logic_vector(awidth-1 downto 0); 
type mem_array is array (0 to mem_size-1) of std_logic_vector (dwidth-1 downto 0); 
signal mem : mem_array := (
    0 => "1011101000111000101011111110101010111011000100101011010010110010101011001010101010111100010011001011010111111100001100110001001010111000000011010011001101011000", 
    1 => "1011000011111001001101011001010000101111101001111011101101011010101101111011100110110101111101111010010010010001101011011010110000110000111110010010100000101101", 
    2 => "1011000000101111001011010001011110101010100011111010111110010011001100010000010000110001000101000011011101001000101110011000111110111000100010001011110010010001", 
    3 => "1011110001101100101011110101100110110110101011111010001100100011001100100000100110110111111111000011010011011000001001001100110110101100010001100011000100111011", 
    4 => "1010111100010000101111001101100000111000011000111011010010100100001101110001000110110010111111111011010010100000101110001101110010111101100011110011011100111000", 
    5 => "1010101010010110101110110000101110110101010110001011100001110011001110000110100110111011000100100010111110001101101101111101001100110000100100101011010000101011", 
    6 => "1011010001111110101110000100010010110111101111111001111110111111101111001000111110110010001101100011010101000100101000001100011000111010001011011010010011000000", 
    7 => "0011001000110101101100011000011000101001000100101011001010100111101000001000110000110010000010110011000110111010101110000101011010111010010110101011011001101011", 
    8 => "0011000111011001001011111010001010110101110001101011000010011101101101100010101110110111110010011010011010110010001011001111111000110011011111011011011101011111", 
    9 => "0011100010011101001011010101100010111001010111111011000111100010101111001001001000110100011100011011110001101101101101011110101010110000011110111011011100000000", 
    10 => "1011011101111111101101000010101010111011010001111010010100001011001100111001001100110111101100001010111101111100101011010011011010110111011001101011010010100011", 
    11 => "0010011110110000001011110010000100101001101011100011010010100100001011010001111100110001000100010011001101111011101011110011011110111001000001110010110011001011", 
    12 => "1011011001001001100111101100101100110011011101100011000100100001101111011001100100110100111111011011100010100110001011010010110100110100110011101011100101001001", 
    13 => "0011010011001101101110100000110100110100000000100010010111000111101100100111010110110000101101001011100010000100101100101010100110100110111011010011001011100010", 
    14 => "0010111010111100001011001101111010110001000010000010001000010101101011001010001010111010110000110011000000101011101110100111010000110000011001100010111011000000", 
    15 => "0011010001111101001101110101101110111100101011011010111100101000001101010000110110110101000011110011000011010000101110001110001010111100000011111011001001110011", 
    16 => "1011010011000000001011000000100100110100100011010010110010010000001100010010010100110000011011101011110000011011101101100111110000111010010100111011100101010101", 
    17 => "1011010000011100101101001000000110111000011110001011010010100110001101000001110100110010001110101011100001100100001101101101001110111100011110000011010001011011", 
    18 => "0010100101101010001011111101011110111010001111000011010010000011101100000011100010101111011001111011000001110011001001011101011010111000110110101010101111001110", 
    19 => "0011001111110110001101001110001000110010111011011011101110101010001001011001010110110000000100001011011010000110001011001100111010101111001110010011000011001011", 
    20 => "0011010111001111101111110001110010110100000110001011010010000000101110001101011100110100100100011011101000001100001100011110110010110101101111111011001110110010", 
    21 => "0011001011010000001101000011010010111000000110000011010110101000101011011110100010101010010110110010100010000000101110010100110100100011010111110011000000101110", 
    22 => "0011001101010110001101110101011110111001001010011011101010011001101101100100100110111011011001110011010000001110001011110011001010111000111111011011100011010011", 
    23 => "0011000001001101001001011111111000101100011111101011110010010000001101011111100100110001111000010011001001101101101110110100011100110010101100101011110001011010", 
    24 => "0011010011010011001100011011000100110010001111100010100001001101101100110110000010101110101010101010111001001000001100001100111110111001010001010011000011010011", 
    25 => "0011011100000101101100000000101000101100010110111011001111011000001101100100100110111100010001101011010011110101001100001100110000100001111011111011100000010000", 
    26 => "0011010100000101101100110110111100100000111111001011100100011100101100001010101000110010110111110011000000111100101110100100101000110001100100011011010000000110", 
    27 => "1011001101110100101000010000010010110111101100000011010100111111001011010010101000110111110110001011101100011101101100011100111010111101000011000010100000101011", 
    28 => "1011010111001011001101000000111010111011001100011011100111000101101011001100101110111000111010000011100000101101101101010100011110111010110011011010100110011100", 
    29 => "1011000111100011001011000001110010111010110100010011001110010110101100011111111110111000010000111011011001101111001010101111110100110110100010111011100011000111", 
    30 => "0011010010001101101011001000111000101010010111001010111101110001101111000111010000101011111101101011010000010110001100100011111110110010101000110011000010011110", 
    31 => "1011010110000010001011010100110000110000111011101011100000101110001101010010111010111101100100111010110000000010001110010101000110110110011000011011010110101110", 
    32 => "1011100101001110001100110100110100110101110101010011010010011101101110000101100000110110101011101010111111001011100111100000010110111001111111000010111000011010", 
    33 => "1011111000101011101111001001001100110101101000101011100010010101101111010111111010101100110010010011011100000110001000100000000000110110001100011011101011101001", 
    34 => "0011001111010110001110000011111000101011000101101011001010100111101101011110011110101110000110111011011110101000001100001100000010111100101010101010011100001111", 
    35 => "1010011110100000101011010010011110110110110001010011100001101110001110001000110010111011011010100010111001011000101110100000111000101101111100110011001011000100", 
    36 => "1011110000000111100111001101000100110100011110110011001100110010101110001011111010011011111101011011101000000010001100010001100000110111101001000010110010100100", 
    37 => "0011010011101000101101100000100010110111111101101011101000101100001101111000010010110001001100011011101001101111001101110111011010111000011010011010110110111010", 
    38 => "1011100100100010101101100101011110111000001100111011011110001011101111001010111000110111101110010010110100001000001101010111110100110111000111110010111101000001", 
    39 => "1011110000010000101110011111000000110100111101010011011011011010001001000000011110110010101000101011010100111110001101010000000100101100011011111011010001010010", 
    40 => "1011100101111011001101000110001100110011010100111011100000111011001101011001001010111100011010101011010001001011001110000111000110110011010000110010000111101111", 
    41 => "0011010110111111101100010100111000101101010011011011110001010000101110001110101110111010001011010011001010100010001101011000111010110001100000100011100100001110", 
    42 => "1001110111000110001100001001010000100111000011001011010111000001101100110010000000110011000100111010101000100010101101000011011110111000101110010010000001110011", 
    43 => "1011101011000111101001110001011000111000010101110010111001110111001101010101111100111001001001101011100001101101101110111111101010101100100010011010101111100101", 
    44 => "0011011011101101101100000101001010111000101010100011001100100100101101110010101110110010000100100011010100001101101011001000111110111000111001110010110111001000", 
    45 => "1011110000011010001010001001010110111000111001100011010000100010001101011101010010110100110111011011000101101001001101011101110100101111001011011010110010001011", 
    46 => "0011000001100111101110011001111100110101101101011011110110001110001101001111001010100110111100101010101000010101101100011111010010111100111010111011101000111101", 
    47 => "1010110101011010101111000101101000110100010101110011010100101011101100100101101000110010001010111010111100011100101110011110110000101000000101001011011101110101", 
    48 => "1011110001101110101101000100011100101111110010111011101111011101101100101110011110111110010101110011001000001001001101001101000000100001011110001011110101000000", 
    49 => "1011011110100110001010011001001010111011000111101011011000001100001100111101100110111101000100100011001011110001001101000110101000101011011111100010110110001111", 
    50 => "0011000010100100001101000000101000101100110001101011010011001001001100010000001100101111100111011011110101001100101110011011000000101101000110111011100101000000", 
    51 => "1010111011101001001100000010000110101101000111011011110000010110101111001001000100110110100000110011010111010011001100110010011000101110111111101011010000011000", 
    52 => "1011001101101101001100100001000110111000001100100010100001000001101100000100001010110011010001011011100101011010101101010110100000101111111010010010100110000110", 
    53 => "0011000001010100101110111001100100101110111111100011011011101001101111000010101110110010011110000011010110011100001100100100110100110010101100111011100110010000", 
    54 => "0011100010111101101110101101100110111010100111101100000000000001001101001011001000110100101110000011011010101010101101011110100000110100101101111011110110111010", 
    55 => "1011100101111101101111000101010100111000100110001011010000010110101011001011000010110111101110110011010000000111101101010001100100110110100111100011010000000111", 
    56 => "1011010110111000101110110111111100110111101010101011100001110000101111001111110000111011110101101011110010100100001010000001010110110111001001100011010000010100", 
    57 => "1011110100001001101001000110101000110010111001000011010001001001101101010111111110111001100110011011100100011100001101011111001100110000101001100011011010011001", 
    58 => "0011000000101011001010000110000000110001110110001011100110101001001101010001010010111100110110101011001000101100001100000101010010110110110010010011010001101001", 
    59 => "1010111010111100001100110011110010111100010010110011001010000011001101011000111100110001101011101011011000101000101011110000001110111001101110111011100101000101", 
    60 => "1010110100110101101011011101001100011101010101000011001101110101001101010010001010111000010001010011000011101111101111001010010100011010011001000010100101100111", 
    61 => "1011100110101101101111010001010000101100000101101010111111101010101000110000111110111111001001010011010110011100101011001011001100101111101110000011100000000001", 
    62 => "1011010001010111001100101111010010110110101000101010111100110010101000110100000000110110100001111010110100010110101001010000100100101110011110101011100100111010", 
    63 => "0010100000010011101101010010110000110110100101111011001110001100001101101100001110111110001001110011010100011001001110000001000010111100101110101011101100100110" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity linear_activationfYi is
    generic (
        DataWidth : INTEGER := 160;
        AddressRange : INTEGER := 64;
        AddressWidth : INTEGER := 6);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of linear_activationfYi is
    component linear_activationfYi_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    linear_activationfYi_rom_U :  component linear_activationfYi_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


