-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity linear_activation_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    data_in_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_in_V_V_empty_n : IN STD_LOGIC;
    data_in_V_V_read : OUT STD_LOGIC;
    data_out_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_out_V_V_full_n : IN STD_LOGIC;
    data_out_V_V_write : OUT STD_LOGIC );
end;


architecture behav of linear_activation_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv80_0 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv16_3C00 : STD_LOGIC_VECTOR (15 downto 0) := "0011110000000000";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal L2_WEIGHTS_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal L2_WEIGHTS_V_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_q0 : STD_LOGIC_VECTOR (159 downto 0);
    signal L2_BIAS_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal L2_BIAS_V_ce0 : STD_LOGIC;
    signal L2_BIAS_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal exitcond5_reg_935 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_out_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal exitcond_reg_1053 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp1_iter4_exitcond_reg_1053 : STD_LOGIC_VECTOR (0 downto 0);
    signal acc_9_m_cr_V_reg_181 : STD_LOGIC_VECTOR (79 downto 0);
    signal acc_8_m_cr_V_reg_193 : STD_LOGIC_VECTOR (79 downto 0);
    signal acc_7_m_cr_V_reg_205 : STD_LOGIC_VECTOR (79 downto 0);
    signal acc_6_m_cr_V_reg_217 : STD_LOGIC_VECTOR (79 downto 0);
    signal acc_5_m_cr_V_reg_229 : STD_LOGIC_VECTOR (79 downto 0);
    signal acc_4_m_cr_V_reg_241 : STD_LOGIC_VECTOR (79 downto 0);
    signal acc_3_m_cr_V_reg_253 : STD_LOGIC_VECTOR (79 downto 0);
    signal acc_2_m_cr_V_reg_265 : STD_LOGIC_VECTOR (79 downto 0);
    signal acc_1_m_cr_V_reg_277 : STD_LOGIC_VECTOR (79 downto 0);
    signal acc_0_m_cr_V_reg_289 : STD_LOGIC_VECTOR (79 downto 0);
    signal ii_reg_301 : STD_LOGIC_VECTOR (6 downto 0);
    signal acc_9_m_cr_V_1_reg_312 : STD_LOGIC_VECTOR (79 downto 0);
    signal acc_8_m_cr_V_1_reg_323 : STD_LOGIC_VECTOR (79 downto 0);
    signal acc_9_m_cr_V_7_reg_334 : STD_LOGIC_VECTOR (79 downto 0);
    signal acc_9_m_cr_V_9_reg_345 : STD_LOGIC_VECTOR (79 downto 0);
    signal acc_9_m_cr_V_18_reg_356 : STD_LOGIC_VECTOR (79 downto 0);
    signal acc_9_m_cr_V_3_reg_367 : STD_LOGIC_VECTOR (79 downto 0);
    signal acc_9_m_cr_V_4_reg_378 : STD_LOGIC_VECTOR (79 downto 0);
    signal acc_9_m_cr_V_11_reg_389 : STD_LOGIC_VECTOR (79 downto 0);
    signal acc_9_m_cr_V_13_reg_400 : STD_LOGIC_VECTOR (79 downto 0);
    signal acc_9_m_cr_V_15_reg_411 : STD_LOGIC_VECTOR (79 downto 0);
    signal ires_reg_422 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_pp1_iter1_ires_reg_422 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state8_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state10_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state11_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state12_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state13_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal ap_reg_pp1_iter2_ires_reg_422 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_multiply_accumulate_fu_440_ap_return : STD_LOGIC_VECTOR (79 downto 0);
    signal reg_486 : STD_LOGIC_VECTOR (79 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_reg_pp0_iter1_exitcond5_reg_935 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_reg_pp1_iter2_exitcond_reg_1053 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond5_fu_492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ii_2_fu_498_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ii_2_reg_939 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_V_1_reg_949 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_14_fu_509_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_14_reg_958 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_reg_963 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_reg_968 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_reg_973 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_7_reg_978 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_8_reg_983 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_reg_988 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_reg_993 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_reg_998 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_11_reg_1003 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_multiply_accumulate_fu_448_ap_return : STD_LOGIC_VECTOR (79 downto 0);
    signal acc_1_m_cr_V_1_reg_1008 : STD_LOGIC_VECTOR (79 downto 0);
    signal grp_multiply_accumulate_fu_456_ap_return : STD_LOGIC_VECTOR (79 downto 0);
    signal acc_2_m_cr_V_1_reg_1013 : STD_LOGIC_VECTOR (79 downto 0);
    signal grp_multiply_accumulate_fu_464_ap_return : STD_LOGIC_VECTOR (79 downto 0);
    signal acc_3_m_cr_V_1_reg_1018 : STD_LOGIC_VECTOR (79 downto 0);
    signal grp_multiply_accumulate_fu_472_ap_return : STD_LOGIC_VECTOR (79 downto 0);
    signal acc_4_m_cr_V_1_reg_1023 : STD_LOGIC_VECTOR (79 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal exitcond_fu_603_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp1_iter1_exitcond_reg_1053 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp1_iter3_exitcond_reg_1053 : STD_LOGIC_VECTOR (0 downto 0);
    signal ires_1_fu_609_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ires_1_reg_1057 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal L2_BIAS_V_load_reg_1067 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_9_m_cr_V_5_fu_751_p3 : STD_LOGIC_VECTOR (79 downto 0);
    signal acc_9_m_cr_V_6_fu_767_p3 : STD_LOGIC_VECTOR (79 downto 0);
    signal acc_9_m_cr_V_8_fu_799_p3 : STD_LOGIC_VECTOR (79 downto 0);
    signal acc_9_m_cr_V_10_fu_823_p3 : STD_LOGIC_VECTOR (79 downto 0);
    signal acc_9_m_cr_V_12_fu_847_p3 : STD_LOGIC_VECTOR (79 downto 0);
    signal acc_9_m_cr_V_14_fu_863_p3 : STD_LOGIC_VECTOR (79 downto 0);
    signal acc_9_m_cr_V_16_fu_887_p3 : STD_LOGIC_VECTOR (79 downto 0);
    signal acc_9_m_cr_V_19_fu_903_p3 : STD_LOGIC_VECTOR (79 downto 0);
    signal acc_9_m_cr_V_21_fu_919_p3 : STD_LOGIC_VECTOR (79 downto 0);
    signal acc_9_m_cr_V_22_fu_927_p3 : STD_LOGIC_VECTOR (79 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state8 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal grp_get_result_fu_434_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_get_result_fu_434_ap_ce : STD_LOGIC;
    signal grp_multiply_accumulate_fu_440_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read : STD_LOGIC_VECTOR (79 downto 0);
    signal grp_multiply_accumulate_fu_440_in1_V : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_multiply_accumulate_fu_440_in2_V : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_multiply_accumulate_fu_440_ap_ce : STD_LOGIC;
    signal grp_multiply_accumulate_fu_448_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read : STD_LOGIC_VECTOR (79 downto 0);
    signal grp_multiply_accumulate_fu_448_in2_V : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_multiply_accumulate_fu_448_ap_ce : STD_LOGIC;
    signal grp_multiply_accumulate_fu_456_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read : STD_LOGIC_VECTOR (79 downto 0);
    signal grp_multiply_accumulate_fu_456_in2_V : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_multiply_accumulate_fu_456_ap_ce : STD_LOGIC;
    signal grp_multiply_accumulate_fu_464_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read : STD_LOGIC_VECTOR (79 downto 0);
    signal grp_multiply_accumulate_fu_464_in2_V : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_multiply_accumulate_fu_464_ap_ce : STD_LOGIC;
    signal grp_multiply_accumulate_fu_472_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read : STD_LOGIC_VECTOR (79 downto 0);
    signal grp_multiply_accumulate_fu_472_in2_V : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_multiply_accumulate_fu_472_ap_ce : STD_LOGIC;
    signal ap_phi_mux_acc_4_m_cr_V_phi_fu_245_p4 : STD_LOGIC_VECTOR (79 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_acc_3_m_cr_V_phi_fu_257_p4 : STD_LOGIC_VECTOR (79 downto 0);
    signal ap_phi_mux_acc_2_m_cr_V_phi_fu_269_p4 : STD_LOGIC_VECTOR (79 downto 0);
    signal ap_phi_mux_acc_1_m_cr_V_phi_fu_281_p4 : STD_LOGIC_VECTOR (79 downto 0);
    signal ap_phi_mux_acc_0_m_cr_V_phi_fu_293_p4 : STD_LOGIC_VECTOR (79 downto 0);
    signal ap_phi_mux_ii_phi_fu_305_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_mux_acc_9_m_cr_V_1_phi_fu_315_p4 : STD_LOGIC_VECTOR (79 downto 0);
    signal ap_phi_mux_acc_8_m_cr_V_1_phi_fu_326_p4 : STD_LOGIC_VECTOR (79 downto 0);
    signal ap_phi_mux_acc_9_m_cr_V_7_phi_fu_337_p4 : STD_LOGIC_VECTOR (79 downto 0);
    signal ap_phi_mux_acc_9_m_cr_V_9_phi_fu_348_p4 : STD_LOGIC_VECTOR (79 downto 0);
    signal ap_phi_mux_acc_9_m_cr_V_18_phi_fu_359_p4 : STD_LOGIC_VECTOR (79 downto 0);
    signal ap_phi_mux_acc_9_m_cr_V_3_phi_fu_370_p4 : STD_LOGIC_VECTOR (79 downto 0);
    signal ap_phi_mux_acc_9_m_cr_V_4_phi_fu_381_p4 : STD_LOGIC_VECTOR (79 downto 0);
    signal ap_phi_mux_acc_9_m_cr_V_11_phi_fu_392_p4 : STD_LOGIC_VECTOR (79 downto 0);
    signal ap_phi_mux_acc_9_m_cr_V_13_phi_fu_403_p4 : STD_LOGIC_VECTOR (79 downto 0);
    signal ap_phi_mux_acc_9_m_cr_V_15_phi_fu_414_p4 : STD_LOGIC_VECTOR (79 downto 0);
    signal ap_phi_mux_ires_phi_fu_426_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_620_p12 : STD_LOGIC_VECTOR (79 downto 0);
    signal tmp_1_fu_504_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_fu_615_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal sel_tmp7_fu_695_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_689_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_683_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_677_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_671_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_701_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_fu_707_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_fu_713_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_fu_719_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_fu_733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond5_fu_739_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond6_fu_745_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_fu_725_p3 : STD_LOGIC_VECTOR (79 downto 0);
    signal newSel2_fu_759_p3 : STD_LOGIC_VECTOR (79 downto 0);
    signal newSel4_fu_775_p3 : STD_LOGIC_VECTOR (79 downto 0);
    signal newSel5_fu_783_p3 : STD_LOGIC_VECTOR (79 downto 0);
    signal newSel6_fu_791_p3 : STD_LOGIC_VECTOR (79 downto 0);
    signal newSel8_fu_807_p3 : STD_LOGIC_VECTOR (79 downto 0);
    signal newSel9_fu_815_p3 : STD_LOGIC_VECTOR (79 downto 0);
    signal newSel1_fu_831_p3 : STD_LOGIC_VECTOR (79 downto 0);
    signal newSel3_fu_839_p3 : STD_LOGIC_VECTOR (79 downto 0);
    signal newSel7_fu_855_p3 : STD_LOGIC_VECTOR (79 downto 0);
    signal newSel10_fu_871_p3 : STD_LOGIC_VECTOR (79 downto 0);
    signal newSel11_fu_879_p3 : STD_LOGIC_VECTOR (79 downto 0);
    signal newSel12_fu_895_p3 : STD_LOGIC_VECTOR (79 downto 0);
    signal acc_9_m_cr_V_20_fu_911_p3 : STD_LOGIC_VECTOR (79 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_condition_761 : BOOLEAN;
    signal ap_condition_765 : BOOLEAN;

    component get_result IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read : IN STD_LOGIC_VECTOR (79 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component multiply_accumulate IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read : IN STD_LOGIC_VECTOR (79 downto 0);
        in1_V : IN STD_LOGIC_VECTOR (15 downto 0);
        in2_V : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (79 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component mnist_edp_mux_104hbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (79 downto 0);
        din1 : IN STD_LOGIC_VECTOR (79 downto 0);
        din2 : IN STD_LOGIC_VECTOR (79 downto 0);
        din3 : IN STD_LOGIC_VECTOR (79 downto 0);
        din4 : IN STD_LOGIC_VECTOR (79 downto 0);
        din5 : IN STD_LOGIC_VECTOR (79 downto 0);
        din6 : IN STD_LOGIC_VECTOR (79 downto 0);
        din7 : IN STD_LOGIC_VECTOR (79 downto 0);
        din8 : IN STD_LOGIC_VECTOR (79 downto 0);
        din9 : IN STD_LOGIC_VECTOR (79 downto 0);
        din10 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (79 downto 0) );
    end component;


    component linear_activationfYi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (159 downto 0) );
    end component;


    component linear_activationg8j IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    L2_WEIGHTS_V_U : component linear_activationfYi
    generic map (
        DataWidth => 160,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_address0,
        ce0 => L2_WEIGHTS_V_ce0,
        q0 => L2_WEIGHTS_V_q0);

    L2_BIAS_V_U : component linear_activationg8j
    generic map (
        DataWidth => 16,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_BIAS_V_address0,
        ce0 => L2_BIAS_V_ce0,
        q0 => L2_BIAS_V_q0);

    grp_get_result_fu_434 : component get_result
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read => reg_486,
        ap_return => grp_get_result_fu_434_ap_return,
        ap_ce => grp_get_result_fu_434_ap_ce);

    grp_multiply_accumulate_fu_440 : component multiply_accumulate
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read => grp_multiply_accumulate_fu_440_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read,
        in1_V => grp_multiply_accumulate_fu_440_in1_V,
        in2_V => grp_multiply_accumulate_fu_440_in2_V,
        ap_return => grp_multiply_accumulate_fu_440_ap_return,
        ap_ce => grp_multiply_accumulate_fu_440_ap_ce);

    grp_multiply_accumulate_fu_448 : component multiply_accumulate
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read => grp_multiply_accumulate_fu_448_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read,
        in1_V => tmp_V_1_reg_949,
        in2_V => grp_multiply_accumulate_fu_448_in2_V,
        ap_return => grp_multiply_accumulate_fu_448_ap_return,
        ap_ce => grp_multiply_accumulate_fu_448_ap_ce);

    grp_multiply_accumulate_fu_456 : component multiply_accumulate
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read => grp_multiply_accumulate_fu_456_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read,
        in1_V => tmp_V_1_reg_949,
        in2_V => grp_multiply_accumulate_fu_456_in2_V,
        ap_return => grp_multiply_accumulate_fu_456_ap_return,
        ap_ce => grp_multiply_accumulate_fu_456_ap_ce);

    grp_multiply_accumulate_fu_464 : component multiply_accumulate
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read => grp_multiply_accumulate_fu_464_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read,
        in1_V => tmp_V_1_reg_949,
        in2_V => grp_multiply_accumulate_fu_464_in2_V,
        ap_return => grp_multiply_accumulate_fu_464_ap_return,
        ap_ce => grp_multiply_accumulate_fu_464_ap_ce);

    grp_multiply_accumulate_fu_472 : component multiply_accumulate
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read => grp_multiply_accumulate_fu_472_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read,
        in1_V => tmp_V_1_reg_949,
        in2_V => grp_multiply_accumulate_fu_472_in2_V,
        ap_return => grp_multiply_accumulate_fu_472_ap_return,
        ap_ce => grp_multiply_accumulate_fu_472_ap_ce);

    mnist_edp_mux_104hbi_U23 : component mnist_edp_mux_104hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 80,
        din1_WIDTH => 80,
        din2_WIDTH => 80,
        din3_WIDTH => 80,
        din4_WIDTH => 80,
        din5_WIDTH => 80,
        din6_WIDTH => 80,
        din7_WIDTH => 80,
        din8_WIDTH => 80,
        din9_WIDTH => 80,
        din10_WIDTH => 4,
        dout_WIDTH => 80)
    port map (
        din0 => ap_phi_mux_acc_9_m_cr_V_15_phi_fu_414_p4,
        din1 => ap_phi_mux_acc_9_m_cr_V_13_phi_fu_403_p4,
        din2 => ap_phi_mux_acc_9_m_cr_V_11_phi_fu_392_p4,
        din3 => ap_phi_mux_acc_9_m_cr_V_4_phi_fu_381_p4,
        din4 => ap_phi_mux_acc_9_m_cr_V_3_phi_fu_370_p4,
        din5 => ap_phi_mux_acc_9_m_cr_V_18_phi_fu_359_p4,
        din6 => ap_phi_mux_acc_9_m_cr_V_9_phi_fu_348_p4,
        din7 => ap_phi_mux_acc_9_m_cr_V_7_phi_fu_337_p4,
        din8 => ap_phi_mux_acc_8_m_cr_V_1_phi_fu_326_p4,
        din9 => ap_phi_mux_acc_9_m_cr_V_1_phi_fu_315_p4,
        din10 => ap_reg_pp1_iter1_ires_reg_422,
        dout => tmp_fu_620_p12);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state8) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state8)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state8);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    acc_0_m_cr_V_reg_289_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_exitcond5_reg_935 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                acc_0_m_cr_V_reg_289 <= reg_486;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                acc_0_m_cr_V_reg_289 <= ap_const_lv80_0;
            end if; 
        end if;
    end process;

    acc_1_m_cr_V_reg_277_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_exitcond5_reg_935 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                acc_1_m_cr_V_reg_277 <= acc_1_m_cr_V_1_reg_1008;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                acc_1_m_cr_V_reg_277 <= ap_const_lv80_0;
            end if; 
        end if;
    end process;

    acc_2_m_cr_V_reg_265_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_exitcond5_reg_935 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                acc_2_m_cr_V_reg_265 <= acc_2_m_cr_V_1_reg_1013;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                acc_2_m_cr_V_reg_265 <= ap_const_lv80_0;
            end if; 
        end if;
    end process;

    acc_3_m_cr_V_reg_253_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_exitcond5_reg_935 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                acc_3_m_cr_V_reg_253 <= acc_3_m_cr_V_1_reg_1018;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                acc_3_m_cr_V_reg_253 <= ap_const_lv80_0;
            end if; 
        end if;
    end process;

    acc_4_m_cr_V_reg_241_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_exitcond5_reg_935 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                acc_4_m_cr_V_reg_241 <= acc_4_m_cr_V_1_reg_1023;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                acc_4_m_cr_V_reg_241 <= ap_const_lv80_0;
            end if; 
        end if;
    end process;

    acc_5_m_cr_V_reg_229_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_exitcond5_reg_935 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                acc_5_m_cr_V_reg_229 <= grp_multiply_accumulate_fu_440_ap_return;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                acc_5_m_cr_V_reg_229 <= ap_const_lv80_0;
            end if; 
        end if;
    end process;

    acc_6_m_cr_V_reg_217_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_exitcond5_reg_935 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                acc_6_m_cr_V_reg_217 <= grp_multiply_accumulate_fu_448_ap_return;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                acc_6_m_cr_V_reg_217 <= ap_const_lv80_0;
            end if; 
        end if;
    end process;

    acc_7_m_cr_V_reg_205_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_exitcond5_reg_935 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                acc_7_m_cr_V_reg_205 <= grp_multiply_accumulate_fu_456_ap_return;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                acc_7_m_cr_V_reg_205 <= ap_const_lv80_0;
            end if; 
        end if;
    end process;

    acc_8_m_cr_V_1_reg_323_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                acc_8_m_cr_V_1_reg_323 <= acc_8_m_cr_V_reg_193;
            elsif (((ap_reg_pp1_iter2_exitcond_reg_1053 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                acc_8_m_cr_V_1_reg_323 <= acc_9_m_cr_V_6_fu_767_p3;
            end if; 
        end if;
    end process;

    acc_8_m_cr_V_reg_193_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_exitcond5_reg_935 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                acc_8_m_cr_V_reg_193 <= grp_multiply_accumulate_fu_464_ap_return;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                acc_8_m_cr_V_reg_193 <= ap_const_lv80_0;
            end if; 
        end if;
    end process;

    acc_9_m_cr_V_11_reg_389_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                acc_9_m_cr_V_11_reg_389 <= acc_2_m_cr_V_reg_265;
            elsif (((ap_reg_pp1_iter2_exitcond_reg_1053 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                acc_9_m_cr_V_11_reg_389 <= acc_9_m_cr_V_19_fu_903_p3;
            end if; 
        end if;
    end process;

    acc_9_m_cr_V_13_reg_400_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                acc_9_m_cr_V_13_reg_400 <= acc_1_m_cr_V_reg_277;
            elsif (((ap_reg_pp1_iter2_exitcond_reg_1053 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                acc_9_m_cr_V_13_reg_400 <= acc_9_m_cr_V_21_fu_919_p3;
            end if; 
        end if;
    end process;

    acc_9_m_cr_V_15_reg_411_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                acc_9_m_cr_V_15_reg_411 <= acc_0_m_cr_V_reg_289;
            elsif (((ap_reg_pp1_iter2_exitcond_reg_1053 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                acc_9_m_cr_V_15_reg_411 <= acc_9_m_cr_V_22_fu_927_p3;
            end if; 
        end if;
    end process;

    acc_9_m_cr_V_18_reg_356_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                acc_9_m_cr_V_18_reg_356 <= acc_5_m_cr_V_reg_229;
            elsif (((ap_reg_pp1_iter2_exitcond_reg_1053 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                acc_9_m_cr_V_18_reg_356 <= acc_9_m_cr_V_12_fu_847_p3;
            end if; 
        end if;
    end process;

    acc_9_m_cr_V_1_reg_312_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                acc_9_m_cr_V_1_reg_312 <= acc_9_m_cr_V_reg_181;
            elsif (((ap_reg_pp1_iter2_exitcond_reg_1053 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                acc_9_m_cr_V_1_reg_312 <= acc_9_m_cr_V_5_fu_751_p3;
            end if; 
        end if;
    end process;

    acc_9_m_cr_V_3_reg_367_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                acc_9_m_cr_V_3_reg_367 <= acc_4_m_cr_V_reg_241;
            elsif (((ap_reg_pp1_iter2_exitcond_reg_1053 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                acc_9_m_cr_V_3_reg_367 <= acc_9_m_cr_V_14_fu_863_p3;
            end if; 
        end if;
    end process;

    acc_9_m_cr_V_4_reg_378_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                acc_9_m_cr_V_4_reg_378 <= acc_3_m_cr_V_reg_253;
            elsif (((ap_reg_pp1_iter2_exitcond_reg_1053 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                acc_9_m_cr_V_4_reg_378 <= acc_9_m_cr_V_16_fu_887_p3;
            end if; 
        end if;
    end process;

    acc_9_m_cr_V_7_reg_334_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                acc_9_m_cr_V_7_reg_334 <= acc_7_m_cr_V_reg_205;
            elsif (((ap_reg_pp1_iter2_exitcond_reg_1053 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                acc_9_m_cr_V_7_reg_334 <= acc_9_m_cr_V_8_fu_799_p3;
            end if; 
        end if;
    end process;

    acc_9_m_cr_V_9_reg_345_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                acc_9_m_cr_V_9_reg_345 <= acc_6_m_cr_V_reg_217;
            elsif (((ap_reg_pp1_iter2_exitcond_reg_1053 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                acc_9_m_cr_V_9_reg_345 <= acc_9_m_cr_V_10_fu_823_p3;
            end if; 
        end if;
    end process;

    acc_9_m_cr_V_reg_181_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_exitcond5_reg_935 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                acc_9_m_cr_V_reg_181 <= grp_multiply_accumulate_fu_472_ap_return;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                acc_9_m_cr_V_reg_181 <= ap_const_lv80_0;
            end if; 
        end if;
    end process;

    ii_reg_301_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond5_reg_935 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ii_reg_301 <= ii_2_reg_939;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                ii_reg_301 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    ires_reg_422_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                ires_reg_422 <= ap_const_lv4_0;
            elsif (((exitcond_reg_1053 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                ires_reg_422 <= ires_1_reg_1057;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_1053 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                L2_BIAS_V_load_reg_1067 <= L2_BIAS_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_exitcond5_reg_935 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                acc_1_m_cr_V_1_reg_1008 <= grp_multiply_accumulate_fu_448_ap_return;
                acc_2_m_cr_V_1_reg_1013 <= grp_multiply_accumulate_fu_456_ap_return;
                acc_3_m_cr_V_1_reg_1018 <= grp_multiply_accumulate_fu_464_ap_return;
                acc_4_m_cr_V_1_reg_1023 <= grp_multiply_accumulate_fu_472_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_reg_pp0_iter1_exitcond5_reg_935 <= exitcond5_reg_935;
                exitcond5_reg_935 <= exitcond5_fu_492_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_reg_pp1_iter1_exitcond_reg_1053 <= exitcond_reg_1053;
                ap_reg_pp1_iter1_ires_reg_422 <= ires_reg_422;
                exitcond_reg_1053 <= exitcond_fu_603_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                ap_reg_pp1_iter2_exitcond_reg_1053 <= ap_reg_pp1_iter1_exitcond_reg_1053;
                ap_reg_pp1_iter2_ires_reg_422 <= ap_reg_pp1_iter1_ires_reg_422;
                ap_reg_pp1_iter3_exitcond_reg_1053 <= ap_reg_pp1_iter2_exitcond_reg_1053;
                ap_reg_pp1_iter4_exitcond_reg_1053 <= ap_reg_pp1_iter3_exitcond_reg_1053;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ii_2_reg_939 <= ii_2_fu_498_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ires_1_reg_1057 <= ires_1_fu_609_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_reg_pp0_iter1_exitcond5_reg_935 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_reg_pp1_iter2_exitcond_reg_1053 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then
                reg_486 <= grp_multiply_accumulate_fu_440_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond5_reg_935 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp_10_reg_998 <= L2_WEIGHTS_V_q0(143 downto 128);
                tmp_11_reg_1003 <= L2_WEIGHTS_V_q0(159 downto 144);
                tmp_14_reg_958 <= tmp_14_fu_509_p1;
                tmp_3_reg_993 <= L2_WEIGHTS_V_q0(127 downto 112);
                tmp_4_reg_963 <= L2_WEIGHTS_V_q0(31 downto 16);
                tmp_5_reg_968 <= L2_WEIGHTS_V_q0(47 downto 32);
                tmp_6_reg_973 <= L2_WEIGHTS_V_q0(63 downto 48);
                tmp_7_reg_978 <= L2_WEIGHTS_V_q0(79 downto 64);
                tmp_8_reg_983 <= L2_WEIGHTS_V_q0(95 downto 80);
                tmp_9_reg_988 <= L2_WEIGHTS_V_q0(111 downto 96);
                tmp_V_1_reg_949 <= data_in_V_V_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp1_iter5, ap_enable_reg_pp0_iter1, exitcond5_fu_492_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, exitcond_fu_603_p2, ap_enable_reg_pp1_iter0, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond5_fu_492_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond5_fu_492_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (exitcond_fu_603_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (exitcond_fu_603_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    L2_BIAS_V_address0 <= tmp_2_fu_615_p1(4 - 1 downto 0);

    L2_BIAS_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            L2_BIAS_V_ce0 <= ap_const_logic_1;
        else 
            L2_BIAS_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_address0 <= tmp_1_fu_504_p1(6 - 1 downto 0);

    L2_WEIGHTS_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            L2_WEIGHTS_V_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    acc_9_m_cr_V_10_fu_823_p3 <= 
        acc_9_m_cr_V_9_reg_345 when (or_cond4_fu_733_p2(0) = '1') else 
        newSel9_fu_815_p3;
    acc_9_m_cr_V_12_fu_847_p3 <= 
        acc_9_m_cr_V_18_reg_356 when (or_cond4_fu_733_p2(0) = '1') else 
        newSel3_fu_839_p3;
    acc_9_m_cr_V_14_fu_863_p3 <= 
        acc_9_m_cr_V_3_reg_367 when (or_cond4_fu_733_p2(0) = '1') else 
        newSel7_fu_855_p3;
    acc_9_m_cr_V_16_fu_887_p3 <= 
        newSel11_fu_879_p3 when (or_cond4_fu_733_p2(0) = '1') else 
        acc_9_m_cr_V_4_reg_378;
    acc_9_m_cr_V_19_fu_903_p3 <= 
        acc_9_m_cr_V_11_reg_389 when (or_cond_fu_701_p2(0) = '1') else 
        newSel12_fu_895_p3;
    acc_9_m_cr_V_20_fu_911_p3 <= 
        grp_multiply_accumulate_fu_440_ap_return when (sel_tmp5_fu_689_p2(0) = '1') else 
        acc_9_m_cr_V_13_reg_400;
    acc_9_m_cr_V_21_fu_919_p3 <= 
        acc_9_m_cr_V_13_reg_400 when (sel_tmp7_fu_695_p2(0) = '1') else 
        acc_9_m_cr_V_20_fu_911_p3;
    acc_9_m_cr_V_22_fu_927_p3 <= 
        grp_multiply_accumulate_fu_440_ap_return when (sel_tmp7_fu_695_p2(0) = '1') else 
        acc_9_m_cr_V_15_reg_411;
    acc_9_m_cr_V_5_fu_751_p3 <= 
        acc_9_m_cr_V_1_reg_312 when (or_cond6_fu_745_p2(0) = '1') else 
        newSel_fu_725_p3;
    acc_9_m_cr_V_6_fu_767_p3 <= 
        acc_8_m_cr_V_1_reg_323 when (or_cond6_fu_745_p2(0) = '1') else 
        newSel2_fu_759_p3;
    acc_9_m_cr_V_8_fu_799_p3 <= 
        newSel6_fu_791_p3 when (or_cond6_fu_745_p2(0) = '1') else 
        acc_9_m_cr_V_7_reg_334;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state14 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_assign_proc : process(data_in_V_V_empty_n, ap_enable_reg_pp0_iter0, exitcond5_reg_935)
    begin
                ap_block_pp0_stage1_11001 <= ((exitcond5_reg_935 = ap_const_lv1_0) and (data_in_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(data_in_V_V_empty_n, ap_enable_reg_pp0_iter0, exitcond5_reg_935)
    begin
                ap_block_pp0_stage1_subdone <= ((exitcond5_reg_935 = ap_const_lv1_0) and (data_in_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(data_out_V_V_full_n, ap_enable_reg_pp1_iter5, ap_reg_pp1_iter4_exitcond_reg_1053)
    begin
                ap_block_pp1_stage0_01001 <= ((ap_reg_pp1_iter4_exitcond_reg_1053 = ap_const_lv1_0) and (data_out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(data_out_V_V_full_n, ap_enable_reg_pp1_iter5, ap_reg_pp1_iter4_exitcond_reg_1053)
    begin
                ap_block_pp1_stage0_11001 <= ((ap_reg_pp1_iter4_exitcond_reg_1053 = ap_const_lv1_0) and (data_out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(data_out_V_V_full_n, ap_enable_reg_pp1_iter5, ap_reg_pp1_iter4_exitcond_reg_1053)
    begin
                ap_block_pp1_stage0_subdone <= ((ap_reg_pp1_iter4_exitcond_reg_1053 = ap_const_lv1_0) and (data_out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state13_pp1_stage0_iter5_assign_proc : process(data_out_V_V_full_n, ap_reg_pp1_iter4_exitcond_reg_1053)
    begin
                ap_block_state13_pp1_stage0_iter5 <= ((ap_reg_pp1_iter4_exitcond_reg_1053 = ap_const_lv1_0) and (data_out_V_V_full_n = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage1_iter0_assign_proc : process(data_in_V_V_empty_n, exitcond5_reg_935)
    begin
                ap_block_state3_pp0_stage1_iter0 <= ((exitcond5_reg_935 = ap_const_lv1_0) and (data_in_V_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_761_assign_proc : process(exitcond5_reg_935, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
                ap_condition_761 <= ((exitcond5_reg_935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_765_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_reg_pp0_iter1_exitcond5_reg_935)
    begin
                ap_condition_765 <= ((ap_reg_pp0_iter1_exitcond5_reg_935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond5_fu_492_p2)
    begin
        if ((exitcond5_fu_492_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state8_assign_proc : process(exitcond_fu_603_p2)
    begin
        if ((exitcond_fu_603_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state8 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter4)
    begin
        if (((ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_acc_0_m_cr_V_phi_fu_293_p4_assign_proc : process(acc_0_m_cr_V_reg_289, reg_486, ap_reg_pp0_iter1_exitcond5_reg_935, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0)
    begin
        if (((ap_reg_pp0_iter1_exitcond5_reg_935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_acc_0_m_cr_V_phi_fu_293_p4 <= reg_486;
        else 
            ap_phi_mux_acc_0_m_cr_V_phi_fu_293_p4 <= acc_0_m_cr_V_reg_289;
        end if; 
    end process;


    ap_phi_mux_acc_1_m_cr_V_phi_fu_281_p4_assign_proc : process(acc_1_m_cr_V_reg_277, ap_reg_pp0_iter1_exitcond5_reg_935, ap_CS_fsm_pp0_stage0, acc_1_m_cr_V_1_reg_1008, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0)
    begin
        if (((ap_reg_pp0_iter1_exitcond5_reg_935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_acc_1_m_cr_V_phi_fu_281_p4 <= acc_1_m_cr_V_1_reg_1008;
        else 
            ap_phi_mux_acc_1_m_cr_V_phi_fu_281_p4 <= acc_1_m_cr_V_reg_277;
        end if; 
    end process;


    ap_phi_mux_acc_2_m_cr_V_phi_fu_269_p4_assign_proc : process(acc_2_m_cr_V_reg_265, ap_reg_pp0_iter1_exitcond5_reg_935, ap_CS_fsm_pp0_stage0, acc_2_m_cr_V_1_reg_1013, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0)
    begin
        if (((ap_reg_pp0_iter1_exitcond5_reg_935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_acc_2_m_cr_V_phi_fu_269_p4 <= acc_2_m_cr_V_1_reg_1013;
        else 
            ap_phi_mux_acc_2_m_cr_V_phi_fu_269_p4 <= acc_2_m_cr_V_reg_265;
        end if; 
    end process;


    ap_phi_mux_acc_3_m_cr_V_phi_fu_257_p4_assign_proc : process(acc_3_m_cr_V_reg_253, ap_reg_pp0_iter1_exitcond5_reg_935, ap_CS_fsm_pp0_stage0, acc_3_m_cr_V_1_reg_1018, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0)
    begin
        if (((ap_reg_pp0_iter1_exitcond5_reg_935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_acc_3_m_cr_V_phi_fu_257_p4 <= acc_3_m_cr_V_1_reg_1018;
        else 
            ap_phi_mux_acc_3_m_cr_V_phi_fu_257_p4 <= acc_3_m_cr_V_reg_253;
        end if; 
    end process;


    ap_phi_mux_acc_4_m_cr_V_phi_fu_245_p4_assign_proc : process(acc_4_m_cr_V_reg_241, ap_reg_pp0_iter1_exitcond5_reg_935, ap_CS_fsm_pp0_stage0, acc_4_m_cr_V_1_reg_1023, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0)
    begin
        if (((ap_reg_pp0_iter1_exitcond5_reg_935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_acc_4_m_cr_V_phi_fu_245_p4 <= acc_4_m_cr_V_1_reg_1023;
        else 
            ap_phi_mux_acc_4_m_cr_V_phi_fu_245_p4 <= acc_4_m_cr_V_reg_241;
        end if; 
    end process;


    ap_phi_mux_acc_8_m_cr_V_1_phi_fu_326_p4_assign_proc : process(ap_block_pp1_stage0, acc_8_m_cr_V_1_reg_323, ap_enable_reg_pp1_iter3, ap_reg_pp1_iter2_exitcond_reg_1053, acc_9_m_cr_V_6_fu_767_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_reg_pp1_iter2_exitcond_reg_1053 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            ap_phi_mux_acc_8_m_cr_V_1_phi_fu_326_p4 <= acc_9_m_cr_V_6_fu_767_p3;
        else 
            ap_phi_mux_acc_8_m_cr_V_1_phi_fu_326_p4 <= acc_8_m_cr_V_1_reg_323;
        end if; 
    end process;


    ap_phi_mux_acc_9_m_cr_V_11_phi_fu_392_p4_assign_proc : process(ap_block_pp1_stage0, acc_9_m_cr_V_11_reg_389, ap_enable_reg_pp1_iter3, ap_reg_pp1_iter2_exitcond_reg_1053, acc_9_m_cr_V_19_fu_903_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_reg_pp1_iter2_exitcond_reg_1053 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            ap_phi_mux_acc_9_m_cr_V_11_phi_fu_392_p4 <= acc_9_m_cr_V_19_fu_903_p3;
        else 
            ap_phi_mux_acc_9_m_cr_V_11_phi_fu_392_p4 <= acc_9_m_cr_V_11_reg_389;
        end if; 
    end process;


    ap_phi_mux_acc_9_m_cr_V_13_phi_fu_403_p4_assign_proc : process(ap_block_pp1_stage0, acc_9_m_cr_V_13_reg_400, ap_enable_reg_pp1_iter3, ap_reg_pp1_iter2_exitcond_reg_1053, acc_9_m_cr_V_21_fu_919_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_reg_pp1_iter2_exitcond_reg_1053 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            ap_phi_mux_acc_9_m_cr_V_13_phi_fu_403_p4 <= acc_9_m_cr_V_21_fu_919_p3;
        else 
            ap_phi_mux_acc_9_m_cr_V_13_phi_fu_403_p4 <= acc_9_m_cr_V_13_reg_400;
        end if; 
    end process;


    ap_phi_mux_acc_9_m_cr_V_15_phi_fu_414_p4_assign_proc : process(ap_block_pp1_stage0, acc_9_m_cr_V_15_reg_411, ap_enable_reg_pp1_iter3, ap_reg_pp1_iter2_exitcond_reg_1053, acc_9_m_cr_V_22_fu_927_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_reg_pp1_iter2_exitcond_reg_1053 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            ap_phi_mux_acc_9_m_cr_V_15_phi_fu_414_p4 <= acc_9_m_cr_V_22_fu_927_p3;
        else 
            ap_phi_mux_acc_9_m_cr_V_15_phi_fu_414_p4 <= acc_9_m_cr_V_15_reg_411;
        end if; 
    end process;


    ap_phi_mux_acc_9_m_cr_V_18_phi_fu_359_p4_assign_proc : process(ap_block_pp1_stage0, acc_9_m_cr_V_18_reg_356, ap_enable_reg_pp1_iter3, ap_reg_pp1_iter2_exitcond_reg_1053, acc_9_m_cr_V_12_fu_847_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_reg_pp1_iter2_exitcond_reg_1053 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            ap_phi_mux_acc_9_m_cr_V_18_phi_fu_359_p4 <= acc_9_m_cr_V_12_fu_847_p3;
        else 
            ap_phi_mux_acc_9_m_cr_V_18_phi_fu_359_p4 <= acc_9_m_cr_V_18_reg_356;
        end if; 
    end process;


    ap_phi_mux_acc_9_m_cr_V_1_phi_fu_315_p4_assign_proc : process(ap_block_pp1_stage0, acc_9_m_cr_V_1_reg_312, ap_enable_reg_pp1_iter3, ap_reg_pp1_iter2_exitcond_reg_1053, acc_9_m_cr_V_5_fu_751_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_reg_pp1_iter2_exitcond_reg_1053 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            ap_phi_mux_acc_9_m_cr_V_1_phi_fu_315_p4 <= acc_9_m_cr_V_5_fu_751_p3;
        else 
            ap_phi_mux_acc_9_m_cr_V_1_phi_fu_315_p4 <= acc_9_m_cr_V_1_reg_312;
        end if; 
    end process;


    ap_phi_mux_acc_9_m_cr_V_3_phi_fu_370_p4_assign_proc : process(ap_block_pp1_stage0, acc_9_m_cr_V_3_reg_367, ap_enable_reg_pp1_iter3, ap_reg_pp1_iter2_exitcond_reg_1053, acc_9_m_cr_V_14_fu_863_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_reg_pp1_iter2_exitcond_reg_1053 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            ap_phi_mux_acc_9_m_cr_V_3_phi_fu_370_p4 <= acc_9_m_cr_V_14_fu_863_p3;
        else 
            ap_phi_mux_acc_9_m_cr_V_3_phi_fu_370_p4 <= acc_9_m_cr_V_3_reg_367;
        end if; 
    end process;


    ap_phi_mux_acc_9_m_cr_V_4_phi_fu_381_p4_assign_proc : process(ap_block_pp1_stage0, acc_9_m_cr_V_4_reg_378, ap_enable_reg_pp1_iter3, ap_reg_pp1_iter2_exitcond_reg_1053, acc_9_m_cr_V_16_fu_887_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_reg_pp1_iter2_exitcond_reg_1053 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            ap_phi_mux_acc_9_m_cr_V_4_phi_fu_381_p4 <= acc_9_m_cr_V_16_fu_887_p3;
        else 
            ap_phi_mux_acc_9_m_cr_V_4_phi_fu_381_p4 <= acc_9_m_cr_V_4_reg_378;
        end if; 
    end process;


    ap_phi_mux_acc_9_m_cr_V_7_phi_fu_337_p4_assign_proc : process(ap_block_pp1_stage0, acc_9_m_cr_V_7_reg_334, ap_enable_reg_pp1_iter3, ap_reg_pp1_iter2_exitcond_reg_1053, acc_9_m_cr_V_8_fu_799_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_reg_pp1_iter2_exitcond_reg_1053 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            ap_phi_mux_acc_9_m_cr_V_7_phi_fu_337_p4 <= acc_9_m_cr_V_8_fu_799_p3;
        else 
            ap_phi_mux_acc_9_m_cr_V_7_phi_fu_337_p4 <= acc_9_m_cr_V_7_reg_334;
        end if; 
    end process;


    ap_phi_mux_acc_9_m_cr_V_9_phi_fu_348_p4_assign_proc : process(ap_block_pp1_stage0, acc_9_m_cr_V_9_reg_345, ap_enable_reg_pp1_iter3, ap_reg_pp1_iter2_exitcond_reg_1053, acc_9_m_cr_V_10_fu_823_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_reg_pp1_iter2_exitcond_reg_1053 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            ap_phi_mux_acc_9_m_cr_V_9_phi_fu_348_p4 <= acc_9_m_cr_V_10_fu_823_p3;
        else 
            ap_phi_mux_acc_9_m_cr_V_9_phi_fu_348_p4 <= acc_9_m_cr_V_9_reg_345;
        end if; 
    end process;


    ap_phi_mux_ii_phi_fu_305_p4_assign_proc : process(exitcond5_reg_935, ii_reg_301, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, ii_2_reg_939, ap_block_pp0_stage0)
    begin
        if (((exitcond5_reg_935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_ii_phi_fu_305_p4 <= ii_2_reg_939;
        else 
            ap_phi_mux_ii_phi_fu_305_p4 <= ii_reg_301;
        end if; 
    end process;


    ap_phi_mux_ires_phi_fu_426_p4_assign_proc : process(ap_block_pp1_stage0, exitcond_reg_1053, ires_reg_422, ap_CS_fsm_pp1_stage0, ires_1_reg_1057, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (exitcond_reg_1053 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_ires_phi_fu_426_p4 <= ires_1_reg_1057;
        else 
            ap_phi_mux_ires_phi_fu_426_p4 <= ires_reg_422;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    data_in_V_V_blk_n_assign_proc : process(data_in_V_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond5_reg_935)
    begin
        if (((exitcond5_reg_935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            data_in_V_V_blk_n <= data_in_V_V_empty_n;
        else 
            data_in_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_in_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond5_reg_935, ap_block_pp0_stage1_11001)
    begin
        if (((exitcond5_reg_935 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            data_in_V_V_read <= ap_const_logic_1;
        else 
            data_in_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_out_V_V_blk_n_assign_proc : process(data_out_V_V_full_n, ap_enable_reg_pp1_iter5, ap_block_pp1_stage0, ap_reg_pp1_iter4_exitcond_reg_1053)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_reg_pp1_iter4_exitcond_reg_1053 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1))) then 
            data_out_V_V_blk_n <= data_out_V_V_full_n;
        else 
            data_out_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    data_out_V_V_din <= grp_get_result_fu_434_ap_return;

    data_out_V_V_write_assign_proc : process(ap_enable_reg_pp1_iter5, ap_reg_pp1_iter4_exitcond_reg_1053, ap_block_pp1_stage0_11001)
    begin
        if (((ap_reg_pp1_iter4_exitcond_reg_1053 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            data_out_V_V_write <= ap_const_logic_1;
        else 
            data_out_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    exitcond5_fu_492_p2 <= "1" when (ap_phi_mux_ii_phi_fu_305_p4 = ap_const_lv7_40) else "0";
    exitcond_fu_603_p2 <= "1" when (ap_phi_mux_ires_phi_fu_426_p4 = ap_const_lv4_A) else "0";

    grp_get_result_fu_434_ap_ce_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            grp_get_result_fu_434_ap_ce <= ap_const_logic_1;
        else 
            grp_get_result_fu_434_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_multiply_accumulate_fu_440_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, exitcond5_reg_935, ap_block_pp1_stage0, acc_5_m_cr_V_reg_229, ap_enable_reg_pp0_iter1, ap_reg_pp0_iter1_exitcond5_reg_935, ap_CS_fsm_pp0_stage0, ap_reg_pp1_iter1_exitcond_reg_1053, ap_enable_reg_pp1_iter2, ap_block_pp0_stage0, ap_phi_mux_acc_0_m_cr_V_phi_fu_293_p4, tmp_fu_620_p12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_reg_pp1_iter1_exitcond_reg_1053 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            grp_multiply_accumulate_fu_440_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read <= tmp_fu_620_p12;
        elsif (((ap_reg_pp0_iter1_exitcond5_reg_935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_multiply_accumulate_fu_440_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read <= acc_5_m_cr_V_reg_229;
        elsif (((exitcond5_reg_935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_multiply_accumulate_fu_440_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read <= ap_phi_mux_acc_0_m_cr_V_phi_fu_293_p4;
        else 
            grp_multiply_accumulate_fu_440_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_multiply_accumulate_fu_440_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            grp_multiply_accumulate_fu_440_ap_ce <= ap_const_logic_1;
        else 
            grp_multiply_accumulate_fu_440_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_multiply_accumulate_fu_440_in1_V_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, exitcond5_reg_935, ap_block_pp1_stage0, ap_enable_reg_pp0_iter1, ap_reg_pp0_iter1_exitcond5_reg_935, ap_CS_fsm_pp0_stage0, tmp_V_1_reg_949, ap_reg_pp1_iter1_exitcond_reg_1053, L2_BIAS_V_load_reg_1067, ap_enable_reg_pp1_iter2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_reg_pp1_iter1_exitcond_reg_1053 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            grp_multiply_accumulate_fu_440_in1_V <= L2_BIAS_V_load_reg_1067;
        elsif ((((exitcond5_reg_935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_reg_pp0_iter1_exitcond5_reg_935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            grp_multiply_accumulate_fu_440_in1_V <= tmp_V_1_reg_949;
        else 
            grp_multiply_accumulate_fu_440_in1_V <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_multiply_accumulate_fu_440_in2_V_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, exitcond5_reg_935, ap_block_pp1_stage0, ap_enable_reg_pp0_iter1, ap_reg_pp0_iter1_exitcond5_reg_935, ap_CS_fsm_pp0_stage0, tmp_14_reg_958, tmp_8_reg_983, ap_reg_pp1_iter1_exitcond_reg_1053, ap_enable_reg_pp1_iter2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_reg_pp1_iter1_exitcond_reg_1053 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            grp_multiply_accumulate_fu_440_in2_V <= ap_const_lv16_3C00;
        elsif (((ap_reg_pp0_iter1_exitcond5_reg_935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_multiply_accumulate_fu_440_in2_V <= tmp_8_reg_983;
        elsif (((exitcond5_reg_935 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_multiply_accumulate_fu_440_in2_V <= tmp_14_reg_958;
        else 
            grp_multiply_accumulate_fu_440_in2_V <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_multiply_accumulate_fu_448_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read_assign_proc : process(acc_6_m_cr_V_reg_217, ap_enable_reg_pp0_iter1, ap_phi_mux_acc_1_m_cr_V_phi_fu_281_p4, ap_condition_761, ap_condition_765)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if ((ap_const_boolean_1 = ap_condition_765)) then 
                grp_multiply_accumulate_fu_448_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read <= acc_6_m_cr_V_reg_217;
            elsif ((ap_const_boolean_1 = ap_condition_761)) then 
                grp_multiply_accumulate_fu_448_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read <= ap_phi_mux_acc_1_m_cr_V_phi_fu_281_p4;
            else 
                grp_multiply_accumulate_fu_448_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_multiply_accumulate_fu_448_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_multiply_accumulate_fu_448_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_multiply_accumulate_fu_448_ap_ce <= ap_const_logic_1;
        else 
            grp_multiply_accumulate_fu_448_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_multiply_accumulate_fu_448_in2_V_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_4_reg_963, tmp_9_reg_988, ap_condition_761, ap_condition_765)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if ((ap_const_boolean_1 = ap_condition_765)) then 
                grp_multiply_accumulate_fu_448_in2_V <= tmp_9_reg_988;
            elsif ((ap_const_boolean_1 = ap_condition_761)) then 
                grp_multiply_accumulate_fu_448_in2_V <= tmp_4_reg_963;
            else 
                grp_multiply_accumulate_fu_448_in2_V <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_multiply_accumulate_fu_448_in2_V <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_multiply_accumulate_fu_456_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read_assign_proc : process(acc_7_m_cr_V_reg_205, ap_enable_reg_pp0_iter1, ap_phi_mux_acc_2_m_cr_V_phi_fu_269_p4, ap_condition_761, ap_condition_765)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if ((ap_const_boolean_1 = ap_condition_765)) then 
                grp_multiply_accumulate_fu_456_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read <= acc_7_m_cr_V_reg_205;
            elsif ((ap_const_boolean_1 = ap_condition_761)) then 
                grp_multiply_accumulate_fu_456_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read <= ap_phi_mux_acc_2_m_cr_V_phi_fu_269_p4;
            else 
                grp_multiply_accumulate_fu_456_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_multiply_accumulate_fu_456_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_multiply_accumulate_fu_456_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_multiply_accumulate_fu_456_ap_ce <= ap_const_logic_1;
        else 
            grp_multiply_accumulate_fu_456_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_multiply_accumulate_fu_456_in2_V_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_5_reg_968, tmp_3_reg_993, ap_condition_761, ap_condition_765)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if ((ap_const_boolean_1 = ap_condition_765)) then 
                grp_multiply_accumulate_fu_456_in2_V <= tmp_3_reg_993;
            elsif ((ap_const_boolean_1 = ap_condition_761)) then 
                grp_multiply_accumulate_fu_456_in2_V <= tmp_5_reg_968;
            else 
                grp_multiply_accumulate_fu_456_in2_V <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_multiply_accumulate_fu_456_in2_V <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_multiply_accumulate_fu_464_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read_assign_proc : process(acc_8_m_cr_V_reg_193, ap_enable_reg_pp0_iter1, ap_phi_mux_acc_3_m_cr_V_phi_fu_257_p4, ap_condition_761, ap_condition_765)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if ((ap_const_boolean_1 = ap_condition_765)) then 
                grp_multiply_accumulate_fu_464_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read <= acc_8_m_cr_V_reg_193;
            elsif ((ap_const_boolean_1 = ap_condition_761)) then 
                grp_multiply_accumulate_fu_464_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read <= ap_phi_mux_acc_3_m_cr_V_phi_fu_257_p4;
            else 
                grp_multiply_accumulate_fu_464_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_multiply_accumulate_fu_464_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_multiply_accumulate_fu_464_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_multiply_accumulate_fu_464_ap_ce <= ap_const_logic_1;
        else 
            grp_multiply_accumulate_fu_464_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_multiply_accumulate_fu_464_in2_V_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_6_reg_973, tmp_10_reg_998, ap_condition_761, ap_condition_765)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if ((ap_const_boolean_1 = ap_condition_765)) then 
                grp_multiply_accumulate_fu_464_in2_V <= tmp_10_reg_998;
            elsif ((ap_const_boolean_1 = ap_condition_761)) then 
                grp_multiply_accumulate_fu_464_in2_V <= tmp_6_reg_973;
            else 
                grp_multiply_accumulate_fu_464_in2_V <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_multiply_accumulate_fu_464_in2_V <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_multiply_accumulate_fu_472_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read_assign_proc : process(acc_9_m_cr_V_reg_181, ap_enable_reg_pp0_iter1, ap_phi_mux_acc_4_m_cr_V_phi_fu_245_p4, ap_condition_761, ap_condition_765)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if ((ap_const_boolean_1 = ap_condition_765)) then 
                grp_multiply_accumulate_fu_472_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read <= acc_9_m_cr_V_reg_181;
            elsif ((ap_const_boolean_1 = ap_condition_761)) then 
                grp_multiply_accumulate_fu_472_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read <= ap_phi_mux_acc_4_m_cr_V_phi_fu_245_p4;
            else 
                grp_multiply_accumulate_fu_472_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_multiply_accumulate_fu_472_CompleteRegister_ap_uint_16_ap_uint_16_m_cr_V_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_multiply_accumulate_fu_472_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_multiply_accumulate_fu_472_ap_ce <= ap_const_logic_1;
        else 
            grp_multiply_accumulate_fu_472_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_multiply_accumulate_fu_472_in2_V_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_7_reg_978, tmp_11_reg_1003, ap_condition_761, ap_condition_765)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if ((ap_const_boolean_1 = ap_condition_765)) then 
                grp_multiply_accumulate_fu_472_in2_V <= tmp_11_reg_1003;
            elsif ((ap_const_boolean_1 = ap_condition_761)) then 
                grp_multiply_accumulate_fu_472_in2_V <= tmp_7_reg_978;
            else 
                grp_multiply_accumulate_fu_472_in2_V <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_multiply_accumulate_fu_472_in2_V <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    ii_2_fu_498_p2 <= std_logic_vector(unsigned(ap_phi_mux_ii_phi_fu_305_p4) + unsigned(ap_const_lv7_1));

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ires_1_fu_609_p2 <= std_logic_vector(unsigned(ap_phi_mux_ires_phi_fu_426_p4) + unsigned(ap_const_lv4_1));
    newSel10_fu_871_p3 <= 
        acc_9_m_cr_V_4_reg_378 when (sel_tmp3_fu_683_p2(0) = '1') else 
        grp_multiply_accumulate_fu_440_ap_return;
    newSel11_fu_879_p3 <= 
        acc_9_m_cr_V_4_reg_378 when (or_cond_fu_701_p2(0) = '1') else 
        newSel10_fu_871_p3;
    newSel12_fu_895_p3 <= 
        grp_multiply_accumulate_fu_440_ap_return when (sel_tmp3_fu_683_p2(0) = '1') else 
        acc_9_m_cr_V_11_reg_389;
    newSel1_fu_831_p3 <= 
        acc_9_m_cr_V_18_reg_356 when (sel_tmp8_fu_671_p2(0) = '1') else 
        grp_multiply_accumulate_fu_440_ap_return;
    newSel2_fu_759_p3 <= 
        grp_multiply_accumulate_fu_440_ap_return when (sel_tmp_fu_647_p2(0) = '1') else 
        acc_8_m_cr_V_1_reg_323;
    newSel3_fu_839_p3 <= 
        newSel1_fu_831_p3 when (or_cond2_fu_713_p2(0) = '1') else 
        acc_9_m_cr_V_18_reg_356;
    newSel4_fu_775_p3 <= 
        acc_9_m_cr_V_7_reg_334 when (sel_tmp4_fu_659_p2(0) = '1') else 
        grp_multiply_accumulate_fu_440_ap_return;
    newSel5_fu_783_p3 <= 
        acc_9_m_cr_V_7_reg_334 when (or_cond2_fu_713_p2(0) = '1') else 
        newSel4_fu_775_p3;
    newSel6_fu_791_p3 <= 
        acc_9_m_cr_V_7_reg_334 when (or_cond4_fu_733_p2(0) = '1') else 
        newSel5_fu_783_p3;
    newSel7_fu_855_p3 <= 
        grp_multiply_accumulate_fu_440_ap_return when (sel_tmp8_fu_671_p2(0) = '1') else 
        acc_9_m_cr_V_3_reg_367;
    newSel8_fu_807_p3 <= 
        grp_multiply_accumulate_fu_440_ap_return when (sel_tmp4_fu_659_p2(0) = '1') else 
        acc_9_m_cr_V_9_reg_345;
    newSel9_fu_815_p3 <= 
        acc_9_m_cr_V_9_reg_345 when (or_cond2_fu_713_p2(0) = '1') else 
        newSel8_fu_807_p3;
    newSel_fu_725_p3 <= 
        acc_9_m_cr_V_1_reg_312 when (sel_tmp_fu_647_p2(0) = '1') else 
        grp_multiply_accumulate_fu_440_ap_return;
    or_cond1_fu_707_p2 <= (sel_tmp3_fu_683_p2 or sel_tmp1_fu_677_p2);
    or_cond2_fu_713_p2 <= (sel_tmp8_fu_671_p2 or sel_tmp6_fu_665_p2);
    or_cond3_fu_719_p2 <= (sel_tmp4_fu_659_p2 or sel_tmp2_fu_653_p2);
    or_cond4_fu_733_p2 <= (or_cond_fu_701_p2 or or_cond1_fu_707_p2);
    or_cond5_fu_739_p2 <= (or_cond3_fu_719_p2 or or_cond2_fu_713_p2);
    or_cond6_fu_745_p2 <= (or_cond5_fu_739_p2 or or_cond4_fu_733_p2);
    or_cond_fu_701_p2 <= (sel_tmp7_fu_695_p2 or sel_tmp5_fu_689_p2);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    sel_tmp1_fu_677_p2 <= "1" when (ap_reg_pp1_iter2_ires_reg_422 = ap_const_lv4_3) else "0";
    sel_tmp2_fu_653_p2 <= "1" when (ap_reg_pp1_iter2_ires_reg_422 = ap_const_lv4_7) else "0";
    sel_tmp3_fu_683_p2 <= "1" when (ap_reg_pp1_iter2_ires_reg_422 = ap_const_lv4_2) else "0";
    sel_tmp4_fu_659_p2 <= "1" when (ap_reg_pp1_iter2_ires_reg_422 = ap_const_lv4_6) else "0";
    sel_tmp5_fu_689_p2 <= "1" when (ap_reg_pp1_iter2_ires_reg_422 = ap_const_lv4_1) else "0";
    sel_tmp6_fu_665_p2 <= "1" when (ap_reg_pp1_iter2_ires_reg_422 = ap_const_lv4_5) else "0";
    sel_tmp7_fu_695_p2 <= "1" when (ap_reg_pp1_iter2_ires_reg_422 = ap_const_lv4_0) else "0";
    sel_tmp8_fu_671_p2 <= "1" when (ap_reg_pp1_iter2_ires_reg_422 = ap_const_lv4_4) else "0";
    sel_tmp_fu_647_p2 <= "1" when (ap_reg_pp1_iter2_ires_reg_422 = ap_const_lv4_8) else "0";
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_14_fu_509_p1 <= L2_WEIGHTS_V_q0(16 - 1 downto 0);
    tmp_1_fu_504_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_ii_phi_fu_305_p4),64));
    tmp_2_fu_615_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_ires_phi_fu_426_p4),64));
end behav;
