// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _neural_network_HH_
#define _neural_network_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "neural_network_muibs.h"
#include "neural_network_majbC.h"
#include "neural_network_webkb.h"
#include "neural_network_wecud.h"
#include "neural_network_infYi.h"
#include "neural_network_l1g8j.h"
#include "neural_network_l2hbi.h"
#include "neural_network_ctrl_s_axi.h"
#include "neural_network_mem_V_m_axi.h"
#include "neural_network_out_V_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_MEM_V_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_MEM_V_ID_WIDTH = 1,
         unsigned int C_M_AXI_MEM_V_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_MEM_V_DATA_WIDTH = 32,
         unsigned int C_M_AXI_MEM_V_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_MEM_V_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_MEM_V_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_MEM_V_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUT_V_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_OUT_V_ID_WIDTH = 1,
         unsigned int C_M_AXI_OUT_V_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUT_V_DATA_WIDTH = 32,
         unsigned int C_M_AXI_OUT_V_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUT_V_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUT_V_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUT_V_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_CTRL_ADDR_WIDTH = 6,
         unsigned int C_S_AXI_CTRL_DATA_WIDTH = 32>
struct neural_network : public sc_module {
    // Port declarations 110
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_mem_V_AWVALID;
    sc_in< sc_logic > m_axi_mem_V_AWREADY;
    sc_out< sc_uint<C_M_AXI_MEM_V_ADDR_WIDTH> > m_axi_mem_V_AWADDR;
    sc_out< sc_uint<C_M_AXI_MEM_V_ID_WIDTH> > m_axi_mem_V_AWID;
    sc_out< sc_lv<8> > m_axi_mem_V_AWLEN;
    sc_out< sc_lv<3> > m_axi_mem_V_AWSIZE;
    sc_out< sc_lv<2> > m_axi_mem_V_AWBURST;
    sc_out< sc_lv<2> > m_axi_mem_V_AWLOCK;
    sc_out< sc_lv<4> > m_axi_mem_V_AWCACHE;
    sc_out< sc_lv<3> > m_axi_mem_V_AWPROT;
    sc_out< sc_lv<4> > m_axi_mem_V_AWQOS;
    sc_out< sc_lv<4> > m_axi_mem_V_AWREGION;
    sc_out< sc_uint<C_M_AXI_MEM_V_AWUSER_WIDTH> > m_axi_mem_V_AWUSER;
    sc_out< sc_logic > m_axi_mem_V_WVALID;
    sc_in< sc_logic > m_axi_mem_V_WREADY;
    sc_out< sc_uint<C_M_AXI_MEM_V_DATA_WIDTH> > m_axi_mem_V_WDATA;
    sc_out< sc_uint<C_M_AXI_MEM_V_DATA_WIDTH/8> > m_axi_mem_V_WSTRB;
    sc_out< sc_logic > m_axi_mem_V_WLAST;
    sc_out< sc_uint<C_M_AXI_MEM_V_ID_WIDTH> > m_axi_mem_V_WID;
    sc_out< sc_uint<C_M_AXI_MEM_V_WUSER_WIDTH> > m_axi_mem_V_WUSER;
    sc_out< sc_logic > m_axi_mem_V_ARVALID;
    sc_in< sc_logic > m_axi_mem_V_ARREADY;
    sc_out< sc_uint<C_M_AXI_MEM_V_ADDR_WIDTH> > m_axi_mem_V_ARADDR;
    sc_out< sc_uint<C_M_AXI_MEM_V_ID_WIDTH> > m_axi_mem_V_ARID;
    sc_out< sc_lv<8> > m_axi_mem_V_ARLEN;
    sc_out< sc_lv<3> > m_axi_mem_V_ARSIZE;
    sc_out< sc_lv<2> > m_axi_mem_V_ARBURST;
    sc_out< sc_lv<2> > m_axi_mem_V_ARLOCK;
    sc_out< sc_lv<4> > m_axi_mem_V_ARCACHE;
    sc_out< sc_lv<3> > m_axi_mem_V_ARPROT;
    sc_out< sc_lv<4> > m_axi_mem_V_ARQOS;
    sc_out< sc_lv<4> > m_axi_mem_V_ARREGION;
    sc_out< sc_uint<C_M_AXI_MEM_V_ARUSER_WIDTH> > m_axi_mem_V_ARUSER;
    sc_in< sc_logic > m_axi_mem_V_RVALID;
    sc_out< sc_logic > m_axi_mem_V_RREADY;
    sc_in< sc_uint<C_M_AXI_MEM_V_DATA_WIDTH> > m_axi_mem_V_RDATA;
    sc_in< sc_logic > m_axi_mem_V_RLAST;
    sc_in< sc_uint<C_M_AXI_MEM_V_ID_WIDTH> > m_axi_mem_V_RID;
    sc_in< sc_uint<C_M_AXI_MEM_V_RUSER_WIDTH> > m_axi_mem_V_RUSER;
    sc_in< sc_lv<2> > m_axi_mem_V_RRESP;
    sc_in< sc_logic > m_axi_mem_V_BVALID;
    sc_out< sc_logic > m_axi_mem_V_BREADY;
    sc_in< sc_lv<2> > m_axi_mem_V_BRESP;
    sc_in< sc_uint<C_M_AXI_MEM_V_ID_WIDTH> > m_axi_mem_V_BID;
    sc_in< sc_uint<C_M_AXI_MEM_V_BUSER_WIDTH> > m_axi_mem_V_BUSER;
    sc_out< sc_logic > m_axi_out_V_AWVALID;
    sc_in< sc_logic > m_axi_out_V_AWREADY;
    sc_out< sc_uint<C_M_AXI_OUT_V_ADDR_WIDTH> > m_axi_out_V_AWADDR;
    sc_out< sc_uint<C_M_AXI_OUT_V_ID_WIDTH> > m_axi_out_V_AWID;
    sc_out< sc_lv<8> > m_axi_out_V_AWLEN;
    sc_out< sc_lv<3> > m_axi_out_V_AWSIZE;
    sc_out< sc_lv<2> > m_axi_out_V_AWBURST;
    sc_out< sc_lv<2> > m_axi_out_V_AWLOCK;
    sc_out< sc_lv<4> > m_axi_out_V_AWCACHE;
    sc_out< sc_lv<3> > m_axi_out_V_AWPROT;
    sc_out< sc_lv<4> > m_axi_out_V_AWQOS;
    sc_out< sc_lv<4> > m_axi_out_V_AWREGION;
    sc_out< sc_uint<C_M_AXI_OUT_V_AWUSER_WIDTH> > m_axi_out_V_AWUSER;
    sc_out< sc_logic > m_axi_out_V_WVALID;
    sc_in< sc_logic > m_axi_out_V_WREADY;
    sc_out< sc_uint<C_M_AXI_OUT_V_DATA_WIDTH> > m_axi_out_V_WDATA;
    sc_out< sc_uint<C_M_AXI_OUT_V_DATA_WIDTH/8> > m_axi_out_V_WSTRB;
    sc_out< sc_logic > m_axi_out_V_WLAST;
    sc_out< sc_uint<C_M_AXI_OUT_V_ID_WIDTH> > m_axi_out_V_WID;
    sc_out< sc_uint<C_M_AXI_OUT_V_WUSER_WIDTH> > m_axi_out_V_WUSER;
    sc_out< sc_logic > m_axi_out_V_ARVALID;
    sc_in< sc_logic > m_axi_out_V_ARREADY;
    sc_out< sc_uint<C_M_AXI_OUT_V_ADDR_WIDTH> > m_axi_out_V_ARADDR;
    sc_out< sc_uint<C_M_AXI_OUT_V_ID_WIDTH> > m_axi_out_V_ARID;
    sc_out< sc_lv<8> > m_axi_out_V_ARLEN;
    sc_out< sc_lv<3> > m_axi_out_V_ARSIZE;
    sc_out< sc_lv<2> > m_axi_out_V_ARBURST;
    sc_out< sc_lv<2> > m_axi_out_V_ARLOCK;
    sc_out< sc_lv<4> > m_axi_out_V_ARCACHE;
    sc_out< sc_lv<3> > m_axi_out_V_ARPROT;
    sc_out< sc_lv<4> > m_axi_out_V_ARQOS;
    sc_out< sc_lv<4> > m_axi_out_V_ARREGION;
    sc_out< sc_uint<C_M_AXI_OUT_V_ARUSER_WIDTH> > m_axi_out_V_ARUSER;
    sc_in< sc_logic > m_axi_out_V_RVALID;
    sc_out< sc_logic > m_axi_out_V_RREADY;
    sc_in< sc_uint<C_M_AXI_OUT_V_DATA_WIDTH> > m_axi_out_V_RDATA;
    sc_in< sc_logic > m_axi_out_V_RLAST;
    sc_in< sc_uint<C_M_AXI_OUT_V_ID_WIDTH> > m_axi_out_V_RID;
    sc_in< sc_uint<C_M_AXI_OUT_V_RUSER_WIDTH> > m_axi_out_V_RUSER;
    sc_in< sc_lv<2> > m_axi_out_V_RRESP;
    sc_in< sc_logic > m_axi_out_V_BVALID;
    sc_out< sc_logic > m_axi_out_V_BREADY;
    sc_in< sc_lv<2> > m_axi_out_V_BRESP;
    sc_in< sc_uint<C_M_AXI_OUT_V_ID_WIDTH> > m_axi_out_V_BID;
    sc_in< sc_uint<C_M_AXI_OUT_V_BUSER_WIDTH> > m_axi_out_V_BUSER;
    sc_in< sc_logic > s_axi_ctrl_AWVALID;
    sc_out< sc_logic > s_axi_ctrl_AWREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_ADDR_WIDTH> > s_axi_ctrl_AWADDR;
    sc_in< sc_logic > s_axi_ctrl_WVALID;
    sc_out< sc_logic > s_axi_ctrl_WREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_DATA_WIDTH> > s_axi_ctrl_WDATA;
    sc_in< sc_uint<C_S_AXI_CTRL_DATA_WIDTH/8> > s_axi_ctrl_WSTRB;
    sc_in< sc_logic > s_axi_ctrl_ARVALID;
    sc_out< sc_logic > s_axi_ctrl_ARREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_ADDR_WIDTH> > s_axi_ctrl_ARADDR;
    sc_out< sc_logic > s_axi_ctrl_RVALID;
    sc_in< sc_logic > s_axi_ctrl_RREADY;
    sc_out< sc_uint<C_S_AXI_CTRL_DATA_WIDTH> > s_axi_ctrl_RDATA;
    sc_out< sc_lv<2> > s_axi_ctrl_RRESP;
    sc_out< sc_logic > s_axi_ctrl_BVALID;
    sc_in< sc_logic > s_axi_ctrl_BREADY;
    sc_out< sc_lv<2> > s_axi_ctrl_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const5;
    sc_signal< sc_lv<32> > ap_var_for_const6;
    sc_signal< sc_lv<1> > ap_var_for_const1;
    sc_signal< sc_lv<4> > ap_var_for_const4;
    sc_signal< sc_lv<3> > ap_var_for_const2;
    sc_signal< sc_lv<2> > ap_var_for_const3;
    sc_signal< sc_lv<32> > ap_var_for_const8;
    sc_signal< sc_lv<4> > ap_var_for_const9;
    sc_signal< sc_lv<8> > ap_var_for_const7;


    // Module declarations
    neural_network(sc_module_name name);
    SC_HAS_PROCESS(neural_network);

    ~neural_network();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    neural_network_ctrl_s_axi<C_S_AXI_CTRL_ADDR_WIDTH,C_S_AXI_CTRL_DATA_WIDTH>* neural_network_ctrl_s_axi_U;
    neural_network_mem_V_m_axi<8,32,5,16,16,16,16,C_M_AXI_MEM_V_ID_WIDTH,C_M_AXI_MEM_V_ADDR_WIDTH,C_M_AXI_MEM_V_DATA_WIDTH,C_M_AXI_MEM_V_AWUSER_WIDTH,C_M_AXI_MEM_V_ARUSER_WIDTH,C_M_AXI_MEM_V_WUSER_WIDTH,C_M_AXI_MEM_V_RUSER_WIDTH,C_M_AXI_MEM_V_BUSER_WIDTH,C_M_AXI_MEM_V_TARGET_ADDR,C_M_AXI_MEM_V_USER_VALUE,C_M_AXI_MEM_V_PROT_VALUE,C_M_AXI_MEM_V_CACHE_VALUE>* neural_network_mem_V_m_axi_U;
    neural_network_out_V_m_axi<32,32,5,16,16,16,16,C_M_AXI_OUT_V_ID_WIDTH,C_M_AXI_OUT_V_ADDR_WIDTH,C_M_AXI_OUT_V_DATA_WIDTH,C_M_AXI_OUT_V_AWUSER_WIDTH,C_M_AXI_OUT_V_ARUSER_WIDTH,C_M_AXI_OUT_V_WUSER_WIDTH,C_M_AXI_OUT_V_RUSER_WIDTH,C_M_AXI_OUT_V_BUSER_WIDTH,C_M_AXI_OUT_V_TARGET_ADDR,C_M_AXI_OUT_V_USER_VALUE,C_M_AXI_OUT_V_PROT_VALUE,C_M_AXI_OUT_V_CACHE_VALUE>* neural_network_out_V_m_axi_U;
    neural_network_webkb* weights_1_U;
    neural_network_wecud* weights_2_U;
    neural_network_webkb* bias_1_U;
    neural_network_wecud* bias_2_U;
    neural_network_infYi* inputs_U;
    neural_network_l1g8j* l1_result_V_U;
    neural_network_l2hbi* l2_result_V_U;
    neural_network_muibs<1,7,32,8,32>* neural_network_muibs_U1;
    neural_network_majbC<1,4,8,8,32,32>* neural_network_majbC_U2;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<66> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > w1_offset;
    sc_signal< sc_lv<32> > w2_offset;
    sc_signal< sc_lv<32> > input_offset;
    sc_signal< sc_lv<32> > b1_offset;
    sc_signal< sc_lv<32> > b2_offset;
    sc_signal< sc_lv<32> > result_offset;
    sc_signal< sc_logic > mem_V_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > mem_V_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond9_reg_1002;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<1> > exitcond7_reg_1022;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_logic > ap_CS_fsm_pp2_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter1;
    sc_signal< bool > ap_block_pp2_stage0;
    sc_signal< sc_lv<1> > exitcond8_reg_1042;
    sc_signal< sc_logic > ap_CS_fsm_state41;
    sc_signal< sc_logic > ap_CS_fsm_pp5_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp5_iter1;
    sc_signal< bool > ap_block_pp5_stage0;
    sc_signal< sc_lv<1> > exitcond10_reg_1119;
    sc_signal< sc_logic > ap_CS_fsm_state70;
    sc_signal< sc_logic > ap_CS_fsm_pp8_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp8_iter1;
    sc_signal< bool > ap_block_pp8_stage0;
    sc_signal< sc_lv<1> > exitcond12_reg_1227;
    sc_signal< sc_logic > out_V_blk_n_AW;
    sc_signal< sc_logic > ap_CS_fsm_state68;
    sc_signal< sc_lv<1> > exitcond6_fu_821_p2;
    sc_signal< sc_logic > out_V_blk_n_W;
    sc_signal< sc_logic > ap_enable_reg_pp10_iter2;
    sc_signal< bool > ap_block_pp10_stage0;
    sc_signal< sc_lv<1> > exitcond11_reg_1286;
    sc_signal< sc_lv<1> > ap_reg_pp10_iter1_exitcond11_reg_1286;
    sc_signal< sc_logic > out_V_blk_n_B;
    sc_signal< sc_logic > ap_CS_fsm_state102;
    sc_signal< sc_logic > mem_V_AWREADY;
    sc_signal< sc_logic > mem_V_WREADY;
    sc_signal< sc_logic > mem_V_ARVALID;
    sc_signal< sc_logic > mem_V_ARREADY;
    sc_signal< sc_lv<32> > mem_V_ARADDR;
    sc_signal< sc_lv<32> > mem_V_ARLEN;
    sc_signal< sc_logic > mem_V_RVALID;
    sc_signal< sc_logic > mem_V_RREADY;
    sc_signal< sc_lv<8> > mem_V_RDATA;
    sc_signal< sc_logic > mem_V_RLAST;
    sc_signal< sc_lv<1> > mem_V_RID;
    sc_signal< sc_lv<1> > mem_V_RUSER;
    sc_signal< sc_lv<2> > mem_V_RRESP;
    sc_signal< sc_logic > mem_V_BVALID;
    sc_signal< sc_lv<2> > mem_V_BRESP;
    sc_signal< sc_lv<1> > mem_V_BID;
    sc_signal< sc_lv<1> > mem_V_BUSER;
    sc_signal< sc_logic > out_V_AWVALID;
    sc_signal< sc_logic > out_V_AWREADY;
    sc_signal< sc_lv<32> > out_V_AWADDR;
    sc_signal< sc_logic > out_V_WVALID;
    sc_signal< sc_logic > out_V_WREADY;
    sc_signal< sc_logic > out_V_ARREADY;
    sc_signal< sc_logic > out_V_RVALID;
    sc_signal< sc_lv<32> > out_V_RDATA;
    sc_signal< sc_logic > out_V_RLAST;
    sc_signal< sc_lv<1> > out_V_RID;
    sc_signal< sc_lv<1> > out_V_RUSER;
    sc_signal< sc_lv<2> > out_V_RRESP;
    sc_signal< sc_logic > out_V_BVALID;
    sc_signal< sc_logic > out_V_BREADY;
    sc_signal< sc_lv<2> > out_V_BRESP;
    sc_signal< sc_lv<1> > out_V_BID;
    sc_signal< sc_lv<1> > out_V_BUSER;
    sc_signal< sc_lv<10> > indvar_reg_440;
    sc_signal< sc_lv<10> > ap_reg_pp0_iter1_indvar_reg_440;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<10> > indvar1_reg_452;
    sc_signal< sc_lv<10> > ap_reg_pp1_iter1_indvar1_reg_452;
    sc_signal< bool > ap_block_state19_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state20_pp1_stage0_iter1;
    sc_signal< bool > ap_block_state21_pp1_stage0_iter2;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<4> > indvar2_reg_464;
    sc_signal< sc_lv<4> > ap_reg_pp2_iter1_indvar2_reg_464;
    sc_signal< bool > ap_block_state29_pp2_stage0_iter0;
    sc_signal< bool > ap_block_state30_pp2_stage0_iter1;
    sc_signal< bool > ap_block_state31_pp2_stage0_iter2;
    sc_signal< bool > ap_block_pp2_stage0_11001;
    sc_signal< sc_lv<10> > i_reg_476;
    sc_signal< sc_lv<4> > i7_reg_487;
    sc_signal< sc_lv<10> > indvar3_reg_510;
    sc_signal< sc_lv<10> > ap_reg_pp5_iter1_indvar3_reg_510;
    sc_signal< bool > ap_block_state49_pp5_stage0_iter0;
    sc_signal< bool > ap_block_state50_pp5_stage0_iter1;
    sc_signal< bool > ap_block_state51_pp5_stage0_iter2;
    sc_signal< bool > ap_block_pp5_stage0_11001;
    sc_signal< sc_lv<10> > j_reg_522;
    sc_signal< sc_lv<10> > i9_reg_533;
    sc_signal< sc_lv<4> > indvar5_reg_556;
    sc_signal< sc_lv<4> > ap_reg_pp8_iter1_indvar5_reg_556;
    sc_signal< bool > ap_block_state77_pp8_stage0_iter0;
    sc_signal< bool > ap_block_state78_pp8_stage0_iter1;
    sc_signal< bool > ap_block_state79_pp8_stage0_iter2;
    sc_signal< bool > ap_block_pp8_stage0_11001;
    sc_signal< sc_lv<4> > j2_reg_568;
    sc_signal< sc_lv<4> > indvar4_reg_579;
    sc_signal< sc_lv<32> > l1_result_V_q0;
    sc_signal< sc_lv<32> > reg_590;
    sc_signal< sc_logic > ap_enable_reg_pp6_iter4;
    sc_signal< bool > ap_block_state55_pp6_stage0_iter0;
    sc_signal< bool > ap_block_state56_pp6_stage0_iter1;
    sc_signal< bool > ap_block_state57_pp6_stage0_iter2;
    sc_signal< bool > ap_block_state58_pp6_stage0_iter3;
    sc_signal< bool > ap_block_state59_pp6_stage0_iter4;
    sc_signal< bool > ap_block_state60_pp6_stage0_iter5;
    sc_signal< bool > ap_block_state61_pp6_stage0_iter6;
    sc_signal< bool > ap_block_state62_pp6_stage0_iter7;
    sc_signal< bool > ap_block_pp6_stage0_11001;
    sc_signal< sc_lv<1> > exitcond5_reg_1143;
    sc_signal< sc_lv<1> > ap_reg_pp6_iter3_exitcond5_reg_1143;
    sc_signal< sc_lv<32> > l1_result_V_q1;
    sc_signal< sc_logic > ap_CS_fsm_state82;
    sc_signal< sc_lv<32> > l2_result_V_q0;
    sc_signal< sc_lv<32> > reg_595;
    sc_signal< sc_logic > ap_enable_reg_pp9_iter8;
    sc_signal< bool > ap_block_state83_pp9_stage0_iter0;
    sc_signal< bool > ap_block_state84_pp9_stage0_iter1;
    sc_signal< bool > ap_block_state85_pp9_stage0_iter2;
    sc_signal< bool > ap_block_state86_pp9_stage0_iter3;
    sc_signal< bool > ap_block_state87_pp9_stage0_iter4;
    sc_signal< bool > ap_block_state88_pp9_stage0_iter5;
    sc_signal< bool > ap_block_state89_pp9_stage0_iter6;
    sc_signal< bool > ap_block_state90_pp9_stage0_iter7;
    sc_signal< bool > ap_block_state91_pp9_stage0_iter8;
    sc_signal< bool > ap_block_state92_pp9_stage0_iter9;
    sc_signal< bool > ap_block_state93_pp9_stage0_iter10;
    sc_signal< bool > ap_block_pp9_stage0_11001;
    sc_signal< sc_lv<1> > exitcond_reg_1246;
    sc_signal< sc_lv<1> > ap_reg_pp9_iter7_exitcond_reg_1246;
    sc_signal< sc_lv<32> > l2_result_V_q1;
    sc_signal< sc_logic > ap_CS_fsm_pp10_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp10_iter1;
    sc_signal< bool > ap_block_state95_pp10_stage0_iter0;
    sc_signal< bool > ap_block_state96_pp10_stage0_iter1;
    sc_signal< bool > ap_block_state97_pp10_stage0_iter2;
    sc_signal< sc_logic > ap_sig_ioackin_out_V_WREADY;
    sc_signal< bool > ap_block_state97_io;
    sc_signal< bool > ap_block_pp10_stage0_11001;
    sc_signal< sc_lv<32> > result_offset_read_reg_971;
    sc_signal< sc_lv<32> > b2_offset_read_reg_976;
    sc_signal< sc_lv<32> > b1_offset_read_reg_981;
    sc_signal< sc_lv<32> > w2_offset_read_reg_986;
    sc_signal< sc_lv<32> > w1_offset_read_reg_991;
    sc_signal< sc_lv<32> > mem_V_addr_reg_996;
    sc_signal< sc_lv<1> > exitcond9_fu_611_p2;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_exitcond9_reg_1002;
    sc_signal< sc_lv<10> > indvar_next_fu_617_p2;
    sc_signal< sc_lv<10> > indvar_next_reg_1006;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<8> > mem_V_addr_read_reg_1011;
    sc_signal< sc_logic > ap_sig_ioackin_mem_V_ARREADY;
    sc_signal< sc_lv<1> > exitcond7_fu_638_p2;
    sc_signal< sc_lv<1> > ap_reg_pp1_iter1_exitcond7_reg_1022;
    sc_signal< sc_lv<10> > indvar_next1_fu_644_p2;
    sc_signal< sc_lv<10> > indvar_next1_reg_1026;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<8> > mem_V_addr_1_read_reg_1031;
    sc_signal< sc_lv<1> > exitcond8_fu_665_p2;
    sc_signal< sc_lv<1> > ap_reg_pp2_iter1_exitcond8_reg_1042;
    sc_signal< sc_lv<4> > indvar_next2_fu_671_p2;
    sc_signal< sc_lv<4> > indvar_next2_reg_1046;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter0;
    sc_signal< sc_lv<8> > mem_V_addr_2_read_reg_1051;
    sc_signal< sc_lv<1> > exitcond1_fu_682_p2;
    sc_signal< sc_lv<1> > exitcond1_reg_1056;
    sc_signal< sc_logic > ap_CS_fsm_pp3_stage0;
    sc_signal< bool > ap_block_state33_pp3_stage0_iter0;
    sc_signal< bool > ap_block_state34_pp3_stage0_iter1;
    sc_signal< bool > ap_block_state35_pp3_stage0_iter2;
    sc_signal< bool > ap_block_state36_pp3_stage0_iter3;
    sc_signal< bool > ap_block_pp3_stage0_11001;
    sc_signal< sc_lv<1> > ap_reg_pp3_iter1_exitcond1_reg_1056;
    sc_signal< sc_lv<1> > ap_reg_pp3_iter2_exitcond1_reg_1056;
    sc_signal< sc_lv<10> > i_1_fu_688_p2;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter0;
    sc_signal< sc_lv<64> > tmp_3_fu_694_p1;
    sc_signal< sc_lv<64> > tmp_3_reg_1065;
    sc_signal< sc_lv<64> > ap_reg_pp3_iter1_tmp_3_reg_1065;
    sc_signal< sc_lv<64> > ap_reg_pp3_iter2_tmp_3_reg_1065;
    sc_signal< sc_lv<8> > bias_1_q0;
    sc_signal< sc_lv<8> > bias_1_load_reg_1075;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter2;
    sc_signal< sc_lv<1> > exitcond2_fu_703_p2;
    sc_signal< sc_lv<1> > exitcond2_reg_1080;
    sc_signal< sc_logic > ap_CS_fsm_pp4_stage0;
    sc_signal< bool > ap_block_state38_pp4_stage0_iter0;
    sc_signal< bool > ap_block_state39_pp4_stage0_iter1;
    sc_signal< bool > ap_block_state40_pp4_stage0_iter2;
    sc_signal< bool > ap_block_pp4_stage0_11001;
    sc_signal< sc_lv<1> > ap_reg_pp4_iter1_exitcond2_reg_1080;
    sc_signal< sc_lv<4> > i_2_fu_709_p2;
    sc_signal< sc_logic > ap_enable_reg_pp4_iter0;
    sc_signal< sc_lv<64> > tmp_6_fu_715_p1;
    sc_signal< sc_lv<64> > tmp_6_reg_1089;
    sc_signal< sc_lv<64> > ap_reg_pp4_iter1_tmp_6_reg_1089;
    sc_signal< sc_lv<8> > bias_2_q0;
    sc_signal< sc_lv<8> > bias_2_load_reg_1099;
    sc_signal< sc_logic > ap_enable_reg_pp4_iter1;
    sc_signal< sc_lv<1> > exitcond3_fu_734_p2;
    sc_signal< sc_logic > ap_CS_fsm_state48;
    sc_signal< sc_lv<10> > i_3_fu_740_p2;
    sc_signal< sc_lv<10> > i_3_reg_1114;
    sc_signal< sc_lv<1> > exitcond10_fu_746_p2;
    sc_signal< sc_lv<1> > ap_reg_pp5_iter1_exitcond10_reg_1119;
    sc_signal< sc_lv<10> > indvar_next3_fu_752_p2;
    sc_signal< sc_lv<10> > indvar_next3_reg_1123;
    sc_signal< sc_logic > ap_enable_reg_pp5_iter0;
    sc_signal< sc_lv<8> > mem_V_addr_3_read_reg_1128;
    sc_signal< sc_logic > ap_CS_fsm_state52;
    sc_signal< sc_lv<16> > rhs_V_fu_768_p1;
    sc_signal< sc_lv<16> > rhs_V_reg_1138;
    sc_signal< sc_logic > ap_CS_fsm_state54;
    sc_signal< sc_lv<1> > exitcond5_fu_772_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp6_stage0;
    sc_signal< sc_lv<1> > ap_reg_pp6_iter1_exitcond5_reg_1143;
    sc_signal< sc_lv<1> > ap_reg_pp6_iter2_exitcond5_reg_1143;
    sc_signal< sc_lv<1> > ap_reg_pp6_iter4_exitcond5_reg_1143;
    sc_signal< sc_lv<1> > ap_reg_pp6_iter5_exitcond5_reg_1143;
    sc_signal< sc_lv<1> > ap_reg_pp6_iter6_exitcond5_reg_1143;
    sc_signal< sc_lv<10> > j_1_fu_778_p2;
    sc_signal< sc_logic > ap_enable_reg_pp6_iter0;
    sc_signal< sc_lv<9> > l1_result_V_addr_2_reg_1157;
    sc_signal< sc_lv<9> > ap_reg_pp6_iter1_l1_result_V_addr_2_reg_1157;
    sc_signal< sc_lv<9> > ap_reg_pp6_iter2_l1_result_V_addr_2_reg_1157;
    sc_signal< sc_lv<9> > ap_reg_pp6_iter3_l1_result_V_addr_2_reg_1157;
    sc_signal< sc_lv<9> > ap_reg_pp6_iter4_l1_result_V_addr_2_reg_1157;
    sc_signal< sc_lv<9> > ap_reg_pp6_iter5_l1_result_V_addr_2_reg_1157;
    sc_signal< sc_lv<9> > ap_reg_pp6_iter6_l1_result_V_addr_2_reg_1157;
    sc_signal< sc_lv<8> > weights_1_q0;
    sc_signal< sc_lv<8> > weights_1_load_reg_1163;
    sc_signal< sc_logic > ap_enable_reg_pp6_iter2;
    sc_signal< sc_lv<32> > grp_fu_964_p3;
    sc_signal< sc_lv<32> > tmp_13_reg_1173;
    sc_signal< sc_logic > ap_enable_reg_pp6_iter6;
    sc_signal< sc_lv<1> > exitcond4_fu_793_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp7_stage0;
    sc_signal< bool > ap_block_state64_pp7_stage0_iter0;
    sc_signal< bool > ap_block_state65_pp7_stage0_iter1;
    sc_signal< bool > ap_block_state66_pp7_stage0_iter2;
    sc_signal< bool > ap_block_pp7_stage0_11001;
    sc_signal< sc_lv<10> > i_4_fu_799_p2;
    sc_signal< sc_logic > ap_enable_reg_pp7_iter0;
    sc_signal< sc_lv<9> > l1_result_V_addr_1_reg_1187;
    sc_signal< sc_lv<9> > ap_reg_pp7_iter1_l1_result_V_addr_1_reg_1187;
    sc_signal< sc_lv<33> > tmp_4_cast_fu_818_p1;
    sc_signal< sc_lv<33> > tmp_4_cast_reg_1196;
    sc_signal< sc_logic > ap_CS_fsm_state67;
    sc_signal< sc_logic > ap_sig_ioackin_out_V_AWREADY;
    sc_signal< bool > ap_block_state68_io;
    sc_signal< sc_lv<10> > i_5_fu_827_p2;
    sc_signal< sc_lv<10> > i_5_reg_1205;
    sc_signal< sc_lv<13> > tmp_15_fu_859_p2;
    sc_signal< sc_lv<13> > tmp_15_reg_1210;
    sc_signal< sc_lv<32> > mem_V_addr_4_reg_1221;
    sc_signal< sc_logic > ap_CS_fsm_state69;
    sc_signal< sc_lv<1> > exitcond12_fu_893_p2;
    sc_signal< sc_lv<1> > ap_reg_pp8_iter1_exitcond12_reg_1227;
    sc_signal< sc_lv<4> > indvar_next5_fu_899_p2;
    sc_signal< sc_lv<4> > indvar_next5_reg_1231;
    sc_signal< sc_logic > ap_enable_reg_pp8_iter0;
    sc_signal< sc_lv<8> > mem_V_addr_4_read_reg_1236;
    sc_signal< sc_logic > ap_CS_fsm_state80;
    sc_signal< sc_lv<1> > exitcond_fu_915_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp9_stage0;
    sc_signal< sc_lv<1> > ap_reg_pp9_iter1_exitcond_reg_1246;
    sc_signal< sc_lv<1> > ap_reg_pp9_iter2_exitcond_reg_1246;
    sc_signal< sc_lv<1> > ap_reg_pp9_iter3_exitcond_reg_1246;
    sc_signal< sc_lv<1> > ap_reg_pp9_iter4_exitcond_reg_1246;
    sc_signal< sc_lv<1> > ap_reg_pp9_iter5_exitcond_reg_1246;
    sc_signal< sc_lv<1> > ap_reg_pp9_iter6_exitcond_reg_1246;
    sc_signal< sc_lv<1> > ap_reg_pp9_iter8_exitcond_reg_1246;
    sc_signal< sc_lv<1> > ap_reg_pp9_iter9_exitcond_reg_1246;
    sc_signal< sc_lv<4> > j_2_fu_921_p2;
    sc_signal< sc_logic > ap_enable_reg_pp9_iter0;
    sc_signal< sc_lv<4> > l2_result_V_addr_2_reg_1260;
    sc_signal< sc_lv<4> > ap_reg_pp9_iter1_l2_result_V_addr_2_reg_1260;
    sc_signal< sc_lv<4> > ap_reg_pp9_iter2_l2_result_V_addr_2_reg_1260;
    sc_signal< sc_lv<4> > ap_reg_pp9_iter3_l2_result_V_addr_2_reg_1260;
    sc_signal< sc_lv<4> > ap_reg_pp9_iter4_l2_result_V_addr_2_reg_1260;
    sc_signal< sc_lv<4> > ap_reg_pp9_iter5_l2_result_V_addr_2_reg_1260;
    sc_signal< sc_lv<4> > ap_reg_pp9_iter6_l2_result_V_addr_2_reg_1260;
    sc_signal< sc_lv<4> > ap_reg_pp9_iter7_l2_result_V_addr_2_reg_1260;
    sc_signal< sc_lv<4> > ap_reg_pp9_iter8_l2_result_V_addr_2_reg_1260;
    sc_signal< sc_lv<4> > ap_reg_pp9_iter9_l2_result_V_addr_2_reg_1260;
    sc_signal< sc_lv<8> > weights_2_q0;
    sc_signal< sc_lv<8> > weights_2_load_reg_1266;
    sc_signal< sc_logic > ap_enable_reg_pp9_iter1;
    sc_signal< sc_lv<32> > grp_fu_936_p2;
    sc_signal< sc_lv<32> > tmp_20_reg_1276;
    sc_signal< sc_lv<32> > tmp_21_fu_942_p2;
    sc_signal< sc_lv<32> > tmp_21_reg_1281;
    sc_signal< sc_lv<1> > exitcond11_fu_947_p2;
    sc_signal< sc_lv<4> > indvar_next4_fu_953_p2;
    sc_signal< sc_logic > ap_enable_reg_pp10_iter0;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state9;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state19;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter2;
    sc_signal< sc_logic > ap_CS_fsm_state28;
    sc_signal< bool > ap_block_pp2_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp2_exit_iter0_state29;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter2;
    sc_signal< sc_logic > ap_CS_fsm_state32;
    sc_signal< bool > ap_block_pp3_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp3_exit_iter0_state33;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter3;
    sc_signal< sc_logic > ap_CS_fsm_state37;
    sc_signal< bool > ap_block_pp4_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp4_exit_iter0_state38;
    sc_signal< sc_logic > ap_enable_reg_pp4_iter2;
    sc_signal< bool > ap_block_pp5_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp5_exit_iter0_state49;
    sc_signal< sc_logic > ap_enable_reg_pp5_iter2;
    sc_signal< bool > ap_block_pp6_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp6_exit_iter0_state55;
    sc_signal< sc_logic > ap_enable_reg_pp6_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp6_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp6_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp6_iter7;
    sc_signal< bool > ap_block_pp7_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp7_exit_iter0_state64;
    sc_signal< sc_logic > ap_enable_reg_pp7_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp7_iter2;
    sc_signal< sc_logic > ap_CS_fsm_state76;
    sc_signal< bool > ap_block_pp8_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp8_exit_iter0_state77;
    sc_signal< sc_logic > ap_enable_reg_pp8_iter2;
    sc_signal< bool > ap_block_pp9_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp9_exit_iter0_state83;
    sc_signal< sc_logic > ap_enable_reg_pp9_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp9_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp9_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp9_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp9_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp9_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp9_iter9;
    sc_signal< sc_logic > ap_enable_reg_pp9_iter10;
    sc_signal< bool > ap_block_pp10_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp10_exit_iter0_state95;
    sc_signal< sc_lv<9> > weights_1_address0;
    sc_signal< sc_logic > weights_1_ce0;
    sc_signal< sc_logic > weights_1_we0;
    sc_signal< sc_lv<4> > weights_2_address0;
    sc_signal< sc_logic > weights_2_ce0;
    sc_signal< sc_logic > weights_2_we0;
    sc_signal< sc_lv<9> > bias_1_address0;
    sc_signal< sc_logic > bias_1_ce0;
    sc_signal< sc_logic > bias_1_we0;
    sc_signal< sc_lv<4> > bias_2_address0;
    sc_signal< sc_logic > bias_2_ce0;
    sc_signal< sc_logic > bias_2_we0;
    sc_signal< sc_lv<10> > inputs_address0;
    sc_signal< sc_logic > inputs_ce0;
    sc_signal< sc_logic > inputs_we0;
    sc_signal< sc_lv<8> > inputs_q0;
    sc_signal< sc_lv<9> > l1_result_V_address0;
    sc_signal< sc_logic > l1_result_V_ce0;
    sc_signal< sc_logic > l1_result_V_we0;
    sc_signal< sc_lv<32> > l1_result_V_d0;
    sc_signal< sc_lv<9> > l1_result_V_address1;
    sc_signal< sc_logic > l1_result_V_ce1;
    sc_signal< sc_logic > l1_result_V_we1;
    sc_signal< sc_lv<4> > l2_result_V_address0;
    sc_signal< sc_logic > l2_result_V_ce0;
    sc_signal< sc_logic > l2_result_V_we0;
    sc_signal< sc_lv<32> > l2_result_V_d0;
    sc_signal< sc_lv<4> > l2_result_V_address1;
    sc_signal< sc_logic > l2_result_V_ce1;
    sc_signal< sc_logic > l2_result_V_we1;
    sc_signal< sc_lv<10> > ap_phi_mux_indvar_phi_fu_444_p4;
    sc_signal< sc_lv<10> > ap_phi_mux_indvar1_phi_fu_456_p4;
    sc_signal< sc_lv<4> > ap_phi_mux_indvar2_phi_fu_468_p4;
    sc_signal< sc_lv<10> > i8_reg_498;
    sc_signal< sc_logic > ap_CS_fsm_state63;
    sc_signal< sc_logic > ap_CS_fsm_state47;
    sc_signal< sc_lv<10> > ap_phi_mux_indvar3_phi_fu_514_p4;
    sc_signal< sc_lv<10> > i4_reg_544;
    sc_signal< sc_logic > ap_CS_fsm_state94;
    sc_signal< sc_lv<4> > ap_phi_mux_indvar5_phi_fu_560_p4;
    sc_signal< sc_lv<64> > tmp_5_fu_623_p1;
    sc_signal< sc_lv<64> > tmp_4_fu_650_p1;
    sc_signal< sc_lv<64> > tmp_8_fu_677_p1;
    sc_signal< bool > ap_block_pp3_stage0;
    sc_signal< bool > ap_block_pp4_stage0;
    sc_signal< sc_lv<64> > tmp_25_fu_758_p1;
    sc_signal< sc_lv<64> > tmp_s_fu_763_p1;
    sc_signal< sc_lv<64> > tmp_11_fu_784_p1;
    sc_signal< bool > ap_block_pp6_stage0;
    sc_signal< sc_lv<64> > tmp_7_fu_805_p1;
    sc_signal< bool > ap_block_pp7_stage0;
    sc_signal< sc_lv<64> > tmp_31_fu_905_p1;
    sc_signal< sc_lv<64> > tmp_17_fu_910_p1;
    sc_signal< sc_lv<64> > tmp_18_fu_927_p1;
    sc_signal< bool > ap_block_pp9_stage0;
    sc_signal< sc_lv<64> > tmp_30_fu_959_p1;
    sc_signal< sc_lv<64> > tmp_fu_601_p1;
    sc_signal< sc_lv<64> > tmp_1_fu_628_p1;
    sc_signal< sc_lv<64> > tmp_2_fu_655_p1;
    sc_signal< sc_lv<64> > tmp_10_fu_724_p1;
    sc_signal< sc_lv<64> > tmp_14_fu_865_p1;
    sc_signal< sc_lv<64> > p_sum_cast_fu_883_p1;
    sc_signal< sc_logic > ap_reg_ioackin_mem_V_ARREADY;
    sc_signal< sc_logic > ap_reg_ioackin_out_V_AWREADY;
    sc_signal< sc_logic > ap_reg_ioackin_out_V_WREADY;
    sc_signal< bool > ap_block_pp10_stage0_01001;
    sc_signal< sc_logic > ap_CS_fsm_state53;
    sc_signal< sc_lv<32> > p_s_fu_699_p1;
    sc_signal< sc_lv<1> > tmp_24_fu_810_p3;
    sc_signal< sc_logic > ap_CS_fsm_state81;
    sc_signal< sc_lv<9> > tmp_27_fu_833_p1;
    sc_signal< sc_lv<12> > p_shl_fu_837_p3;
    sc_signal< sc_lv<10> > tmp_28_fu_849_p2;
    sc_signal< sc_lv<13> > p_shl1_cast_fu_855_p1;
    sc_signal< sc_lv<13> > p_shl_cast_fu_845_p1;
    sc_signal< sc_lv<33> > tmp_16_cast_fu_875_p1;
    sc_signal< sc_lv<33> > p_sum_fu_878_p2;
    sc_signal< sc_lv<8> > grp_fu_964_p1;
    sc_signal< sc_lv<66> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    sc_signal< sc_logic > ap_idle_pp2;
    sc_signal< sc_logic > ap_enable_pp2;
    sc_signal< sc_logic > ap_idle_pp3;
    sc_signal< sc_logic > ap_enable_pp3;
    sc_signal< sc_logic > ap_idle_pp4;
    sc_signal< sc_logic > ap_enable_pp4;
    sc_signal< sc_logic > ap_idle_pp5;
    sc_signal< sc_logic > ap_enable_pp5;
    sc_signal< sc_logic > ap_idle_pp6;
    sc_signal< sc_logic > ap_enable_pp6;
    sc_signal< sc_logic > ap_idle_pp7;
    sc_signal< sc_logic > ap_enable_pp7;
    sc_signal< sc_logic > ap_idle_pp8;
    sc_signal< sc_logic > ap_enable_pp8;
    sc_signal< sc_logic > ap_idle_pp9;
    sc_signal< sc_logic > ap_enable_pp9;
    sc_signal< sc_logic > ap_idle_pp10;
    sc_signal< sc_logic > ap_enable_pp10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<66> ap_ST_fsm_state1;
    static const sc_lv<66> ap_ST_fsm_state2;
    static const sc_lv<66> ap_ST_fsm_state3;
    static const sc_lv<66> ap_ST_fsm_state4;
    static const sc_lv<66> ap_ST_fsm_state5;
    static const sc_lv<66> ap_ST_fsm_state6;
    static const sc_lv<66> ap_ST_fsm_state7;
    static const sc_lv<66> ap_ST_fsm_state8;
    static const sc_lv<66> ap_ST_fsm_pp0_stage0;
    static const sc_lv<66> ap_ST_fsm_state12;
    static const sc_lv<66> ap_ST_fsm_state13;
    static const sc_lv<66> ap_ST_fsm_state14;
    static const sc_lv<66> ap_ST_fsm_state15;
    static const sc_lv<66> ap_ST_fsm_state16;
    static const sc_lv<66> ap_ST_fsm_state17;
    static const sc_lv<66> ap_ST_fsm_state18;
    static const sc_lv<66> ap_ST_fsm_pp1_stage0;
    static const sc_lv<66> ap_ST_fsm_state22;
    static const sc_lv<66> ap_ST_fsm_state23;
    static const sc_lv<66> ap_ST_fsm_state24;
    static const sc_lv<66> ap_ST_fsm_state25;
    static const sc_lv<66> ap_ST_fsm_state26;
    static const sc_lv<66> ap_ST_fsm_state27;
    static const sc_lv<66> ap_ST_fsm_state28;
    static const sc_lv<66> ap_ST_fsm_pp2_stage0;
    static const sc_lv<66> ap_ST_fsm_state32;
    static const sc_lv<66> ap_ST_fsm_pp3_stage0;
    static const sc_lv<66> ap_ST_fsm_state37;
    static const sc_lv<66> ap_ST_fsm_pp4_stage0;
    static const sc_lv<66> ap_ST_fsm_state41;
    static const sc_lv<66> ap_ST_fsm_state42;
    static const sc_lv<66> ap_ST_fsm_state43;
    static const sc_lv<66> ap_ST_fsm_state44;
    static const sc_lv<66> ap_ST_fsm_state45;
    static const sc_lv<66> ap_ST_fsm_state46;
    static const sc_lv<66> ap_ST_fsm_state47;
    static const sc_lv<66> ap_ST_fsm_state48;
    static const sc_lv<66> ap_ST_fsm_pp5_stage0;
    static const sc_lv<66> ap_ST_fsm_state52;
    static const sc_lv<66> ap_ST_fsm_state53;
    static const sc_lv<66> ap_ST_fsm_state54;
    static const sc_lv<66> ap_ST_fsm_pp6_stage0;
    static const sc_lv<66> ap_ST_fsm_state63;
    static const sc_lv<66> ap_ST_fsm_pp7_stage0;
    static const sc_lv<66> ap_ST_fsm_state67;
    static const sc_lv<66> ap_ST_fsm_state68;
    static const sc_lv<66> ap_ST_fsm_state69;
    static const sc_lv<66> ap_ST_fsm_state70;
    static const sc_lv<66> ap_ST_fsm_state71;
    static const sc_lv<66> ap_ST_fsm_state72;
    static const sc_lv<66> ap_ST_fsm_state73;
    static const sc_lv<66> ap_ST_fsm_state74;
    static const sc_lv<66> ap_ST_fsm_state75;
    static const sc_lv<66> ap_ST_fsm_state76;
    static const sc_lv<66> ap_ST_fsm_pp8_stage0;
    static const sc_lv<66> ap_ST_fsm_state80;
    static const sc_lv<66> ap_ST_fsm_state81;
    static const sc_lv<66> ap_ST_fsm_state82;
    static const sc_lv<66> ap_ST_fsm_pp9_stage0;
    static const sc_lv<66> ap_ST_fsm_state94;
    static const sc_lv<66> ap_ST_fsm_pp10_stage0;
    static const sc_lv<66> ap_ST_fsm_state98;
    static const sc_lv<66> ap_ST_fsm_state99;
    static const sc_lv<66> ap_ST_fsm_state100;
    static const sc_lv<66> ap_ST_fsm_state101;
    static const sc_lv<66> ap_ST_fsm_state102;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<32> ap_const_lv32_25;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<32> ap_const_lv32_36;
    static const sc_lv<32> ap_const_lv32_2D;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_41;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_MEM_V_TARGET_ADDR;
    static const int C_M_AXI_MEM_V_USER_VALUE;
    static const int C_M_AXI_MEM_V_PROT_VALUE;
    static const int C_M_AXI_MEM_V_CACHE_VALUE;
    static const int C_M_AXI_DATA_WIDTH;
    static const int C_M_AXI_OUT_V_TARGET_ADDR;
    static const int C_M_AXI_OUT_V_USER_VALUE;
    static const int C_M_AXI_OUT_V_PROT_VALUE;
    static const int C_M_AXI_OUT_V_CACHE_VALUE;
    static const sc_lv<32> ap_const_lv32_39;
    static const sc_lv<32> ap_const_lv32_3C;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_24;
    static const sc_lv<32> ap_const_lv32_26;
    static const sc_lv<32> ap_const_lv32_28;
    static const sc_lv<32> ap_const_lv32_29;
    static const sc_lv<32> ap_const_lv32_2B;
    static const sc_lv<32> ap_const_lv32_2C;
    static const sc_lv<32> ap_const_lv32_2E;
    static const sc_lv<32> ap_const_lv32_37;
    static const sc_lv<32> ap_const_lv32_3A;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<32> ap_const_lv32_35;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_2A;
    static const sc_lv<32> ap_const_lv32_23;
    static const sc_lv<32> ap_const_lv32_3B;
    static const sc_lv<32> ap_const_lv32_310;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_200;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_62000;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<32> ap_const_lv32_27;
    static const sc_lv<32> ap_const_lv32_38;
    static const sc_lv<10> ap_const_lv10_310;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<10> ap_const_lv10_200;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<8> ap_const_lv8_0;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const8();
    void thread_ap_var_for_const9();
    void thread_ap_var_for_const7();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp10_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_pp2_stage0();
    void thread_ap_CS_fsm_pp3_stage0();
    void thread_ap_CS_fsm_pp4_stage0();
    void thread_ap_CS_fsm_pp5_stage0();
    void thread_ap_CS_fsm_pp6_stage0();
    void thread_ap_CS_fsm_pp7_stage0();
    void thread_ap_CS_fsm_pp8_stage0();
    void thread_ap_CS_fsm_pp9_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state102();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state28();
    void thread_ap_CS_fsm_state32();
    void thread_ap_CS_fsm_state37();
    void thread_ap_CS_fsm_state41();
    void thread_ap_CS_fsm_state47();
    void thread_ap_CS_fsm_state48();
    void thread_ap_CS_fsm_state52();
    void thread_ap_CS_fsm_state53();
    void thread_ap_CS_fsm_state54();
    void thread_ap_CS_fsm_state63();
    void thread_ap_CS_fsm_state67();
    void thread_ap_CS_fsm_state68();
    void thread_ap_CS_fsm_state69();
    void thread_ap_CS_fsm_state70();
    void thread_ap_CS_fsm_state76();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state80();
    void thread_ap_CS_fsm_state81();
    void thread_ap_CS_fsm_state82();
    void thread_ap_CS_fsm_state94();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp10_stage0();
    void thread_ap_block_pp10_stage0_01001();
    void thread_ap_block_pp10_stage0_11001();
    void thread_ap_block_pp10_stage0_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_pp2_stage0();
    void thread_ap_block_pp2_stage0_11001();
    void thread_ap_block_pp2_stage0_subdone();
    void thread_ap_block_pp3_stage0();
    void thread_ap_block_pp3_stage0_11001();
    void thread_ap_block_pp3_stage0_subdone();
    void thread_ap_block_pp4_stage0();
    void thread_ap_block_pp4_stage0_11001();
    void thread_ap_block_pp4_stage0_subdone();
    void thread_ap_block_pp5_stage0();
    void thread_ap_block_pp5_stage0_11001();
    void thread_ap_block_pp5_stage0_subdone();
    void thread_ap_block_pp6_stage0();
    void thread_ap_block_pp6_stage0_11001();
    void thread_ap_block_pp6_stage0_subdone();
    void thread_ap_block_pp7_stage0();
    void thread_ap_block_pp7_stage0_11001();
    void thread_ap_block_pp7_stage0_subdone();
    void thread_ap_block_pp8_stage0();
    void thread_ap_block_pp8_stage0_11001();
    void thread_ap_block_pp8_stage0_subdone();
    void thread_ap_block_pp9_stage0();
    void thread_ap_block_pp9_stage0_11001();
    void thread_ap_block_pp9_stage0_subdone();
    void thread_ap_block_state10_pp0_stage0_iter1();
    void thread_ap_block_state11_pp0_stage0_iter2();
    void thread_ap_block_state19_pp1_stage0_iter0();
    void thread_ap_block_state20_pp1_stage0_iter1();
    void thread_ap_block_state21_pp1_stage0_iter2();
    void thread_ap_block_state29_pp2_stage0_iter0();
    void thread_ap_block_state30_pp2_stage0_iter1();
    void thread_ap_block_state31_pp2_stage0_iter2();
    void thread_ap_block_state33_pp3_stage0_iter0();
    void thread_ap_block_state34_pp3_stage0_iter1();
    void thread_ap_block_state35_pp3_stage0_iter2();
    void thread_ap_block_state36_pp3_stage0_iter3();
    void thread_ap_block_state38_pp4_stage0_iter0();
    void thread_ap_block_state39_pp4_stage0_iter1();
    void thread_ap_block_state40_pp4_stage0_iter2();
    void thread_ap_block_state49_pp5_stage0_iter0();
    void thread_ap_block_state50_pp5_stage0_iter1();
    void thread_ap_block_state51_pp5_stage0_iter2();
    void thread_ap_block_state55_pp6_stage0_iter0();
    void thread_ap_block_state56_pp6_stage0_iter1();
    void thread_ap_block_state57_pp6_stage0_iter2();
    void thread_ap_block_state58_pp6_stage0_iter3();
    void thread_ap_block_state59_pp6_stage0_iter4();
    void thread_ap_block_state60_pp6_stage0_iter5();
    void thread_ap_block_state61_pp6_stage0_iter6();
    void thread_ap_block_state62_pp6_stage0_iter7();
    void thread_ap_block_state64_pp7_stage0_iter0();
    void thread_ap_block_state65_pp7_stage0_iter1();
    void thread_ap_block_state66_pp7_stage0_iter2();
    void thread_ap_block_state68_io();
    void thread_ap_block_state77_pp8_stage0_iter0();
    void thread_ap_block_state78_pp8_stage0_iter1();
    void thread_ap_block_state79_pp8_stage0_iter2();
    void thread_ap_block_state83_pp9_stage0_iter0();
    void thread_ap_block_state84_pp9_stage0_iter1();
    void thread_ap_block_state85_pp9_stage0_iter2();
    void thread_ap_block_state86_pp9_stage0_iter3();
    void thread_ap_block_state87_pp9_stage0_iter4();
    void thread_ap_block_state88_pp9_stage0_iter5();
    void thread_ap_block_state89_pp9_stage0_iter6();
    void thread_ap_block_state90_pp9_stage0_iter7();
    void thread_ap_block_state91_pp9_stage0_iter8();
    void thread_ap_block_state92_pp9_stage0_iter9();
    void thread_ap_block_state93_pp9_stage0_iter10();
    void thread_ap_block_state95_pp10_stage0_iter0();
    void thread_ap_block_state96_pp10_stage0_iter1();
    void thread_ap_block_state97_io();
    void thread_ap_block_state97_pp10_stage0_iter2();
    void thread_ap_block_state9_pp0_stage0_iter0();
    void thread_ap_condition_pp0_exit_iter0_state9();
    void thread_ap_condition_pp10_exit_iter0_state95();
    void thread_ap_condition_pp1_exit_iter0_state19();
    void thread_ap_condition_pp2_exit_iter0_state29();
    void thread_ap_condition_pp3_exit_iter0_state33();
    void thread_ap_condition_pp4_exit_iter0_state38();
    void thread_ap_condition_pp5_exit_iter0_state49();
    void thread_ap_condition_pp6_exit_iter0_state55();
    void thread_ap_condition_pp7_exit_iter0_state64();
    void thread_ap_condition_pp8_exit_iter0_state77();
    void thread_ap_condition_pp9_exit_iter0_state83();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_enable_pp10();
    void thread_ap_enable_pp2();
    void thread_ap_enable_pp3();
    void thread_ap_enable_pp4();
    void thread_ap_enable_pp5();
    void thread_ap_enable_pp6();
    void thread_ap_enable_pp7();
    void thread_ap_enable_pp8();
    void thread_ap_enable_pp9();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_idle_pp10();
    void thread_ap_idle_pp2();
    void thread_ap_idle_pp3();
    void thread_ap_idle_pp4();
    void thread_ap_idle_pp5();
    void thread_ap_idle_pp6();
    void thread_ap_idle_pp7();
    void thread_ap_idle_pp8();
    void thread_ap_idle_pp9();
    void thread_ap_phi_mux_indvar1_phi_fu_456_p4();
    void thread_ap_phi_mux_indvar2_phi_fu_468_p4();
    void thread_ap_phi_mux_indvar3_phi_fu_514_p4();
    void thread_ap_phi_mux_indvar5_phi_fu_560_p4();
    void thread_ap_phi_mux_indvar_phi_fu_444_p4();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_ioackin_mem_V_ARREADY();
    void thread_ap_sig_ioackin_out_V_AWREADY();
    void thread_ap_sig_ioackin_out_V_WREADY();
    void thread_bias_1_address0();
    void thread_bias_1_ce0();
    void thread_bias_1_we0();
    void thread_bias_2_address0();
    void thread_bias_2_ce0();
    void thread_bias_2_we0();
    void thread_exitcond10_fu_746_p2();
    void thread_exitcond11_fu_947_p2();
    void thread_exitcond12_fu_893_p2();
    void thread_exitcond1_fu_682_p2();
    void thread_exitcond2_fu_703_p2();
    void thread_exitcond3_fu_734_p2();
    void thread_exitcond4_fu_793_p2();
    void thread_exitcond5_fu_772_p2();
    void thread_exitcond6_fu_821_p2();
    void thread_exitcond7_fu_638_p2();
    void thread_exitcond8_fu_665_p2();
    void thread_exitcond9_fu_611_p2();
    void thread_exitcond_fu_915_p2();
    void thread_grp_fu_964_p1();
    void thread_i_1_fu_688_p2();
    void thread_i_2_fu_709_p2();
    void thread_i_3_fu_740_p2();
    void thread_i_4_fu_799_p2();
    void thread_i_5_fu_827_p2();
    void thread_indvar_next1_fu_644_p2();
    void thread_indvar_next2_fu_671_p2();
    void thread_indvar_next3_fu_752_p2();
    void thread_indvar_next4_fu_953_p2();
    void thread_indvar_next5_fu_899_p2();
    void thread_indvar_next_fu_617_p2();
    void thread_inputs_address0();
    void thread_inputs_ce0();
    void thread_inputs_we0();
    void thread_j_1_fu_778_p2();
    void thread_j_2_fu_921_p2();
    void thread_l1_result_V_address0();
    void thread_l1_result_V_address1();
    void thread_l1_result_V_ce0();
    void thread_l1_result_V_ce1();
    void thread_l1_result_V_d0();
    void thread_l1_result_V_we0();
    void thread_l1_result_V_we1();
    void thread_l2_result_V_address0();
    void thread_l2_result_V_address1();
    void thread_l2_result_V_ce0();
    void thread_l2_result_V_ce1();
    void thread_l2_result_V_d0();
    void thread_l2_result_V_we0();
    void thread_l2_result_V_we1();
    void thread_mem_V_ARADDR();
    void thread_mem_V_ARLEN();
    void thread_mem_V_ARVALID();
    void thread_mem_V_RREADY();
    void thread_mem_V_blk_n_AR();
    void thread_mem_V_blk_n_R();
    void thread_out_V_AWADDR();
    void thread_out_V_AWVALID();
    void thread_out_V_BREADY();
    void thread_out_V_WVALID();
    void thread_out_V_blk_n_AW();
    void thread_out_V_blk_n_B();
    void thread_out_V_blk_n_W();
    void thread_p_s_fu_699_p1();
    void thread_p_shl1_cast_fu_855_p1();
    void thread_p_shl_cast_fu_845_p1();
    void thread_p_shl_fu_837_p3();
    void thread_p_sum_cast_fu_883_p1();
    void thread_p_sum_fu_878_p2();
    void thread_rhs_V_fu_768_p1();
    void thread_tmp_10_fu_724_p1();
    void thread_tmp_11_fu_784_p1();
    void thread_tmp_14_fu_865_p1();
    void thread_tmp_15_fu_859_p2();
    void thread_tmp_16_cast_fu_875_p1();
    void thread_tmp_17_fu_910_p1();
    void thread_tmp_18_fu_927_p1();
    void thread_tmp_1_fu_628_p1();
    void thread_tmp_21_fu_942_p2();
    void thread_tmp_24_fu_810_p3();
    void thread_tmp_25_fu_758_p1();
    void thread_tmp_27_fu_833_p1();
    void thread_tmp_28_fu_849_p2();
    void thread_tmp_2_fu_655_p1();
    void thread_tmp_30_fu_959_p1();
    void thread_tmp_31_fu_905_p1();
    void thread_tmp_3_fu_694_p1();
    void thread_tmp_4_cast_fu_818_p1();
    void thread_tmp_4_fu_650_p1();
    void thread_tmp_5_fu_623_p1();
    void thread_tmp_6_fu_715_p1();
    void thread_tmp_7_fu_805_p1();
    void thread_tmp_8_fu_677_p1();
    void thread_tmp_fu_601_p1();
    void thread_tmp_s_fu_763_p1();
    void thread_weights_1_address0();
    void thread_weights_1_ce0();
    void thread_weights_1_we0();
    void thread_weights_2_address0();
    void thread_weights_2_ce0();
    void thread_weights_2_we0();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
