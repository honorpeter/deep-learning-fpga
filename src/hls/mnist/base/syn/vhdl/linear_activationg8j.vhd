-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity linear_activationg8j_rom is 
    generic(
             dwidth     : integer := 80; 
             awidth     : integer := 7; 
             mem_size    : integer := 128
    ); 
    port (
          addr0      : in std_logic_vector(awidth-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(dwidth-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of linear_activationg8j_rom is 

signal addr0_tmp : std_logic_vector(awidth-1 downto 0); 
type mem_array is array (0 to mem_size-1) of std_logic_vector (dwidth-1 downto 0); 
signal mem : mem_array := (
    0 => "00000010111110010000001111011000111101101110100000001000111100100000011111111101", 
    1 => "11111110111101101111101111101100000010111110111011111110110100011110001000000010", 
    2 => "11111010110000100000001100000001000010100000101011111110111111011110110011100000", 
    3 => "00000000000000100000010000000011111111110000000111101110111111111110001100000011", 
    4 => "11011010111011010001000000000000000111011110101011110110111111100000001011010000", 
    5 => "00000011000001111111001111111111111110100000010111111110111101000000001111111101", 
    6 => "00001111000000101110010100001111000000011110001011100000111111101111110000000111", 
    7 => "11110010111110000000100000000001111100100000100111010100111101010000111111101001", 
    8 => "00000011000001101111101000000010111110011111101100000100111110011111000000000100", 
    9 => "11110000000001000000011100000000111011100000101000000011111110000000100111100101", 
    10 => "00000010000000010000001111101011110111000000100011110111000001001110111111111100", 
    11 => "11011111111110101110010000010010000011011111111100001100111110000000001011100101", 
    12 => "11011010111101010001100011110010000011101101001011101001111110001101111100010000", 
    13 => "11110010000010011101110100001010000000111111111011100111000000111110001000001001", 
    14 => "11100001000000010000101100001010111111110000001100000010000001101111011111111000", 
    15 => "11110110110110111110011111101100000011000000001111111001111101111111010111110100", 
    16 => "00001000000001000000010111100110000001111101011100000100000010101110111000000010", 
    17 => "11111010111111101110100100000110000001001101110011110100111011010000100000001011", 
    18 => "11101100000001100000101100000100111100111111111011001101111011000000011011110001", 
    19 => "11111001110110111101010111100111000100101111101011100100000100001111011111110100", 
    20 => "11110100000001000000110111110100110110100001010111101110111110111111000011100010", 
    21 => "11001111111100110000000011110111000001011101000111111000000101110000101111111001", 
    22 => "11111000110110111111101111011010000010010001010000001101000000111110011100001011", 
    23 => "00000100000010011110111011011010110111101111000000001010000010111111100011110110", 
    24 => "00000101111110111111110000000110000001110000011111110001111111111100111011110111", 
    25 => "11101110000011001111010011110110000100110001010011000011110111010000100011111110", 
    26 => "11111101110100110000110100000110111100100000010011100011000011101111010111111100", 
    27 => "00001000000001110000001100001100000001001110100011111110111001010000010011110101", 
    28 => "00000111111010101110111000000111111111100000100011011010000100101110100011111101", 
    29 => "11011000110110101111110111111010111100100000000100010001000011111111011011101110", 
    30 => "11100000111001001100101011111110000100011110010011010101110010000001110111101010", 
    31 => "00010111000000001110010000010010111100101111010011011000111110011111101011110111", 
    32 => "00000000111100001111101000010001111000101111001000000001000001000000010100000011", 
    33 => "11101001111000100000111000001011110111111111111011110111111111011111100111101000", 
    34 => "00001010111110111111111011011001111000011111001000001000000010011111110100001000", 
    35 => "11111000111001101111110000001100111100010001101000000111110111010001111011100100", 
    36 => "11111011110001111110001011010010000010111011110000001101111110100000111000000010", 
    37 => "10110011110101110001001111111001110110101110000000001000000101000000000111100100", 
    38 => "00000011000010010000000011111101111111110000010011111111111110001110111011110000", 
    39 => "11011000000010101111111100000001111001011110111111100110000010110000001011111011", 
    40 => "00000100111011001111110011111010111101111110010111111010111011010000110011111110", 
    41 => "11011111111111011111101011111010000001011101010011111111000011100000111011011010", 
    42 => "11111101110111000000011111110110000001011110000100011001111010011111001111111011", 
    43 => "00000111111101111110111111111101111010111111000000001000000000111111000100001110", 
    44 => "00001010000010010000000100000010111100011111111111111100111001101110110000001000", 
    45 => "11111010000110000000011011111100111011010000001111101011000001110000111111011000", 
    46 => "11101001000000111111001000000000111101001110110111111010000000110000111011111011", 
    47 => "11100110000100010000001011101001000001101101100111111111000001101111001100001011", 
    48 => "11111011111011101111000000001001110110110000000000010101111101101111101100000001", 
    49 => "11011110111011001110100011110110111101110000110111101010111110010000111000001001", 
    50 => "00000110000010111110100011101110000000010000110011100011111101111110111011111101", 
    51 => "11111000000001110000001111101001000100011110010011110001000101001110000111101110", 
    52 => "11110010000011101110111111111100111100110000011000001000111111100000001111111011", 
    53 => "00001000111001010000010111001010000001110000101011111101111110001111101011000100", 
    54 => "11101010111100110001010011110100111100011101101000010010111111100000000100000010", 
    55 => "00001000111000100000110111010110110110011110101011101011000011010000110011111000", 
    56 => "11101111110101011111101100010000111110110000100011110010111100010001010000001110", 
    57 => "00000111000001100000001111111110111101001111000111111111111111111110010100000101", 
    58 => "00001101111001010000010111001111111001111110001100010011000000010000101011100011", 
    59 => "00010000111101000000011011110011000110001100100111111010111111001101100111111110", 
    60 => "00000010000010001111111011011111000100001111101000010010110111110000100011100101", 
    61 => "00000110000000101111101111010101111001100000101100000110111100001111010111110001", 
    62 => "11110111111111101111110011111000111100011111010011100001000011000000001111011011", 
    63 => "00010000111100010000001011100101110111110000000011101011000000000001000111011001", 
    64 => "00001010111110010000001011101001111001110000011011101001111110101110100000000000", 
    65 => "00000000110101101110110011100100111111110000110111100000111101100001101100001001", 
    66 => "11101001111111101111101111101001111000100001001100011010111010000000000011011010", 
    67 => "00010000111010001101111111110100111111000000000000001110000000001101000011100001", 
    68 => "00000110000000001110010000001111000001101111100100001000111000011111110000001101", 
    69 => "11111110111101011110110000001101000100011101001111011000111110100000101011001111", 
    70 => "00001100111111100000000111111011111110011110111100010010000000100000001000000111", 
    71 => "00001000111010101110000011110110000101110000101011110111110001010000001110111111", 
    72 => "11011111111111011111100011111111000000100000000100000111000000111111110000000011", 
    73 => "00001000111100101111100000001100000100011110001011110011111001000000100100001101", 
    74 => "11110010000011001101011100000011000000101101111000001000111111001111000111111011", 
    75 => "00000011111111010000000011101001000001101100011000001010000001001111001100001100", 
    76 => "00000110111111110000001011011100110111000000110011110010000011000000010111111010", 
    77 => "11011011110110110001110111110011111011100000010011101100111110011111111100001000", 
    78 => "00000111000001101111101011110100110111110000110000000010111101010000001000000101", 
    79 => "11111101000000111111001100001010111110001111111000001001111110010000010111110001", 
    80 => "11111110000001101111110011011100000001010000101100001101111111101111011100000100", 
    81 => "00000011000010101101001111111011000100001110101100000100111000011110010000000011", 
    82 => "11111010000011101101111011100101000001010000010000000001111110100000000011110111", 
    83 => "11101100111100111101101100000100111111101110000100001001000000101110010100001101", 
    84 => "11110101111101101101100000001010111101010000011111100011111110101101010000001000", 
    85 => "00010000111111111111010000010000111000111110110100000111111111011101110011110001", 
    86 => "00000100111110010000011011001101111101001111110111110010111110000000100000001000", 
    87 => "11011010000000000000011011111101111110101111001011111000000010010000010011011001", 
    88 => "11110110000010001111000100001110000011001111110100000011110100000000000011111111", 
    89 => "00000110111000110000111011100110000011110000110011110001111010111110000000000000", 
    90 => "00000011000001001111100000000111000000011111110100001010000001011111011111101110", 
    91 => "11110111000100001110000011101000000000001110010111111100000010111110000111101010", 
    92 => "11111111111101111111111100001000000101111101001011111101111101011101010111010011", 
    93 => "00010111111001011101110110110111000010101111100000010001111011011111000111001101", 
    94 => "00000010000011001110011111101111000010001111111100000111111100011101011011101010", 
    95 => "00000110111110010000001100011010110110001111101100001010111110100000100111110101", 
    96 => "00000101110101100000100011111001000100101110101011110011111111111110100011101001", 
    97 => "11101100111111000000110011111000111110001101101100000110111101111110000000010100", 
    98 => "11100100000000000000001000001001111110100000011111110111111001111100101100000111", 
    99 => "11111011000001001111111011111100111110101111101100000110111110101110111100001011", 
    100 => "11100100000000000000011011101111111110001100111111111110000100001110000000001011", 
    101 => "00001011000001111111000011011011110100110000010011111110000011010000011111011111", 
    102 => "00000011111101010000100111011111110110111110100000000011000010001110100000001110", 
    103 => "11111101000010100000000011011110000001000000100000000011111101010000100111100010", 
    104 => "00000110111111110000010011011001000000111111101100000001111100011101110100000010", 
    105 => "11011010111100001111110100000111111111010001010100000000111001110001000000000010", 
    106 => "11011011111001100001100111110010000010100000101100001011111010101110011000001111", 
    107 => "00000010111001110000011011010001111111110000101100000010000000001110011111000111", 
    108 => "11101101000001101111111000000100000000010000010000000110111111001111000011111111", 
    109 => "11110011000001111110000000000011000000101111101011111011000001101111111000000101", 
    110 => "11010100000000000000100011110111111010111101111000010001000010100000011111110110", 
    111 => "11110110000100111111101100000100000010010000011011100011000000001101011011111011", 
    112 => "00000010000011111111001000000000000100000000011011101111111100011100011111101101", 
    113 => "00001000111011000000110111110011000011100000000111011111110110111111110111100101", 
    114 => "00000101000001001110110111111110000001111101111111111101111101010000000000000100", 
    115 => "00000001111111101110011011111000111111111111100000000000000011111110001000001000", 
    116 => "11011010111100111111101011101001000010001101001111111100000101001111100011111101", 
    117 => "11100101000011001110111100000001000011101101010100000111111111100000001011101101", 
    118 => "11110010111001110001000011111100111011110010001111011001111110011110100100000111", 
    119 => "11010110111001101111001111111000111111010000001111010010000100010001010011100110", 
    120 => "11010111000000100000101011101111111110111111100111101101000100011111110111100000", 
    121 => "11111110000000101110001100000011111100010000011111110111111111011111011100001000", 
    122 => "11111011000010000000100100000000111010010000010111011110000000011101111100000011", 
    123 => "00000000000001100000000011110111111111110000001011100100111110101110110100000101", 
    124 => "00000111110110111111111000000111111011010000100011111110110111110000101000000001", 
    125 => "11001101111110111111011100000101000110010000000011011101000000100000000000000000", 
    126 => "11101011000001011111011111111011111110010001000100001110111010010000101111011010", 
    127 => "11110011000000101111000000001000000001001101110000001001111110101111110100000011" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity linear_activationg8j is
    generic (
        DataWidth : INTEGER := 80;
        AddressRange : INTEGER := 128;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of linear_activationg8j is
    component linear_activationg8j_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    linear_activationg8j_rom_U :  component linear_activationg8j_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


